{"version":3,"mappings":"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","names":["value","currentTheme","jsx","React.forwardRef","ToolbarButton","jsxs","text","React.useState","React.useRef","React.useEffect","React.useLayoutEffect","size","React.useId","sources","i","codepoint","str","string","css.tokenize","css.EOFToken","css.AtKeywordToken","css.BadStringToken","css.BadURLToken","css.ColumnToken","css.CDOToken","css.CDCToken","css.SemicolonToken","css.OpenCurlyToken","css.CloseCurlyToken","css.URLToken","css.PercentageToken","css.WhitespaceToken","css.IdentToken","css.StringToken","css.NumberToken","css.CommaToken","css.OpenParenToken","css.CloseParenToken","css.FunctionToken","css.DelimToken","result","css.HashToken","css.ColonToken","css.OpenSquareToken","css.CloseSquareToken","part","selectorPart","visit","SCALAR","isScalar","isCollection","BREAK","SKIP","REMOVE","copy","res","map","schema","node","end","isBlock","_a","stringify","comment","seq","floatNaN","floatExp","float","intIdentify","intResolve","intStringify","intOct","int","intHex","pairs","omap","n","set","schema$2","tags","merge","composeNode","composeEmptyNode","isMap","CN","tag","cst","ch","start","parseOptions","setRunningFileId","React.useMemo","source","React.useCallback","ariaSnapshot","yaml","fileId","useRef","useState","useCallback","instances","_b","create","useEffect","useImperativeHandle","useMemo","props","resolve","reject","forwardRef","Fragment","progress","settings","log","createModal","ModalContainer","ReactDOM.createRoot"],"ignoreList":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,91,92],"sources":["../../../playwright/packages/web/src/uiUtils.ts","../../../playwright/packages/web/src/theme.ts","../../../playwright/packages/web/src/components/toolbar.tsx","../../../playwright/packages/web/src/components/toolbarButton.tsx","../src/dialog.tsx","../../../playwright/packages/web/src/ansi2html.ts","../../../playwright/packages/web/src/components/codeMirrorWrapper.tsx","../../../playwright/packages/web/src/components/splitView.tsx","../../../playwright/packages/web/src/components/tabbedPane.tsx","../../../playwright/packages/web/src/components/sourceChooser.tsx","../../../playwright/packages/playwright-core/src/utils/isomorphic/cssTokenizer.ts","../../../playwright/packages/playwright-core/src/utils/isomorphic/cssParser.ts","../../../playwright/packages/playwright-core/src/utils/isomorphic/selectorParser.ts","../../../playwright/packages/playwright-core/src/utils/isomorphic/stringUtils.ts","../../../playwright/packages/playwright-core/src/utils/isomorphic/locatorGenerators.ts","../../../playwright/packages/recorder/src/callLog.tsx","../../../node_modules/yaml/browser/dist/nodes/identity.js","../../../node_modules/yaml/browser/dist/visit.js","../../../node_modules/yaml/browser/dist/doc/directives.js","../../../node_modules/yaml/browser/dist/doc/anchors.js","../../../node_modules/yaml/browser/dist/doc/applyReviver.js","../../../node_modules/yaml/browser/dist/nodes/toJS.js","../../../node_modules/yaml/browser/dist/nodes/Node.js","../../../node_modules/yaml/browser/dist/nodes/Alias.js","../../../node_modules/yaml/browser/dist/nodes/Scalar.js","../../../node_modules/yaml/browser/dist/doc/createNode.js","../../../node_modules/yaml/browser/dist/nodes/Collection.js","../../../node_modules/yaml/browser/dist/stringify/stringifyComment.js","../../../node_modules/yaml/browser/dist/stringify/foldFlowLines.js","../../../node_modules/yaml/browser/dist/stringify/stringifyString.js","../../../node_modules/yaml/browser/dist/stringify/stringify.js","../../../node_modules/yaml/browser/dist/stringify/stringifyPair.js","../../../node_modules/yaml/browser/dist/log.js","../../../node_modules/yaml/browser/dist/schema/yaml-1.1/merge.js","../../../node_modules/yaml/browser/dist/nodes/addPairToJSMap.js","../../../node_modules/yaml/browser/dist/nodes/Pair.js","../../../node_modules/yaml/browser/dist/stringify/stringifyCollection.js","../../../node_modules/yaml/browser/dist/nodes/YAMLMap.js","../../../node_modules/yaml/browser/dist/schema/common/map.js","../../../node_modules/yaml/browser/dist/nodes/YAMLSeq.js","../../../node_modules/yaml/browser/dist/schema/common/seq.js","../../../node_modules/yaml/browser/dist/schema/common/string.js","../../../node_modules/yaml/browser/dist/schema/common/null.js","../../../node_modules/yaml/browser/dist/schema/core/bool.js","../../../node_modules/yaml/browser/dist/stringify/stringifyNumber.js","../../../node_modules/yaml/browser/dist/schema/core/float.js","../../../node_modules/yaml/browser/dist/schema/core/int.js","../../../node_modules/yaml/browser/dist/schema/core/schema.js","../../../node_modules/yaml/browser/dist/schema/json/schema.js","../../../node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js","../../../node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js","../../../node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js","../../../node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js","../../../node_modules/yaml/browser/dist/schema/yaml-1.1/float.js","../../../node_modules/yaml/browser/dist/schema/yaml-1.1/int.js","../../../node_modules/yaml/browser/dist/schema/yaml-1.1/set.js","../../../node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js","../../../node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js","../../../node_modules/yaml/browser/dist/schema/tags.js","../../../node_modules/yaml/browser/dist/schema/Schema.js","../../../node_modules/yaml/browser/dist/stringify/stringifyDocument.js","../../../node_modules/yaml/browser/dist/doc/Document.js","../../../node_modules/yaml/browser/dist/errors.js","../../../node_modules/yaml/browser/dist/compose/resolve-props.js","../../../node_modules/yaml/browser/dist/compose/util-contains-newline.js","../../../node_modules/yaml/browser/dist/compose/util-flow-indent-check.js","../../../node_modules/yaml/browser/dist/compose/util-map-includes.js","../../../node_modules/yaml/browser/dist/compose/resolve-block-map.js","../../../node_modules/yaml/browser/dist/compose/resolve-block-seq.js","../../../node_modules/yaml/browser/dist/compose/resolve-end.js","../../../node_modules/yaml/browser/dist/compose/resolve-flow-collection.js","../../../node_modules/yaml/browser/dist/compose/compose-collection.js","../../../node_modules/yaml/browser/dist/compose/resolve-block-scalar.js","../../../node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js","../../../node_modules/yaml/browser/dist/compose/compose-scalar.js","../../../node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js","../../../node_modules/yaml/browser/dist/compose/compose-node.js","../../../node_modules/yaml/browser/dist/compose/compose-doc.js","../../../node_modules/yaml/browser/dist/compose/composer.js","../../../node_modules/yaml/browser/dist/parse/cst-scalar.js","../../../node_modules/yaml/browser/dist/parse/cst-stringify.js","../../../node_modules/yaml/browser/dist/parse/cst-visit.js","../../../node_modules/yaml/browser/dist/parse/cst.js","../../../node_modules/yaml/browser/dist/parse/lexer.js","../../../node_modules/yaml/browser/dist/parse/line-counter.js","../../../node_modules/yaml/browser/dist/parse/parser.js","../../../node_modules/yaml/browser/dist/public-api.js","../../../playwright/packages/playwright-core/src/utils/isomorphic/ariaSnapshot.ts","../../../playwright/packages/recorder/src/recorder.tsx","../../../node_modules/react-modal-promise/src/utils/hex-gen.ts","../../../node_modules/react-modal-promise/src/utils/register-scope.ts","../../../node_modules/react-modal-promise/src/Container.tsx","../../../node_modules/react-modal-promise/src/create.tsx","../src/saveCodeForm.tsx","../src/realDataIntegration.ts","../src/selfHealingUI.tsx","../src/aiSelfHealingUI.tsx","../src/ddtService.ts","../src/ddtManager.tsx","../src/debuggerService.ts","../src/debuggerUI.tsx","../src/apiService.ts","../src/testExecutor.ts","../src/testExecutorUI.tsx","../src/apiTestingUI.tsx","../src/crxRecorder.tsx","../src/index.tsx"],"sourcesContent":["/*\n  Copyright (c) Microsoft Corporation.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport React from 'react';\n\nimport type { EffectCallback } from 'react';\n\n// Recalculates the value when dependencies change.\nexport function useAsyncMemo<T>(fn: () => Promise<T>, deps: React.DependencyList, initialValue: T, resetValue?: T) {\n  const [value, setValue] = React.useState<T>(initialValue);\n  React.useEffect(() => {\n    let canceled = false;\n    if (resetValue !== undefined)\n      setValue(resetValue);\n    fn().then(value => {\n      if (!canceled)\n        setValue(value);\n    });\n    return () => {\n      canceled = true;\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n  return value;\n}\n\n// Tracks the element size and returns it's contentRect (always has x=0, y=0).\nexport function useMeasure<T extends Element>() {\n  const ref = React.useRef<T | null>(null);\n  const [measure, setMeasure] = React.useState(new DOMRect(0, 0, 10, 10));\n  React.useLayoutEffect(() => {\n    const target = ref.current;\n    if (!target)\n      return;\n\n    const bounds = target.getBoundingClientRect();\n\n    setMeasure(new DOMRect(0, 0, bounds.width, bounds.height));\n\n    const resizeObserver = new ResizeObserver((entries: any) => {\n      const entry = entries[entries.length - 1];\n      if (entry && entry.contentRect)\n        setMeasure(entry.contentRect);\n    });\n    resizeObserver.observe(target);\n    return () => resizeObserver.disconnect();\n  }, [ref]);\n  return [measure, ref] as const;\n}\n\nexport function msToString(ms: number): string {\n  if (ms < 0 || !isFinite(ms))\n    return '-';\n\n  if (ms === 0)\n    return '0';\n\n  if (ms < 1000)\n    return ms.toFixed(0) + 'ms';\n\n  const seconds = ms / 1000;\n  if (seconds < 60)\n    return seconds.toFixed(1) + 's';\n\n  const minutes = seconds / 60;\n  if (minutes < 60)\n    return minutes.toFixed(1) + 'm';\n\n  const hours = minutes / 60;\n  if (hours < 24)\n    return hours.toFixed(1) + 'h';\n\n  const days = hours / 24;\n  return days.toFixed(1) + 'd';\n}\n\nexport function bytesToString(bytes: number): string {\n  if (bytes < 0 || !isFinite(bytes))\n    return '-';\n\n  if (bytes === 0)\n    return '0';\n\n  if (bytes < 1000)\n    return bytes.toFixed(0);\n\n  const kb = bytes / 1024;\n  if (kb < 1000)\n    return kb.toFixed(1) + 'K';\n\n  const mb = kb / 1024;\n  if (mb < 1000)\n    return mb.toFixed(1) + 'M';\n\n  const gb = mb / 1024;\n  return gb.toFixed(1) + 'G';\n}\n\nexport function lowerBound<S, T>(array: S[], object: T, comparator: (object: T, b: S) => number, left?: number, right?: number): number {\n  let l = left || 0;\n  let r = right !== undefined ? right : array.length;\n  while (l < r) {\n    const m = (l + r) >> 1;\n    if (comparator(object, array[m]) > 0)\n      l = m + 1;\n    else\n      r = m;\n  }\n  return r;\n}\n\nexport function upperBound<S, T>(array: S[], object: T, comparator: (object: T, b: S) => number, left?: number, right?: number): number {\n  let l = left || 0;\n  let r = right !== undefined ? right : array.length;\n  while (l < r) {\n    const m = (l + r) >> 1;\n    if (comparator(object, array[m]) >= 0)\n      l = m + 1;\n    else\n      r = m;\n  }\n  return r;\n}\n\nexport function copy(text: string) {\n  const textArea = document.createElement('textarea');\n  textArea.style.position = 'absolute';\n  textArea.style.zIndex = '-1000';\n  textArea.value = text;\n  document.body.appendChild(textArea);\n  textArea.select();\n  document.execCommand('copy');\n  textArea.remove();\n}\n\nexport function useSetting<S>(name: string | undefined, defaultValue: S): [S, React.Dispatch<React.SetStateAction<S>>] {\n  if (name)\n    defaultValue = settings.getObject(name, defaultValue);\n  const [value, setValue] = React.useState<S>(defaultValue);\n  const setValueWrapper = React.useCallback((value: React.SetStateAction<S>) => {\n    if (name)\n      settings.setObject(name, value);\n    else\n      setValue(value);\n  }, [name, setValue]);\n\n  React.useEffect(() => {\n    if (name) {\n      const onStoreChange = () => setValue(settings.getObject(name, defaultValue));\n      settings.onChangeEmitter.addEventListener(name, onStoreChange);\n      return () => settings.onChangeEmitter.removeEventListener(name, onStoreChange);\n    }\n  }, [defaultValue, name]);\n  return [value, setValueWrapper];\n}\n\ndeclare global {\n  interface Window {\n    saveSettings?(): void;\n  }\n}\n\nexport class Settings {\n  onChangeEmitter = new EventTarget();\n\n  getString(name: string, defaultValue: string): string {\n    return localStorage[name] || defaultValue;\n  }\n\n  setString(name: string, value: string) {\n    localStorage[name] = value;\n    this.onChangeEmitter.dispatchEvent(new Event(name));\n    window.saveSettings?.();\n  }\n\n  getObject<T>(name: string, defaultValue: T): T {\n    if (!localStorage[name])\n      return defaultValue;\n    try {\n      return JSON.parse(localStorage[name]);\n    } catch {\n      return defaultValue;\n    }\n  }\n\n  setObject<T>(name: string, value: T) {\n    localStorage[name] = JSON.stringify(value);\n    this.onChangeEmitter.dispatchEvent(new Event(name));\n    window.saveSettings?.();\n  }\n}\n\nexport const settings = new Settings();\n\n// inspired by https://www.npmjs.com/package/clsx\nexport function clsx(...classes: (string | undefined | false)[]) {\n  return classes.filter(Boolean).join(' ');\n}\n\nexport async function sha1(str: string): Promise<string> {\n  const buffer = new TextEncoder().encode(str);\n  return Array.from(new Uint8Array(await crypto.subtle.digest('SHA-1', buffer))).map(b => b.toString(16).padStart(2, '0')).join('');\n}\n\nexport function scrollIntoViewIfNeeded(element: Element | undefined) {\n  if (!element)\n    return;\n  if ((element as any)?.scrollIntoViewIfNeeded)\n    (element as any).scrollIntoViewIfNeeded(false);\n  else\n    element?.scrollIntoView();\n}\n\nconst kControlCodesRe = '\\\\u0000-\\\\u0020\\\\u007f-\\\\u009f';\nexport const kWebLinkRe = new RegExp('(?:[a-zA-Z][a-zA-Z0-9+.-]{2,}:\\\\/\\\\/|www\\\\.)[^\\\\s' + kControlCodesRe + '\"]{2,}[^\\\\s' + kControlCodesRe + '\"\\')}\\\\],:;.!?]', 'ug');\n\n/**\n * Manages flash animation state.\n * Calling `trigger` will turn `flash` to true for a second, and then back to false.\n * If `trigger` is called while a flash is ongoing, the ongoing flash will be cancelled and after 50ms a new flash is started.\n * @returns [flash, trigger]\n */\nexport function useFlash(): [boolean, EffectCallback] {\n  const [flash, setFlash] = React.useState(false);\n  const trigger = React.useCallback<React.EffectCallback>(() => {\n    const timeouts: any[] = [];\n    setFlash(currentlyFlashing => {\n      timeouts.push(setTimeout(() => setFlash(false), 1000));\n      if (!currentlyFlashing)\n        return true;\n\n      timeouts.push(setTimeout(() => setFlash(true), 50));\n      return false;\n    });\n    return () => timeouts.forEach(clearTimeout);\n  }, [setFlash]);\n  return [flash, trigger];\n}\n\nexport function useCookies() {\n  const cookies = React.useMemo(() => {\n    return document.cookie.split('; ').filter(v => v.includes('=')).map(kv => {\n      const separator = kv.indexOf('=');\n      return [kv.substring(0, separator), kv.substring(separator + 1)];\n    });\n  }, []);\n  return cookies;\n}\n","/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\n\nimport { settings } from './uiUtils';\n\ndeclare global {\n  interface Document {\n    playwrightThemeInitialized?: boolean;\n  }\n}\n\nexport function applyTheme() {\n  if (document.playwrightThemeInitialized)\n    return;\n  document.playwrightThemeInitialized = true;\n  document!.defaultView!.addEventListener('focus', (event: any) => {\n    if (event.target.document.nodeType === Node.DOCUMENT_NODE)\n      document.body.classList.remove('inactive');\n  }, false);\n  document!.defaultView!.addEventListener('blur', event => {\n    document.body.classList.add('inactive');\n  }, false);\n\n  const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');\n  const defaultTheme = prefersDarkScheme.matches ? 'dark-mode' : 'light-mode';\n\n  const currentTheme = settings.getString('theme', defaultTheme);\n  if (currentTheme === 'dark-mode')\n    document.body.classList.add('dark-mode');\n}\n\ntype Theme = 'dark-mode' | 'light-mode';\n\nconst listeners = new Set<(theme: Theme) => void>();\nexport function toggleTheme() {\n  const oldTheme = currentTheme();\n  const newTheme = oldTheme === 'dark-mode' ? 'light-mode' : 'dark-mode';\n\n  if (oldTheme)\n    document.body.classList.remove(oldTheme);\n  document.body.classList.add(newTheme);\n  settings.setString('theme', newTheme);\n  for (const listener of listeners)\n    listener(newTheme);\n}\n\nexport function addThemeListener(listener: (theme: 'light-mode' | 'dark-mode') => void) {\n  listeners.add(listener);\n}\n\nexport function removeThemeListener(listener: (theme: Theme) => void) {\n  listeners.delete(listener);\n}\n\nexport function currentTheme(): Theme {\n  return document.body.classList.contains('dark-mode') ? 'dark-mode' : 'light-mode';\n}\n\nexport function useDarkModeSetting(): [boolean, (value: boolean) => void] {\n  const [theme, setTheme] = React.useState(currentTheme() === 'dark-mode');\n  return [theme, (value: boolean) => {\n    const current = currentTheme() === 'dark-mode';\n    if (current !== value)\n      toggleTheme();\n    setTheme(value);\n  }];\n}\n","/*\n  Copyright (c) Microsoft Corporation.\n\n  Licensed under the Apache License, Version 2.0 (the 'License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport { clsx } from '../uiUtils';\nimport './toolbar.css';\nimport * as React from 'react';\n\ntype ToolbarProps = {\n  noShadow?: boolean;\n  noMinHeight?: boolean;\n  sidebarBackground?: boolean;\n  className?: string;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\nexport const Toolbar: React.FC<React.PropsWithChildren<ToolbarProps>> = ({\n  noShadow,\n  children,\n  noMinHeight,\n  className,\n  sidebarBackground,\n  onClick,\n}) => {\n  return <div className={clsx('toolbar', noShadow && 'no-shadow', noMinHeight && 'no-min-height', className, sidebarBackground && 'toolbar-sidebar-background')} onClick={onClick}>{children}</div>;\n};\n","/*\n  Copyright (c) Microsoft Corporation.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport './toolbarButton.css';\nimport '../third_party/vscode/codicon.css';\nimport * as React from 'react';\nimport { clsx } from '../uiUtils';\n\nexport interface ToolbarButtonProps {\n  title?: string,\n  icon?: string,\n  disabled?: boolean,\n  toggled?: boolean,\n  onClick?: (e: React.MouseEvent) => void,\n  style?: React.CSSProperties,\n  testId?: string,\n  className?: string,\n  ariaLabel?: string,\n}\n\nexport const ToolbarButton = React.forwardRef<HTMLButtonElement, React.PropsWithChildren<ToolbarButtonProps>>(function ToolbarButton({\n  children,\n  title = '',\n  icon,\n  disabled = false,\n  toggled = false,\n  onClick = () => {},\n  style,\n  testId,\n  className,\n  ariaLabel,\n}, ref) {\n  return <button\n    ref={ref}\n    className={clsx(className, 'toolbar-button', icon, toggled && 'toggled')}\n    onMouseDown={preventDefault}\n    onClick={onClick}\n    onDoubleClick={preventDefault}\n    title={title}\n    disabled={!!disabled}\n    style={style}\n    data-testid={testId}\n    aria-label={ariaLabel || title}\n  >\n    {icon && <span className={`codicon codicon-${icon}`} style={children ? { marginRight: 5 } : {}}></span>}\n    {children}\n  </button>;\n});\n\nexport const ToolbarSeparator: React.FC<{ style?: React.CSSProperties }> = ({\n  style,\n}) => {\n  return <div className='toolbar-separator' style={style}></div>;\n};\n\nconst preventDefault = (e: any) => {\n  e.stopPropagation();\n  e.preventDefault();\n};\n","/**\r\n * Copyright (c) Rui Figueira.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport React from 'react';\r\nimport './dialog.css';\r\n\r\nexport const Dialog: React.FC<React.PropsWithChildren<{\r\n    isOpen: boolean,\r\n    onClose: () => any,\r\n    title: string,\r\n}>> = ({ isOpen, onClose, title, children }) => {\r\n  if (!isOpen)\r\n    return null;\r\n\r\n  return (\r\n    <div className='dialog-overlay' role='dialog' aria-label={title} onClick={onClose}>\r\n      <div className='dialog-box' onClick={e => e.stopPropagation()}>\r\n        <div className='dialog-header'>\r\n          <h2>{title}</h2>\r\n          <button className='dialog-close' onClick={onClose}>\r\n            &times;\r\n          </button>\r\n        </div>\r\n        <div className='dialog-content'>{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/*\n  Copyright (c) Microsoft Corporation.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nexport function ansi2html(text: string, defaultColors?: { bg: string, fg: string }): string {\n  const regex = /(\\x1b\\[(\\d+(;\\d+)*)m)|([^\\x1b]+)/g;\n  const tokens: string[] = [];\n  let match;\n  let style: any = {};\n\n  let reverse = false;\n  let fg: string | undefined = defaultColors?.fg;\n  let bg: string | undefined = defaultColors?.bg;\n\n  while ((match = regex.exec(text)) !== null) {\n    const [, , codeStr, , text] = match;\n    if (codeStr) {\n      const code = +codeStr;\n      switch (code) {\n        case 0: style = {}; break;\n        case 1: style['font-weight'] = 'bold'; break;\n        case 2: style['opacity'] = '0.8'; break;\n        case 3: style['font-style'] = 'italic'; break;\n        case 4: style['text-decoration'] = 'underline'; break;\n        case 7:\n          reverse = true;\n          break;\n        case 8: style.display = 'none'; break;\n        case 9: style['text-decoration'] = 'line-through'; break;\n        case 22:\n          delete style['font-weight'];\n          delete style['font-style'];\n          delete style['opacity'];\n          delete style['text-decoration'];\n          break;\n        case 23:\n          delete style['font-weight'];\n          delete style['font-style'];\n          delete style['opacity'];\n          break;\n        case 24:\n          delete style['text-decoration'];\n          break;\n        case 27:\n          reverse = false;\n          break;\n        case 30:\n        case 31:\n        case 32:\n        case 33:\n        case 34:\n        case 35:\n        case 36:\n        case 37:\n          fg = ansiColors[code - 30];\n          break;\n        case 39:\n          fg = defaultColors?.fg;\n          break;\n        case 40:\n        case 41:\n        case 42:\n        case 43:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n          bg = ansiColors[code - 40];\n          break;\n        case 49:\n          bg = defaultColors?.bg;\n          break;\n        case 53: style['text-decoration'] = 'overline'; break;\n        case 90:\n        case 91:\n        case 92:\n        case 93:\n        case 94:\n        case 95:\n        case 96:\n        case 97:\n          fg = brightAnsiColors[code - 90];\n          break;\n        case 100:\n        case 101:\n        case 102:\n        case 103:\n        case 104:\n        case 105:\n        case 106:\n        case 107:\n          bg = brightAnsiColors[code - 100];\n          break;\n      }\n    } else if (text) {\n      const styleCopy = { ...style };\n      const color = reverse ? bg : fg;\n      if (color !== undefined)\n        styleCopy['color'] = color;\n      const backgroundColor = reverse ? fg : bg;\n      if (backgroundColor !== undefined)\n        styleCopy['background-color'] = backgroundColor;\n      tokens.push(`<span style=\"${styleBody(styleCopy)}\">${escapeHTML(text)}</span>`);\n    }\n  }\n  return tokens.join('');\n}\n\nconst ansiColors: Record<number, string> = {\n  0: 'var(--vscode-terminal-ansiBlack)',\n  1: 'var(--vscode-terminal-ansiRed)',\n  2: 'var(--vscode-terminal-ansiGreen)',\n  3: 'var(--vscode-terminal-ansiYellow)',\n  4: 'var(--vscode-terminal-ansiBlue)',\n  5: 'var(--vscode-terminal-ansiMagenta)',\n  6: 'var(--vscode-terminal-ansiCyan)',\n  7: 'var(--vscode-terminal-ansiWhite)',\n};\n\nconst brightAnsiColors: Record<number, string> = {\n  0: 'var(--vscode-terminal-ansiBrightBlack)',\n  1: 'var(--vscode-terminal-ansiBrightRed)',\n  2: 'var(--vscode-terminal-ansiBrightGreen)',\n  3: 'var(--vscode-terminal-ansiBrightYellow)',\n  4: 'var(--vscode-terminal-ansiBrightBlue)',\n  5: 'var(--vscode-terminal-ansiBrightMagenta)',\n  6: 'var(--vscode-terminal-ansiBrightCyan)',\n  7: 'var(--vscode-terminal-ansiBrightWhite)',\n};\n\nfunction escapeHTML(text: string): string {\n  return text.replace(/[&\"<>]/g, c => ({ '&': '&amp;', '\"': '&quot;', '<': '&lt;', '>': '&gt;' }[c]!));\n}\n\nfunction styleBody(style: any): string {\n  return Object.entries(style).map(([name, value]) => `${name}: ${value}`).join('; ');\n}\n","/*\n  Copyright (c) Microsoft Corporation.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport './codeMirrorWrapper.css';\nimport * as React from 'react';\nimport type { CodeMirror } from './codeMirrorModule';\nimport { ansi2html } from '../ansi2html';\nimport { useMeasure, kWebLinkRe } from '../uiUtils';\n\nexport type SourceHighlight = {\n  line: number;\n  column?: number;\n  type: 'running' | 'paused' | 'error' | 'subtle-error';\n  message?: string;\n};\n\nexport type Language = 'javascript' | 'python' | 'java' | 'csharp' | 'jsonl' | 'html' | 'css' | 'markdown' | 'yaml';\n\nexport const lineHeight = 20;\n\nexport interface SourceProps {\n  text: string;\n  language?: Language;\n  mimeType?: string;\n  linkify?: boolean;\n  readOnly?: boolean;\n  // 1-based\n  highlight?: SourceHighlight[];\n  revealLine?: number;\n  lineNumbers?: boolean;\n  isFocused?: boolean;\n  focusOnChange?: boolean;\n  wrapLines?: boolean;\n  onChange?: (text: string) => void;\n  onCursorActivity?: (position: { line: number }) => void;\n  dataTestId?: string;\n  placeholder?: string;\n}\n\nexport const CodeMirrorWrapper: React.FC<SourceProps> = ({\n  text,\n  language,\n  mimeType,\n  linkify,\n  readOnly,\n  highlight,\n  revealLine,\n  lineNumbers,\n  isFocused,\n  focusOnChange,\n  wrapLines,\n  onChange,\n  onCursorActivity,\n  dataTestId,\n  placeholder,\n}) => {\n  const [measure, codemirrorElement] = useMeasure<HTMLDivElement>();\n  const [modulePromise] = React.useState<Promise<CodeMirror>>(import('./codeMirrorModule').then(m => m.default));\n  const codemirrorRef = React.useRef<{\n    cm: CodeMirror.Editor,\n    highlight?: SourceHighlight[],\n    widgets?: CodeMirror.LineWidget[],\n    markers?: CodeMirror.TextMarker[],\n  } | null>(null);\n  const [codemirror, setCodemirror] = React.useState<CodeMirror.Editor>();\n\n  React.useEffect(() => {\n    (async () => {\n      // Always load the module first.\n      const CodeMirror = await modulePromise;\n      defineCustomMode(CodeMirror);\n\n      const element = codemirrorElement.current;\n      if (!element)\n        return;\n\n      const mode = languageToMode(language) || mimeTypeToMode(mimeType) || (linkify ? 'text/linkified' : '');\n\n      if (codemirrorRef.current\n        && mode === codemirrorRef.current.cm.getOption('mode')\n        && !!readOnly === codemirrorRef.current.cm.getOption('readOnly')\n        && lineNumbers === codemirrorRef.current.cm.getOption('lineNumbers')\n        && wrapLines === codemirrorRef.current.cm.getOption('lineWrapping')\n        && placeholder === codemirrorRef.current.cm.getOption('placeholder')) {\n        // No need to re-create codemirror.\n        return;\n      }\n\n      // Either configuration is different or we don't have a codemirror yet.\n      codemirrorRef.current?.cm?.getWrapperElement().remove();\n      const cm = CodeMirror(element, {\n        value: '',\n        mode,\n        readOnly: !!readOnly,\n        lineNumbers,\n        lineWrapping: wrapLines,\n        placeholder,\n      });\n      codemirrorRef.current = { cm };\n      if (isFocused)\n        cm.focus();\n      setCodemirror(cm);\n      return cm;\n    })();\n  }, [modulePromise, codemirror, codemirrorElement, language, mimeType, linkify, lineNumbers, wrapLines, readOnly, isFocused, placeholder]);\n\n  React.useEffect(() => {\n    if (codemirrorRef.current)\n      codemirrorRef.current.cm.setSize(measure.width, measure.height);\n  }, [measure]);\n\n  React.useLayoutEffect(() => {\n    if (!codemirror)\n      return;\n\n    let valueChanged = false;\n    if (codemirror.getValue() !== text) {\n      codemirror.setValue(text);\n      valueChanged = true;\n      if (focusOnChange) {\n        codemirror.execCommand('selectAll');\n        codemirror.focus();\n      }\n    }\n\n    if (valueChanged || JSON.stringify(highlight) !== JSON.stringify(codemirrorRef.current!.highlight)) {\n      // Line highlight.\n      for (const h of codemirrorRef.current!.highlight || [])\n        codemirror.removeLineClass(h.line - 1, 'wrap');\n      for (const h of highlight || [])\n        codemirror.addLineClass(h.line - 1, 'wrap', `source-line-${h.type}`);\n\n      // Error widgets.\n      for (const w of codemirrorRef.current!.widgets || [])\n        codemirror.removeLineWidget(w);\n      for (const m of codemirrorRef.current!.markers || [])\n        m.clear();\n      const widgets: CodeMirror.LineWidget[] = [];\n      const markers: CodeMirror.TextMarker[] = [];\n      for (const h of highlight || []) {\n        if (h.type !== 'subtle-error' && h.type !== 'error')\n          continue;\n\n        const line = codemirrorRef.current?.cm.getLine(h.line - 1);\n        if (line) {\n          const attributes: Record<string, string> = {};\n          attributes['title'] = h.message || '';\n          markers.push(codemirror.markText(\n              { line: h.line - 1, ch: 0 },\n              { line: h.line - 1, ch: h.column || line.length },\n              { className: 'source-line-error-underline', attributes }));\n        }\n\n        if (h.type === 'error') {\n          const errorWidgetElement = document.createElement('div');\n          errorWidgetElement.innerHTML = ansi2html(h.message || '');\n          errorWidgetElement.className = 'source-line-error-widget';\n          widgets.push(codemirror.addLineWidget(h.line, errorWidgetElement, { above: true, coverGutter: false }));\n        }\n      }\n\n      // Error markers.\n      codemirrorRef.current!.highlight = highlight;\n      codemirrorRef.current!.widgets = widgets;\n      codemirrorRef.current!.markers = markers;\n    }\n\n    // Line-less locations have line = 0, but they mean to reveal the file.\n    if (typeof revealLine === 'number' && codemirrorRef.current!.cm.lineCount() >= revealLine)\n      codemirror.scrollIntoView({ line: Math.max(0, revealLine - 1), ch: 0 }, 50);\n\n    let changeListener: () => void | undefined;\n    if (onChange) {\n      changeListener = () => onChange(codemirror.getValue());\n      codemirror.on('change', changeListener);\n    }\n\n    let cursorActivityListener: () => void | undefined;\n    if (onCursorActivity) {\n      cursorActivityListener = () => {\n        if (codemirrorRef.current!.cm.hasFocus())\n          onCursorActivity(codemirrorRef.current!.cm.getCursor());\n      };\n      codemirror.on('cursorActivity', cursorActivityListener);\n    }\n\n    return () => {\n      if (changeListener)\n        codemirror.off('change', changeListener);\n      if (cursorActivityListener)\n        codemirror.off('cursorActivity', cursorActivityListener);\n    };\n  }, [codemirror, text, highlight, revealLine, focusOnChange, onChange, onCursorActivity]);\n\n  return <div data-testid={dataTestId} className='cm-wrapper' ref={codemirrorElement} onClick={onCodeMirrorClick}></div>;\n};\n\nfunction onCodeMirrorClick(event: React.MouseEvent) {\n  if (!(event.target instanceof HTMLElement))\n    return;\n  let url: string | undefined;\n  if (event.target.classList.contains('cm-linkified')) {\n    // 'text/linkified' custom mode\n    url = event.target.textContent!;\n  } else if (event.target.classList.contains('cm-link') && event.target.nextElementSibling?.classList.contains('cm-url')) {\n    // 'markdown' mode\n    url = event.target.nextElementSibling.textContent!.slice(1, -1);\n  }\n  if (url) {\n    event.preventDefault();\n    event.stopPropagation();\n    window.open(url, '_blank');\n  }\n}\n\nlet customModeDefined = false;\nfunction defineCustomMode(cm: CodeMirror) {\n  if (customModeDefined)\n    return;\n  customModeDefined = true;\n  (cm as any).defineSimpleMode('text/linkified', {\n    start: [\n      { regex: kWebLinkRe, token: 'linkified' },\n    ],\n  });\n}\n\nfunction mimeTypeToMode(mimeType: string | undefined): string | undefined {\n  if (!mimeType)\n    return;\n  if (mimeType.includes('javascript') || mimeType.includes('json'))\n    return 'javascript';\n  if (mimeType.includes('python'))\n    return 'python';\n  if (mimeType.includes('csharp'))\n    return 'text/x-csharp';\n  if (mimeType.includes('java'))\n    return 'text/x-java';\n  if (mimeType.includes('markdown'))\n    return 'markdown';\n  if (mimeType.includes('html') || mimeType.includes('svg'))\n    return 'htmlmixed';\n  if (mimeType.includes('css'))\n    return 'css';\n}\n\nfunction languageToMode(language: Language | undefined): string | undefined {\n  if (!language)\n    return;\n  return {\n    javascript: 'javascript',\n    jsonl: 'javascript',\n    python: 'python',\n    csharp: 'text/x-csharp',\n    java: 'text/x-java',\n    markdown: 'markdown',\n    html: 'htmlmixed',\n    css: 'css',\n    yaml: 'yaml',\n  }[language];\n}\n","/*\n  Copyright (c) Microsoft Corporation.\n\n  Licensed under the Apache License, Version 2.0 (the 'License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport { clsx, useMeasure, useSetting } from '../uiUtils';\nimport './splitView.css';\nimport * as React from 'react';\n\nexport type SplitViewProps = {\n  sidebarSize: number;\n  sidebarHidden?: boolean;\n  sidebarIsFirst?: boolean;\n  orientation?: 'vertical' | 'horizontal';\n  minSidebarSize?: number;\n  settingName?: string;\n\n  sidebar: React.ReactNode;\n  main: React.ReactNode;\n};\n\nconst kMinSize = 50;\n\nexport const SplitView: React.FC<SplitViewProps> = ({\n  sidebarSize,\n  sidebarHidden = false,\n  sidebarIsFirst = false,\n  orientation = 'vertical',\n  minSidebarSize = kMinSize,\n  settingName,\n  sidebar,\n  main,\n}) => {\n  const defaultSize = Math.max(minSidebarSize, sidebarSize) * window.devicePixelRatio;\n  const [hSize, setHSize] = useSetting<number>(settingName ? settingName + '.' + orientation + ':size' : undefined, defaultSize);\n  const [vSize, setVSize] = useSetting<number>(settingName ? settingName + '.' + orientation + ':size' : undefined, defaultSize);\n\n  const [resizing, setResizing] = React.useState<{ offset: number, size: number } | null>(null);\n  const [measure, ref] = useMeasure<HTMLDivElement>();\n\n  let size: number;\n  if (orientation === 'vertical') {\n    size = vSize / window.devicePixelRatio;\n    if (measure && measure.height < size)\n      size = measure.height - 10;\n  } else {\n    size = hSize / window.devicePixelRatio;\n    if (measure && measure.width < size)\n      size = measure.width - 10;\n  }\n\n  document.body.style.userSelect = resizing ? 'none' : 'inherit';\n  let resizerStyle: any = {};\n  if (orientation === 'vertical') {\n    if (sidebarIsFirst)\n      resizerStyle = { top: resizing ? 0 : size - 4, bottom: resizing ? 0 : undefined, height: resizing ? 'initial' : 8 };\n    else\n      resizerStyle = { bottom: resizing ? 0 : size - 4, top: resizing ? 0 : undefined, height: resizing ? 'initial' : 8 };\n  } else {\n    if (sidebarIsFirst)\n      resizerStyle = { left: resizing ? 0 : size - 4, right: resizing ? 0 : undefined, width: resizing ? 'initial' : 8 };\n    else\n      resizerStyle = { right: resizing ? 0 : size - 4, left: resizing ? 0 : undefined, width: resizing ? 'initial' : 8 };\n  }\n\n  return <div className={clsx('split-view', orientation, sidebarIsFirst && 'sidebar-first')} ref={ref}>\n    <div className='split-view-main'>{main}</div>\n    {!sidebarHidden && <div style={{ flexBasis: size }} className='split-view-sidebar'>{sidebar}</div>}\n    {!sidebarHidden && <div\n      style={resizerStyle}\n      className='split-view-resizer'\n      onMouseDown={event => setResizing({ offset: orientation === 'vertical' ? event.clientY : event.clientX, size })}\n      onMouseUp={() => setResizing(null)}\n      onMouseMove={event => {\n        if (!event.buttons) {\n          setResizing(null);\n        } else if (resizing) {\n          const offset = orientation === 'vertical' ? event.clientY : event.clientX;\n          const delta = offset - resizing.offset;\n          const newSize = sidebarIsFirst ? resizing.size + delta : resizing.size - delta;\n\n          const splitView = (event.target as HTMLElement).parentElement!;\n          const rect = splitView.getBoundingClientRect();\n          const size = Math.min(Math.max(minSidebarSize, newSize), (orientation === 'vertical' ? rect.height : rect.width) - minSidebarSize);\n          if (orientation === 'vertical')\n            setVSize(size * window.devicePixelRatio);\n          else\n            setHSize(size * window.devicePixelRatio);\n        }\n      }}\n    ></div>}\n  </div>;\n};\n","/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { clsx } from '../uiUtils';\nimport './tabbedPane.css';\nimport { Toolbar } from './toolbar';\nimport * as React from 'react';\n\nexport interface TabbedPaneTabModel {\n  id: string;\n  title: string;\n  count?: number;\n  errorCount?: number;\n  component?: React.ReactElement;\n  render?: () => React.ReactElement;\n}\n\nexport const TabbedPane: React.FunctionComponent<{\n  tabs: TabbedPaneTabModel[],\n  leftToolbar?: React.ReactElement[],\n  rightToolbar?: React.ReactElement[],\n  selectedTab?: string,\n  setSelectedTab?: (tab: string) => void,\n  dataTestId?: string,\n  mode?: 'default' | 'select',\n}> = ({ tabs, selectedTab, setSelectedTab, leftToolbar, rightToolbar, dataTestId, mode }) => {\n  const id = React.useId();\n  if (!selectedTab)\n    selectedTab = tabs[0].id;\n  if (!mode)\n    mode = 'default';\n  return <div className='tabbed-pane' data-testid={dataTestId}>\n    <div className='vbox'>\n      <Toolbar>\n        { leftToolbar && <div style={{ flex: 'none', display: 'flex', margin: '0 4px', alignItems: 'center' }}>\n          {...leftToolbar}\n        </div>}\n        {mode === 'default' && <div style={{ flex: 'auto', display: 'flex', height: '100%', overflow: 'hidden' }} role='tablist'>\n          {[...tabs.map(tab => (\n            <TabbedPaneTab\n              key={tab.id}\n              id={tab.id}\n              ariaControls={`${id}-${tab.id}`}\n              title={tab.title}\n              count={tab.count}\n              errorCount={tab.errorCount}\n              selected={selectedTab === tab.id}\n              onSelect={setSelectedTab}\n            />)),\n          ]}\n        </div>}\n        {mode === 'select' && <div style={{ flex: 'auto', display: 'flex', height: '100%', overflow: 'hidden' }} role='tablist'>\n          <select style={{ width: '100%', background: 'none', cursor: 'pointer' }} value={selectedTab} onChange={e => {\n            setSelectedTab?.(tabs[e.currentTarget.selectedIndex].id);\n          }}>\n            {tabs.map(tab => {\n              let suffix = '';\n              if (tab.count)\n                suffix = ` (${tab.count})`;\n              if (tab.errorCount)\n                suffix = ` (${tab.errorCount})`;\n              return <option key={tab.id} value={tab.id} role='tab' aria-controls={`${id}-${tab.id}`}>{tab.title}{suffix}</option>;\n            })}\n          </select>\n        </div>}\n        {rightToolbar && <div style={{ flex: 'none', display: 'flex', alignItems: 'center' }}>\n          {...rightToolbar}\n        </div>}\n      </Toolbar>\n      {\n        tabs.map(tab => {\n          const className = 'tab-content tab-' + tab.id;\n          if (tab.component)\n            return <div key={tab.id} id={`${id}-${tab.id}`} role='tabpanel' aria-label={tab.title} className={className} style={{ display: selectedTab === tab.id ? 'inherit' : 'none' }}>{tab.component}</div>;\n          if (selectedTab === tab.id)\n            return <div key={tab.id} id={`${id}-${tab.id}`} role='tabpanel' aria-label={tab.title} className={className}>{tab.render!()}</div>;\n        })\n      }\n    </div>\n  </div>;\n};\n\nexport const TabbedPaneTab: React.FunctionComponent<{\n  id: string,\n  title: string,\n  count?: number,\n  errorCount?: number,\n  selected?: boolean,\n  onSelect?: (id: string) => void,\n  ariaControls?: string,\n}> = ({ id, title, count, errorCount, selected, onSelect, ariaControls }) => {\n  return <div className={clsx('tabbed-pane-tab', selected && 'selected')}\n    onClick={() => onSelect?.(id)}\n    role='tab'\n    title={title}\n    aria-controls={ariaControls}>\n    <div className='tabbed-pane-tab-label'>{title}</div>\n    {!!count && <div className='tabbed-pane-tab-counter'>{count}</div>}\n    {!!errorCount && <div className='tabbed-pane-tab-counter error'>{errorCount}</div>}\n  </div>;\n};\n","/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\nimport type { Source } from '@recorder/recorderTypes';\n\nexport const SourceChooser: React.FC<{\n  sources: Source[],\n  fileId: string | undefined,\n  setFileId: (fileId: string) => void,\n}> = ({ sources, fileId, setFileId }) => {\n  return <select className='source-chooser' hidden={!sources.length} title='Source chooser' value={fileId} onChange={event => {\n    setFileId(event.target.selectedOptions[0].value);\n  }}>{renderSourceOptions(sources)}</select>;\n};\n\nfunction renderSourceOptions(sources: Source[]): React.ReactNode {\n  const transformTitle = (title: string): string => title.replace(/.*[/\\\\]([^/\\\\]+)/, '$1');\n  const renderOption = (source: Source): React.ReactNode => (\n    <option key={source.id} value={source.id}>{transformTitle(source.label)}</option>\n  );\n\n  const sourcesByGroups = new Map<string, Source[]>();\n  for (const source of sources) {\n    let list = sourcesByGroups.get(source.group || 'Debugger');\n    if (!list) {\n      list = [];\n      sourcesByGroups.set(source.group || 'Debugger', list);\n    }\n    list.push(source);\n  }\n\n  return [...sourcesByGroups.entries()].map(([group, sources]) => (\n    <optgroup label={group} key={group}>\n      {sources.filter(s => (s.group || 'Debugger') === group).map(source => renderOption(source))}\n    </optgroup>\n  ));\n}\n\nexport function emptySource(): Source {\n  return {\n    id: 'default',\n    isRecorded: false,\n    text: '',\n    language: 'javascript',\n    label: '',\n    highlight: []\n  };\n}\n","/* eslint-disable notice/notice */\r\n\r\n/*\r\n * The code in this file is licensed under the CC0 license.\r\n * http://creativecommons.org/publicdomain/zero/1.0/\r\n * It is free to use for any purpose. No attribution, permission, or reproduction of this license is required.\r\n */\r\n\r\n// Original at https://github.com/tabatkins/parse-css\r\n// Changes:\r\n//   - JS is replaced with TS.\r\n//   - Universal Module Definition wrapper is removed.\r\n//   - Everything not related to tokenizing - below the first exports block - is removed.\r\n\r\nexport interface CSSTokenInterface {\r\n  toSource(): string;\r\n  value: string | number | undefined;\r\n}\r\n\r\nconst between = function(num: number, first: number, last: number) { return num >= first && num <= last; };\r\nfunction digit(code: number) { return between(code, 0x30, 0x39); }\r\nfunction hexdigit(code: number) { return digit(code) || between(code, 0x41, 0x46) || between(code, 0x61, 0x66); }\r\nfunction uppercaseletter(code: number) { return between(code, 0x41, 0x5a); }\r\nfunction lowercaseletter(code: number) { return between(code, 0x61, 0x7a); }\r\nfunction letter(code: number) { return uppercaseletter(code) || lowercaseletter(code); }\r\nfunction nonascii(code: number) { return code >= 0x80; }\r\nfunction namestartchar(code: number) { return letter(code) || nonascii(code) || code === 0x5f; }\r\nfunction namechar(code: number) { return namestartchar(code) || digit(code) || code === 0x2d; }\r\nfunction nonprintable(code: number) { return between(code, 0, 8) || code === 0xb || between(code, 0xe, 0x1f) || code === 0x7f; }\r\nfunction newline(code: number) { return code === 0xa; }\r\nfunction whitespace(code: number) { return newline(code) || code === 9 || code === 0x20; }\r\n\r\nconst maximumallowedcodepoint = 0x10ffff;\r\n\r\nexport class InvalidCharacterError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n    this.name = 'InvalidCharacterError';\r\n  }\r\n}\r\n\r\nfunction preprocess(str: string): number[] {\r\n  // Turn a string into an array of code points,\r\n  // following the preprocessing cleanup rules.\r\n  const codepoints = [];\r\n  for (let i = 0; i < str.length; i++) {\r\n    let code = str.charCodeAt(i);\r\n    if (code === 0xd && str.charCodeAt(i + 1) === 0xa) {\r\n      code = 0xa; i++;\r\n    }\r\n    if (code === 0xd || code === 0xc)\r\n      code = 0xa;\r\n    if (code === 0x0)\r\n      code = 0xfffd;\r\n    if (between(code, 0xd800, 0xdbff) && between(str.charCodeAt(i + 1), 0xdc00, 0xdfff)) {\r\n      // Decode a surrogate pair into an astral codepoint.\r\n      const lead = code - 0xd800;\r\n      const trail = str.charCodeAt(i + 1) - 0xdc00;\r\n      code = Math.pow(2, 16) + lead * Math.pow(2, 10) + trail;\r\n      i++;\r\n    }\r\n    codepoints.push(code);\r\n  }\r\n  return codepoints;\r\n}\r\n\r\nfunction stringFromCode(code: number) {\r\n  if (code <= 0xffff)\r\n    return String.fromCharCode(code);\r\n  // Otherwise, encode astral char as surrogate pair.\r\n  code -= Math.pow(2, 16);\r\n  const lead = Math.floor(code / Math.pow(2, 10)) + 0xd800;\r\n  const trail = code % Math.pow(2, 10) + 0xdc00;\r\n  return String.fromCharCode(lead) + String.fromCharCode(trail);\r\n}\r\n\r\nexport function tokenize(str1: string): CSSTokenInterface[] {\r\n  const str = preprocess(str1);\r\n  let i = -1;\r\n  const tokens: CSSTokenInterface[] = [];\r\n  let code: number;\r\n\r\n  // Line number information.\r\n  let line = 0;\r\n  let column = 0;\r\n  // The only use of lastLineLength is in reconsume().\r\n  let lastLineLength = 0;\r\n  const incrLineno = function() {\r\n    line += 1;\r\n    lastLineLength = column;\r\n    column = 0;\r\n  };\r\n  const locStart = { line: line, column: column };\r\n\r\n  const codepoint = function(i: number): number {\r\n    if (i >= str.length)\r\n      return -1;\r\n\r\n    return str[i];\r\n  };\r\n  const next = function(num?: number) {\r\n    if (num === undefined)\r\n      num = 1;\r\n    if (num > 3)\r\n      throw 'Spec Error: no more than three codepoints of lookahead.';\r\n    return codepoint(i + num);\r\n  };\r\n  const consume = function(num?: number): boolean {\r\n    if (num === undefined)\r\n      num = 1;\r\n    i += num;\r\n    code = codepoint(i);\r\n    if (newline(code))\r\n      incrLineno();\r\n    else\r\n      column += num;\r\n    // console.log('Consume '+i+' '+String.fromCharCode(code) + ' 0x' + code.toString(16));\r\n    return true;\r\n  };\r\n  const reconsume = function() {\r\n    i -= 1;\r\n    if (newline(code)) {\r\n      line -= 1;\r\n      column = lastLineLength;\r\n    } else {\r\n      column -= 1;\r\n    }\r\n    locStart.line = line;\r\n    locStart.column = column;\r\n    return true;\r\n  };\r\n  const eof = function(codepoint?: number): boolean {\r\n    if (codepoint === undefined)\r\n      codepoint = code;\r\n    return codepoint === -1;\r\n  };\r\n  const donothing = function() { };\r\n  const parseerror = function() {\r\n    // Language bindings don't like writing to stdout!\r\n    // console.log('Parse error at index ' + i + ', processing codepoint 0x' + code.toString(16) + '.'); return true;\r\n  };\r\n\r\n  const consumeAToken = function(): CSSTokenInterface {\r\n    consumeComments();\r\n    consume();\r\n    if (whitespace(code)) {\r\n      while (whitespace(next()))\r\n        consume();\r\n      return new WhitespaceToken();\r\n    } else if (code === 0x22) {return consumeAStringToken();} else if (code === 0x23) {\r\n      if (namechar(next()) || areAValidEscape(next(1), next(2))) {\r\n        const token = new HashToken('');\r\n        if (wouldStartAnIdentifier(next(1), next(2), next(3)))\r\n          token.type = 'id';\r\n        token.value = consumeAName();\r\n        return token;\r\n      } else {\r\n        return new DelimToken(code);\r\n      }\r\n    } else if (code === 0x24) {\r\n      if (next() === 0x3d) {\r\n        consume();\r\n        return new SuffixMatchToken();\r\n      } else {\r\n        return new DelimToken(code);\r\n      }\r\n    } else if (code === 0x27) {return consumeAStringToken();} else if (code === 0x28) {return new OpenParenToken();} else if (code === 0x29) {return new CloseParenToken();} else if (code === 0x2a) {\r\n      if (next() === 0x3d) {\r\n        consume();\r\n        return new SubstringMatchToken();\r\n      } else {\r\n        return new DelimToken(code);\r\n      }\r\n    } else if (code === 0x2b) {\r\n      if (startsWithANumber()) {\r\n        reconsume();\r\n        return consumeANumericToken();\r\n      } else {\r\n        return new DelimToken(code);\r\n      }\r\n    } else if (code === 0x2c) {return new CommaToken();} else if (code === 0x2d) {\r\n      if (startsWithANumber()) {\r\n        reconsume();\r\n        return consumeANumericToken();\r\n      } else if (next(1) === 0x2d && next(2) === 0x3e) {\r\n        consume(2);\r\n        return new CDCToken();\r\n      } else if (startsWithAnIdentifier()) {\r\n        reconsume();\r\n        return consumeAnIdentlikeToken();\r\n      } else {\r\n        return new DelimToken(code);\r\n      }\r\n    } else if (code === 0x2e) {\r\n      if (startsWithANumber()) {\r\n        reconsume();\r\n        return consumeANumericToken();\r\n      } else {\r\n        return new DelimToken(code);\r\n      }\r\n    } else if (code === 0x3a) {return new ColonToken();} else if (code === 0x3b) {return new SemicolonToken();} else if (code === 0x3c) {\r\n      if (next(1) === 0x21 && next(2) === 0x2d && next(3) === 0x2d) {\r\n        consume(3);\r\n        return new CDOToken();\r\n      } else {\r\n        return new DelimToken(code);\r\n      }\r\n    } else if (code === 0x40) {\r\n      if (wouldStartAnIdentifier(next(1), next(2), next(3)))\r\n        return new AtKeywordToken(consumeAName());\r\n      else\r\n        return new DelimToken(code);\r\n\r\n    } else if (code === 0x5b) {return new OpenSquareToken();} else if (code === 0x5c) {\r\n      if (startsWithAValidEscape()) {\r\n        reconsume();\r\n        return consumeAnIdentlikeToken();\r\n      } else {\r\n        parseerror();\r\n        return new DelimToken(code);\r\n      }\r\n    } else if (code === 0x5d) {return new CloseSquareToken();} else if (code === 0x5e) {\r\n      if (next() === 0x3d) {\r\n        consume();\r\n        return new PrefixMatchToken();\r\n      } else {\r\n        return new DelimToken(code);\r\n      }\r\n    } else if (code === 0x7b) {return new OpenCurlyToken();} else if (code === 0x7c) {\r\n      if (next() === 0x3d) {\r\n        consume();\r\n        return new DashMatchToken();\r\n      } else if (next() === 0x7c) {\r\n        consume();\r\n        return new ColumnToken();\r\n      } else {\r\n        return new DelimToken(code);\r\n      }\r\n    } else if (code === 0x7d) {return new CloseCurlyToken();} else if (code === 0x7e) {\r\n      if (next() === 0x3d) {\r\n        consume();\r\n        return new IncludeMatchToken();\r\n      } else {\r\n        return new DelimToken(code);\r\n      }\r\n    } else if (digit(code)) {\r\n      reconsume();\r\n      return consumeANumericToken();\r\n    } else if (namestartchar(code)) {\r\n      reconsume();\r\n      return consumeAnIdentlikeToken();\r\n    } else if (eof()) {return new EOFToken();} else {return new DelimToken(code);}\r\n  };\r\n\r\n  const consumeComments = function() {\r\n    while (next(1) === 0x2f && next(2) === 0x2a) {\r\n      consume(2);\r\n      while (true) {\r\n        consume();\r\n        if (code === 0x2a && next() === 0x2f) {\r\n          consume();\r\n          break;\r\n        } else if (eof()) {\r\n          parseerror();\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const consumeANumericToken = function() {\r\n    const num = consumeANumber();\r\n    if (wouldStartAnIdentifier(next(1), next(2), next(3))) {\r\n      const token = new DimensionToken();\r\n      token.value = num.value;\r\n      token.repr = num.repr;\r\n      token.type = num.type;\r\n      token.unit = consumeAName();\r\n      return token;\r\n    } else if (next() === 0x25) {\r\n      consume();\r\n      const token = new PercentageToken();\r\n      token.value = num.value;\r\n      token.repr = num.repr;\r\n      return token;\r\n    } else {\r\n      const token = new NumberToken();\r\n      token.value = num.value;\r\n      token.repr = num.repr;\r\n      token.type = num.type;\r\n      return token;\r\n    }\r\n  };\r\n\r\n  const consumeAnIdentlikeToken = function(): CSSTokenInterface {\r\n    const str = consumeAName();\r\n    if (str.toLowerCase() === 'url' && next() === 0x28) {\r\n      consume();\r\n      while (whitespace(next(1)) && whitespace(next(2)))\r\n        consume();\r\n      if (next() === 0x22 || next() === 0x27)\r\n        return new FunctionToken(str);\r\n      else if (whitespace(next()) && (next(2) === 0x22 || next(2) === 0x27))\r\n        return new FunctionToken(str);\r\n      else\r\n        return consumeAURLToken();\r\n\r\n    } else if (next() === 0x28) {\r\n      consume();\r\n      return new FunctionToken(str);\r\n    } else {\r\n      return new IdentToken(str);\r\n    }\r\n  };\r\n\r\n  const consumeAStringToken = function(endingCodePoint?: number): CSSParserToken {\r\n    if (endingCodePoint === undefined)\r\n      endingCodePoint = code;\r\n    let string = '';\r\n    while (consume()) {\r\n      if (code === endingCodePoint || eof()) {\r\n        return new StringToken(string);\r\n      } else if (newline(code)) {\r\n        parseerror();\r\n        reconsume();\r\n        return new BadStringToken();\r\n      } else if (code === 0x5c) {\r\n        if (eof(next()))\r\n          donothing();\r\n        else if (newline(next()))\r\n          consume();\r\n        else\r\n          string += stringFromCode(consumeEscape());\r\n\r\n      } else {\r\n        string += stringFromCode(code);\r\n      }\r\n    }\r\n    throw new Error('Internal error');\r\n  };\r\n\r\n  const consumeAURLToken = function(): CSSTokenInterface {\r\n    const token = new URLToken('');\r\n    while (whitespace(next()))\r\n      consume();\r\n    if (eof(next()))\r\n      return token;\r\n    while (consume()) {\r\n      if (code === 0x29 || eof()) {\r\n        return token;\r\n      } else if (whitespace(code)) {\r\n        while (whitespace(next()))\r\n          consume();\r\n        if (next() === 0x29 || eof(next())) {\r\n          consume();\r\n          return token;\r\n        } else {\r\n          consumeTheRemnantsOfABadURL();\r\n          return new BadURLToken();\r\n        }\r\n      } else if (code === 0x22 || code === 0x27 || code === 0x28 || nonprintable(code)) {\r\n        parseerror();\r\n        consumeTheRemnantsOfABadURL();\r\n        return new BadURLToken();\r\n      } else if (code === 0x5c) {\r\n        if (startsWithAValidEscape()) {\r\n          token.value += stringFromCode(consumeEscape());\r\n        } else {\r\n          parseerror();\r\n          consumeTheRemnantsOfABadURL();\r\n          return new BadURLToken();\r\n        }\r\n      } else {\r\n        token.value += stringFromCode(code);\r\n      }\r\n    }\r\n    throw new Error('Internal error');\r\n  };\r\n\r\n  const consumeEscape = function() {\r\n    // Assume the current character is the \\\r\n    // and the next code point is not a newline.\r\n    consume();\r\n    if (hexdigit(code)) {\r\n      // Consume 1-6 hex digits\r\n      const digits = [code];\r\n      for (let total = 0; total < 5; total++) {\r\n        if (hexdigit(next())) {\r\n          consume();\r\n          digits.push(code);\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n      if (whitespace(next()))\r\n        consume();\r\n      let value = parseInt(digits.map(function(x) { return String.fromCharCode(x); }).join(''), 16);\r\n      if (value > maximumallowedcodepoint)\r\n        value = 0xfffd;\r\n      return value;\r\n    } else if (eof()) {\r\n      return 0xfffd;\r\n    } else {\r\n      return code;\r\n    }\r\n  };\r\n\r\n  const areAValidEscape = function(c1: number, c2: number) {\r\n    if (c1 !== 0x5c)\r\n      return false;\r\n    if (newline(c2))\r\n      return false;\r\n    return true;\r\n  };\r\n  const startsWithAValidEscape = function() {\r\n    return areAValidEscape(code, next());\r\n  };\r\n\r\n  const wouldStartAnIdentifier = function(c1: number, c2: number, c3: number) {\r\n    if (c1 === 0x2d)\r\n      return namestartchar(c2) || c2 === 0x2d || areAValidEscape(c2, c3);\r\n    else if (namestartchar(c1))\r\n      return true;\r\n    else if (c1 === 0x5c)\r\n      return areAValidEscape(c1, c2);\r\n    else\r\n      return false;\r\n\r\n  };\r\n  const startsWithAnIdentifier = function() {\r\n    return wouldStartAnIdentifier(code, next(1), next(2));\r\n  };\r\n\r\n  const wouldStartANumber = function(c1: number, c2: number, c3: number) {\r\n    if (c1 === 0x2b || c1 === 0x2d) {\r\n      if (digit(c2))\r\n        return true;\r\n      if (c2 === 0x2e && digit(c3))\r\n        return true;\r\n      return false;\r\n    } else if (c1 === 0x2e) {\r\n      if (digit(c2))\r\n        return true;\r\n      return false;\r\n    } else if (digit(c1)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  const startsWithANumber = function() {\r\n    return wouldStartANumber(code, next(1), next(2));\r\n  };\r\n\r\n  const consumeAName = function(): string {\r\n    let result = '';\r\n    while (consume()) {\r\n      if (namechar(code)) {\r\n        result += stringFromCode(code);\r\n      } else if (startsWithAValidEscape()) {\r\n        result += stringFromCode(consumeEscape());\r\n      } else {\r\n        reconsume();\r\n        return result;\r\n      }\r\n    }\r\n    throw new Error('Internal parse error');\r\n  };\r\n\r\n  const consumeANumber = function() {\r\n    let repr = '';\r\n    let type = 'integer';\r\n    if (next() === 0x2b || next() === 0x2d) {\r\n      consume();\r\n      repr += stringFromCode(code);\r\n    }\r\n    while (digit(next())) {\r\n      consume();\r\n      repr += stringFromCode(code);\r\n    }\r\n    if (next(1) === 0x2e && digit(next(2))) {\r\n      consume();\r\n      repr += stringFromCode(code);\r\n      consume();\r\n      repr += stringFromCode(code);\r\n      type = 'number';\r\n      while (digit(next())) {\r\n        consume();\r\n        repr += stringFromCode(code);\r\n      }\r\n    }\r\n    const c1 = next(1), c2 = next(2), c3 = next(3);\r\n    if ((c1 === 0x45 || c1 === 0x65) && digit(c2)) {\r\n      consume();\r\n      repr += stringFromCode(code);\r\n      consume();\r\n      repr += stringFromCode(code);\r\n      type = 'number';\r\n      while (digit(next())) {\r\n        consume();\r\n        repr += stringFromCode(code);\r\n      }\r\n    } else if ((c1 === 0x45 || c1 === 0x65) && (c2 === 0x2b || c2 === 0x2d) && digit(c3)) {\r\n      consume();\r\n      repr += stringFromCode(code);\r\n      consume();\r\n      repr += stringFromCode(code);\r\n      consume();\r\n      repr += stringFromCode(code);\r\n      type = 'number';\r\n      while (digit(next())) {\r\n        consume();\r\n        repr += stringFromCode(code);\r\n      }\r\n    }\r\n    const value = convertAStringToANumber(repr);\r\n    return { type: type, value: value, repr: repr };\r\n  };\r\n\r\n  const convertAStringToANumber = function(string: string): number {\r\n    // CSS's number rules are identical to JS, afaik.\r\n    return +string;\r\n  };\r\n\r\n  const consumeTheRemnantsOfABadURL = function() {\r\n    while (consume()) {\r\n      if (code === 0x29 || eof()) {\r\n        return;\r\n      } else if (startsWithAValidEscape()) {\r\n        consumeEscape();\r\n        donothing();\r\n      } else {\r\n        donothing();\r\n      }\r\n    }\r\n  };\r\n\r\n  let iterationCount = 0;\r\n  while (!eof(next())) {\r\n    tokens.push(consumeAToken());\r\n    iterationCount++;\r\n    if (iterationCount > str.length * 2)\r\n      throw new Error(\"I'm infinite-looping!\");\r\n  }\r\n  return tokens;\r\n}\r\n\r\nexport class CSSParserToken implements CSSTokenInterface {\r\n  tokenType = '';\r\n  value: string | number | undefined;\r\n  toJSON(): any {\r\n    return { token: this.tokenType };\r\n  }\r\n  toString() { return this.tokenType; }\r\n  toSource() { return '' + this; }\r\n}\r\n\r\nexport class BadStringToken extends CSSParserToken {\r\n  override tokenType = 'BADSTRING';\r\n}\r\n\r\nexport class BadURLToken extends CSSParserToken {\r\n  override tokenType = 'BADURL';\r\n}\r\n\r\nexport class WhitespaceToken extends CSSParserToken {\r\n  override tokenType = 'WHITESPACE';\r\n  override toString() { return 'WS'; }\r\n  override toSource() { return ' '; }\r\n}\r\n\r\nexport class CDOToken extends CSSParserToken {\r\n  override tokenType = 'CDO';\r\n  override toSource() { return '<!--'; }\r\n}\r\n\r\nexport class CDCToken extends CSSParserToken {\r\n  override tokenType = 'CDC';\r\n  override toSource() { return '-->'; }\r\n}\r\n\r\nexport class ColonToken extends CSSParserToken {\r\n  override tokenType = ':';\r\n}\r\n\r\nexport class SemicolonToken extends CSSParserToken {\r\n  override tokenType = ';';\r\n}\r\n\r\nexport class CommaToken extends CSSParserToken {\r\n  override tokenType = ',';\r\n}\r\n\r\nexport class GroupingToken extends CSSParserToken {\r\n  override value = '';\r\n  mirror = '';\r\n}\r\n\r\nexport class OpenCurlyToken extends GroupingToken {\r\n  override tokenType = '{';\r\n  constructor() {\r\n    super();\r\n    this.value = '{';\r\n    this.mirror = '}';\r\n  }\r\n}\r\n\r\nexport class CloseCurlyToken extends GroupingToken {\r\n  override tokenType = '}';\r\n  constructor() {\r\n    super();\r\n    this.value = '}';\r\n    this.mirror = '{';\r\n  }\r\n}\r\n\r\nexport class OpenSquareToken extends GroupingToken {\r\n  override tokenType = '[';\r\n  constructor() {\r\n    super();\r\n    this.value = '[';\r\n    this.mirror = ']';\r\n  }\r\n}\r\n\r\nexport class CloseSquareToken extends GroupingToken {\r\n  override tokenType = ']';\r\n  constructor() {\r\n    super();\r\n    this.value = ']';\r\n    this.mirror = '[';\r\n  }\r\n}\r\n\r\nexport class OpenParenToken extends GroupingToken {\r\n  override tokenType = '(';\r\n  constructor() {\r\n    super();\r\n    this.value = '(';\r\n    this.mirror = ')';\r\n  }\r\n}\r\n\r\nexport class CloseParenToken extends GroupingToken {\r\n  override   tokenType = ')';\r\n  constructor() {\r\n    super();\r\n    this.value = ')';\r\n    this.mirror = '(';\r\n  }\r\n}\r\n\r\nexport class IncludeMatchToken extends CSSParserToken {\r\n  override tokenType = '~=';\r\n}\r\n\r\nexport class DashMatchToken extends CSSParserToken {\r\n  override tokenType = '|=';\r\n}\r\n\r\nexport class PrefixMatchToken extends CSSParserToken {\r\n  override tokenType = '^=';\r\n}\r\n\r\nexport class SuffixMatchToken extends CSSParserToken {\r\n  override tokenType = '$=';\r\n}\r\n\r\nexport class SubstringMatchToken extends CSSParserToken {\r\n  override tokenType = '*=';\r\n}\r\n\r\nexport class ColumnToken extends CSSParserToken {\r\n  override tokenType = '||';\r\n}\r\n\r\nexport class EOFToken extends CSSParserToken {\r\n  override tokenType = 'EOF';\r\n  override toSource() { return ''; }\r\n}\r\n\r\nexport class DelimToken extends CSSParserToken {\r\n  override tokenType = 'DELIM';\r\n  override value: string = '';\r\n\r\n  constructor(code: number) {\r\n    super();\r\n    this.value = stringFromCode(code);\r\n  }\r\n\r\n  override toString() { return 'DELIM(' + this.value + ')'; }\r\n\r\n  override toJSON() {\r\n    const json = this.constructor.prototype.constructor.prototype.toJSON.call(this);\r\n    json.value = this.value;\r\n    return json;\r\n  }\r\n\r\n  override toSource() {\r\n    if (this.value === '\\\\')\r\n      return '\\\\\\n';\r\n    else\r\n      return this.value;\r\n  }\r\n}\r\n\r\nexport abstract class StringValuedToken extends CSSParserToken {\r\n  override value: string = '';\r\n  ASCIIMatch(str: string) {\r\n    return this.value.toLowerCase() === str.toLowerCase();\r\n  }\r\n\r\n  override toJSON() {\r\n    const json = this.constructor.prototype.constructor.prototype.toJSON.call(this);\r\n    json.value = this.value;\r\n    return json;\r\n  }\r\n}\r\n\r\nexport class IdentToken extends StringValuedToken {\r\n  constructor(val: string) {\r\n    super();\r\n    this.value = val;\r\n  }\r\n\r\n  override tokenType = 'IDENT';\r\n  override toString() { return 'IDENT(' + this.value + ')'; }\r\n  override toSource() {\r\n    return escapeIdent(this.value);\r\n  }\r\n}\r\n\r\nexport class FunctionToken extends StringValuedToken {\r\n  override tokenType = 'FUNCTION';\r\n  mirror: string;\r\n  constructor(val: string) {\r\n    super();\r\n    this.value = val;\r\n    this.mirror = ')';\r\n  }\r\n\r\n  override toString() { return 'FUNCTION(' + this.value + ')'; }\r\n\r\n  override toSource() {\r\n    return escapeIdent(this.value) + '(';\r\n  }\r\n}\r\n\r\nexport class AtKeywordToken extends StringValuedToken {\r\n  override tokenType = 'AT-KEYWORD';\r\n  constructor(val: string) {\r\n    super();\r\n    this.value = val;\r\n  }\r\n  override toString() { return 'AT(' + this.value + ')'; }\r\n  override toSource() {\r\n    return '@' + escapeIdent(this.value);\r\n  }\r\n}\r\n\r\nexport class HashToken extends StringValuedToken {\r\n  override tokenType = 'HASH';\r\n  type: string;\r\n  constructor(val: string) {\r\n    super();\r\n    this.value = val;\r\n    this.type = 'unrestricted';\r\n  }\r\n\r\n  override toString() { return 'HASH(' + this.value + ')'; }\r\n\r\n  override toJSON() {\r\n    const json = this.constructor.prototype.constructor.prototype.toJSON.call(this);\r\n    json.value = this.value;\r\n    json.type = this.type;\r\n    return json;\r\n  }\r\n\r\n  override toSource() {\r\n    if (this.type === 'id')\r\n      return '#' + escapeIdent(this.value);\r\n    else\r\n      return '#' + escapeHash(this.value);\r\n\r\n  }\r\n}\r\n\r\nexport class StringToken extends StringValuedToken {\r\n  override tokenType = 'STRING';\r\n  constructor(val: string) {\r\n    super();\r\n    this.value = val;\r\n  }\r\n\r\n  override toString() {\r\n    return '\"' + escapeString(this.value) + '\"';\r\n  }\r\n}\r\n\r\nexport class URLToken extends StringValuedToken {\r\n  override tokenType = 'URL';\r\n  constructor(val: string) {\r\n    super();\r\n    this.value = val;\r\n  }\r\n  override toString() { return 'URL(' + this.value + ')'; }\r\n  override toSource() {\r\n    return 'url(\"' + escapeString(this.value) + '\")';\r\n  }\r\n}\r\n\r\nexport class NumberToken extends CSSParserToken {\r\n  override tokenType = 'NUMBER';\r\n  type: string;\r\n  repr: string;\r\n\r\n  constructor() {\r\n    super();\r\n    this.type = 'integer';\r\n    this.repr = '';\r\n  }\r\n\r\n  override toString() {\r\n    if (this.type === 'integer')\r\n      return 'INT(' + this.value + ')';\r\n    return 'NUMBER(' + this.value + ')';\r\n  }\r\n  override toJSON() {\r\n    const json = super.toJSON();\r\n    json.value = this.value;\r\n    json.type = this.type;\r\n    json.repr = this.repr;\r\n    return json;\r\n  }\r\n  override toSource() { return this.repr; }\r\n}\r\n\r\n\r\nexport class PercentageToken extends CSSParserToken {\r\n  override tokenType = 'PERCENTAGE';\r\n  repr: string;\r\n  constructor() {\r\n    super();\r\n    this.repr = '';\r\n  }\r\n  override toString() { return 'PERCENTAGE(' + this.value + ')'; }\r\n  override toJSON() {\r\n    const json = this.constructor.prototype.constructor.prototype.toJSON.call(this);\r\n    json.value = this.value;\r\n    json.repr = this.repr;\r\n    return json;\r\n  }\r\n  override toSource() { return this.repr + '%'; }\r\n}\r\n\r\nexport class DimensionToken extends CSSParserToken {\r\n  override tokenType = 'DIMENSION';\r\n  type: string;\r\n  repr: string;\r\n  unit: string;\r\n\r\n  constructor() {\r\n    super();\r\n    this.type = 'integer';\r\n    this.repr = '';\r\n    this.unit = '';\r\n  }\r\n\r\n  override toString() { return 'DIM(' + this.value + ',' + this.unit + ')'; }\r\n  override toJSON() {\r\n    const json = this.constructor.prototype.constructor.prototype.toJSON.call(this);\r\n    json.value = this.value;\r\n    json.type = this.type;\r\n    json.repr = this.repr;\r\n    json.unit = this.unit;\r\n    return json;\r\n  }\r\n  override toSource() {\r\n    const source = this.repr;\r\n    let unit = escapeIdent(this.unit);\r\n    if (unit[0].toLowerCase() === 'e' && (unit[1] === '-' || between(unit.charCodeAt(1), 0x30, 0x39))) {\r\n      // Unit is ambiguous with scinot\r\n      // Remove the leading \"e\", replace with escape.\r\n      unit = '\\\\65 ' + unit.slice(1, unit.length);\r\n    }\r\n    return source + unit;\r\n  }\r\n}\r\n\r\nfunction escapeIdent(string: string) {\r\n  string = '' + string;\r\n  let result = '';\r\n  const firstcode = string.charCodeAt(0);\r\n  for (let i = 0; i < string.length; i++) {\r\n    const code = string.charCodeAt(i);\r\n    if (code === 0x0)\r\n      throw new InvalidCharacterError('Invalid character: the input contains U+0000.');\r\n\r\n    if (\r\n      between(code, 0x1, 0x1f) || code === 0x7f ||\r\n      (i === 0 && between(code, 0x30, 0x39)) ||\r\n      (i === 1 && between(code, 0x30, 0x39) && firstcode === 0x2d)\r\n    )\r\n      result += '\\\\' + code.toString(16) + ' ';\r\n    else if (\r\n      code >= 0x80 ||\r\n      code === 0x2d ||\r\n      code === 0x5f ||\r\n      between(code, 0x30, 0x39) ||\r\n      between(code, 0x41, 0x5a) ||\r\n      between(code, 0x61, 0x7a)\r\n    )\r\n      result += string[i];\r\n    else\r\n      result += '\\\\' + string[i];\r\n\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction escapeHash(string: string) {\r\n  // Escapes the contents of \"unrestricted\"-type hash tokens.\r\n  // Won't preserve the ID-ness of \"id\"-type hash tokens;\r\n  // use escapeIdent() for that.\r\n  string = '' + string;\r\n  let result = '';\r\n  for (let i = 0; i < string.length; i++) {\r\n    const code = string.charCodeAt(i);\r\n    if (code === 0x0)\r\n      throw new InvalidCharacterError('Invalid character: the input contains U+0000.');\r\n\r\n    if (\r\n      code >= 0x80 ||\r\n      code === 0x2d ||\r\n      code === 0x5f ||\r\n      between(code, 0x30, 0x39) ||\r\n      between(code, 0x41, 0x5a) ||\r\n      between(code, 0x61, 0x7a)\r\n    )\r\n      result += string[i];\r\n    else\r\n      result += '\\\\' + code.toString(16) + ' ';\r\n\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction escapeString(string: string) {\r\n  string = '' + string;\r\n  let result = '';\r\n  for (let i = 0; i < string.length; i++) {\r\n    const code = string.charCodeAt(i);\r\n\r\n    if (code === 0x0)\r\n      throw new InvalidCharacterError('Invalid character: the input contains U+0000.');\r\n\r\n    if (between(code, 0x1, 0x1f) || code === 0x7f)\r\n      result += '\\\\' + code.toString(16) + ' ';\r\n    else if (code === 0x22 || code === 0x5c)\r\n      result += '\\\\' + string[i];\r\n    else\r\n      result += string[i];\r\n\r\n  }\r\n  return result;\r\n}\r\n","/**\r\n * Copyright (c) Microsoft Corporation.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport * as css from './cssTokenizer';\r\n\r\nexport class InvalidSelectorError extends Error {\r\n}\r\n\r\nexport function isInvalidSelectorError(error: Error) {\r\n  return error instanceof InvalidSelectorError;\r\n}\r\n\r\n// Note: '>=' is used internally for text engine to preserve backwards compatibility.\r\ntype ClauseCombinator = '' | '>' | '+' | '~' | '>=';\r\n// TODO: consider\r\n//   - key=value\r\n//   - operators like `=`, `|=`, `~=`, `*=`, `/`\r\n//   - <empty>~=value\r\n//   - argument modes: \"parse all\", \"parse commas\", \"just a string\"\r\nexport type CSSFunctionArgument = CSSComplexSelector | number | string;\r\nexport type CSSFunction = { name: string, args: CSSFunctionArgument[] };\r\nexport type CSSSimpleSelector = { css?: string, functions: CSSFunction[] };\r\nexport type CSSComplexSelector = { simples: { selector: CSSSimpleSelector, combinator: ClauseCombinator }[] };\r\nexport type CSSComplexSelectorList = CSSComplexSelector[];\r\n\r\nexport function parseCSS(selector: string, customNames: Set<string>): { selector: CSSComplexSelectorList, names: string[] } {\r\n  let tokens: css.CSSTokenInterface[];\r\n  try {\r\n    tokens = css.tokenize(selector);\r\n    if (!(tokens[tokens.length - 1] instanceof css.EOFToken))\r\n      tokens.push(new css.EOFToken());\r\n  } catch (e) {\r\n    const newMessage = e.message + ` while parsing css selector \"${selector}\". Did you mean to CSS.escape it?`;\r\n    const index = (e.stack || '').indexOf(e.message);\r\n    if (index !== -1)\r\n      e.stack = e.stack.substring(0, index) + newMessage + e.stack.substring(index + e.message.length);\r\n    e.message = newMessage;\r\n    throw e;\r\n  }\r\n  const unsupportedToken = tokens.find(token => {\r\n    return (token instanceof css.AtKeywordToken) ||\r\n      (token instanceof css.BadStringToken) ||\r\n      (token instanceof css.BadURLToken) ||\r\n      (token instanceof css.ColumnToken) ||\r\n      (token instanceof css.CDOToken) ||\r\n      (token instanceof css.CDCToken) ||\r\n      (token instanceof css.SemicolonToken) ||\r\n      // TODO: Consider using these for something, e.g. to escape complex strings.\r\n      // For example :xpath{ (//div/bar[@attr=\"foo\"])[2]/baz }\r\n      // Or this way :xpath( {complex-xpath-goes-here(\"hello\")} )\r\n      (token instanceof css.OpenCurlyToken) ||\r\n      (token instanceof css.CloseCurlyToken) ||\r\n      // TODO: Consider treating these as strings?\r\n      (token instanceof css.URLToken) ||\r\n      (token instanceof css.PercentageToken);\r\n  });\r\n  if (unsupportedToken)\r\n    throw new InvalidSelectorError(`Unsupported token \"${unsupportedToken.toSource()}\" while parsing css selector \"${selector}\". Did you mean to CSS.escape it?`);\r\n\r\n  let pos = 0;\r\n  const names = new Set<string>();\r\n\r\n  function unexpected() {\r\n    return new InvalidSelectorError(`Unexpected token \"${tokens[pos].toSource()}\" while parsing css selector \"${selector}\". Did you mean to CSS.escape it?`);\r\n  }\r\n\r\n  function skipWhitespace() {\r\n    while (tokens[pos] instanceof css.WhitespaceToken)\r\n      pos++;\r\n  }\r\n\r\n  function isIdent(p = pos) {\r\n    return tokens[p] instanceof css.IdentToken;\r\n  }\r\n\r\n  function isString(p = pos) {\r\n    return tokens[p] instanceof css.StringToken;\r\n  }\r\n\r\n  function isNumber(p = pos) {\r\n    return tokens[p] instanceof css.NumberToken;\r\n  }\r\n\r\n  function isComma(p = pos) {\r\n    return tokens[p] instanceof css.CommaToken;\r\n  }\r\n\r\n  function isOpenParen(p = pos) {\r\n    return tokens[p] instanceof css.OpenParenToken;\r\n  }\r\n\r\n  function isCloseParen(p = pos) {\r\n    return tokens[p] instanceof css.CloseParenToken;\r\n  }\r\n\r\n  function isFunction(p = pos) {\r\n    return tokens[p] instanceof css.FunctionToken;\r\n  }\r\n\r\n  function isStar(p = pos) {\r\n    return (tokens[p] instanceof css.DelimToken) && tokens[p].value === '*';\r\n  }\r\n\r\n  function isEOF(p = pos) {\r\n    return tokens[p] instanceof css.EOFToken;\r\n  }\r\n\r\n  function isClauseCombinator(p = pos) {\r\n    return (tokens[p] instanceof css.DelimToken) && (['>', '+', '~'].includes(tokens[p].value as string));\r\n  }\r\n\r\n  function isSelectorClauseEnd(p = pos) {\r\n    return isComma(p) || isCloseParen(p) || isEOF(p) || isClauseCombinator(p) || (tokens[p] instanceof css.WhitespaceToken);\r\n  }\r\n\r\n  function consumeFunctionArguments(): CSSFunctionArgument[] {\r\n    const result = [consumeArgument()];\r\n    while (true) {\r\n      skipWhitespace();\r\n      if (!isComma())\r\n        break;\r\n      pos++;\r\n      result.push(consumeArgument());\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function consumeArgument(): CSSFunctionArgument {\r\n    skipWhitespace();\r\n    if (isNumber())\r\n      return tokens[pos++].value!;\r\n    if (isString())\r\n      return tokens[pos++].value!;\r\n    return consumeComplexSelector();\r\n  }\r\n\r\n  function consumeComplexSelector(): CSSComplexSelector {\r\n    const result: CSSComplexSelector = { simples: [] };\r\n    skipWhitespace();\r\n    if (isClauseCombinator()) {\r\n      // Put implicit \":scope\" at the start. https://drafts.csswg.org/selectors-4/#relative\r\n      result.simples.push({ selector: { functions: [{ name: 'scope', args: [] }] }, combinator: '' });\r\n    } else {\r\n      result.simples.push({ selector: consumeSimpleSelector(), combinator: '' });\r\n    }\r\n    while (true) {\r\n      skipWhitespace();\r\n      if (isClauseCombinator()) {\r\n        result.simples[result.simples.length - 1].combinator = tokens[pos++].value as ClauseCombinator;\r\n        skipWhitespace();\r\n      } else if (isSelectorClauseEnd()) {\r\n        break;\r\n      }\r\n      result.simples.push({ combinator: '', selector: consumeSimpleSelector() });\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function consumeSimpleSelector(): CSSSimpleSelector {\r\n    let rawCSSString = '';\r\n    const functions: CSSFunction[] = [];\r\n\r\n    while (!isSelectorClauseEnd()) {\r\n      if (isIdent() || isStar()) {\r\n        rawCSSString += tokens[pos++].toSource();\r\n      } else if (tokens[pos] instanceof css.HashToken) {\r\n        rawCSSString += tokens[pos++].toSource();\r\n      } else if ((tokens[pos] instanceof css.DelimToken) && tokens[pos].value === '.') {\r\n        pos++;\r\n        if (isIdent())\r\n          rawCSSString += '.' + tokens[pos++].toSource();\r\n        else\r\n          throw unexpected();\r\n      } else if (tokens[pos] instanceof css.ColonToken) {\r\n        pos++;\r\n        if (isIdent()) {\r\n          if (!customNames.has((tokens[pos].value as string).toLowerCase())) {\r\n            rawCSSString += ':' + tokens[pos++].toSource();\r\n          } else {\r\n            const name = (tokens[pos++].value as string).toLowerCase();\r\n            functions.push({ name, args: [] });\r\n            names.add(name);\r\n          }\r\n        } else if (isFunction()) {\r\n          const name = (tokens[pos++].value as string).toLowerCase();\r\n          if (!customNames.has(name)) {\r\n            rawCSSString += `:${name}(${consumeBuiltinFunctionArguments()})`;\r\n          } else {\r\n            functions.push({ name, args: consumeFunctionArguments() });\r\n            names.add(name);\r\n          }\r\n          skipWhitespace();\r\n          if (!isCloseParen())\r\n            throw unexpected();\r\n          pos++;\r\n        } else {\r\n          throw unexpected();\r\n        }\r\n      } else if (tokens[pos] instanceof css.OpenSquareToken) {\r\n        rawCSSString += '[';\r\n        pos++;\r\n        while (!(tokens[pos] instanceof css.CloseSquareToken) && !isEOF())\r\n          rawCSSString += tokens[pos++].toSource();\r\n        if (!(tokens[pos] instanceof css.CloseSquareToken))\r\n          throw unexpected();\r\n        rawCSSString += ']';\r\n        pos++;\r\n      } else {\r\n        throw unexpected();\r\n      }\r\n    }\r\n    if (!rawCSSString && !functions.length)\r\n      throw unexpected();\r\n    return { css: rawCSSString || undefined, functions };\r\n  }\r\n\r\n  function consumeBuiltinFunctionArguments(): string {\r\n    let s = '';\r\n    let balance = 1;  // First open paren is a part of a function token.\r\n    while (!isEOF()) {\r\n      if (isOpenParen() || isFunction())\r\n        balance++;\r\n      if (isCloseParen())\r\n        balance--;\r\n      if (!balance)\r\n        break;\r\n      s += tokens[pos++].toSource();\r\n    }\r\n    return s;\r\n  }\r\n\r\n  const result = consumeFunctionArguments();\r\n  if (!isEOF())\r\n    throw unexpected();\r\n  if (result.some(arg => typeof arg !== 'object' || !('simples' in arg)))\r\n    throw new InvalidSelectorError(`Error while parsing css selector \"${selector}\". Did you mean to CSS.escape it?`);\r\n  return { selector: result as CSSComplexSelector[], names: Array.from(names) };\r\n}\r\n\r\nexport function serializeSelector(args: CSSFunctionArgument[]) {\r\n  return args.map(arg => {\r\n    if (typeof arg === 'string')\r\n      return `\"${arg}\"`;\r\n    if (typeof arg === 'number')\r\n      return String(arg);\r\n    return arg.simples.map(({ selector, combinator }) => {\r\n      let s = selector.css || '';\r\n      s = s + selector.functions.map(func => `:${func.name}(${serializeSelector(func.args)})`).join('');\r\n      if (combinator)\r\n        s += ' ' + combinator;\r\n      return s;\r\n    }).join(' ');\r\n  }).join(', ');\r\n}\r\n","/**\r\n * Copyright (c) Microsoft Corporation.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { InvalidSelectorError, parseCSS } from './cssParser';\r\n\r\nimport type { CSSComplexSelectorList } from './cssParser';\r\nexport { InvalidSelectorError, isInvalidSelectorError } from './cssParser';\r\n\r\nexport type NestedSelectorBody = { parsed: ParsedSelector, distance?: number };\r\nconst kNestedSelectorNames = new Set(['internal:has', 'internal:has-not', 'internal:and', 'internal:or', 'internal:chain', 'left-of', 'right-of', 'above', 'below', 'near']);\r\nconst kNestedSelectorNamesWithDistance = new Set(['left-of', 'right-of', 'above', 'below', 'near']);\r\n\r\nexport type ParsedSelectorPart = {\r\n  name: string,\r\n  body: string | CSSComplexSelectorList | NestedSelectorBody,\r\n  source: string,\r\n};\r\n\r\nexport type ParsedSelector = {\r\n  parts: ParsedSelectorPart[],\r\n  capture?: number,\r\n};\r\n\r\ntype ParsedSelectorStrings = {\r\n  parts: { name: string, body: string }[],\r\n  capture?: number,\r\n};\r\n\r\nexport const customCSSNames = new Set(['not', 'is', 'where', 'has', 'scope', 'light', 'visible', 'text', 'text-matches', 'text-is', 'has-text', 'above', 'below', 'right-of', 'left-of', 'near', 'nth-match']);\r\n\r\nexport function parseSelector(selector: string): ParsedSelector {\r\n  const parsedStrings = parseSelectorString(selector);\r\n  const parts: ParsedSelectorPart[] = [];\r\n  for (const part of parsedStrings.parts) {\r\n    if (part.name === 'css' || part.name === 'css:light') {\r\n      if (part.name === 'css:light')\r\n        part.body = ':light(' + part.body + ')';\r\n      const parsedCSS = parseCSS(part.body, customCSSNames);\r\n      parts.push({\r\n        name: 'css',\r\n        body: parsedCSS.selector,\r\n        source: part.body\r\n      });\r\n      continue;\r\n    }\r\n    if (kNestedSelectorNames.has(part.name)) {\r\n      let innerSelector: string;\r\n      let distance: number | undefined;\r\n      try {\r\n        const unescaped = JSON.parse('[' + part.body + ']');\r\n        if (!Array.isArray(unescaped) || unescaped.length < 1 || unescaped.length > 2 || typeof unescaped[0] !== 'string')\r\n          throw new InvalidSelectorError(`Malformed selector: ${part.name}=` + part.body);\r\n        innerSelector = unescaped[0];\r\n        if (unescaped.length === 2) {\r\n          if (typeof unescaped[1] !== 'number' || !kNestedSelectorNamesWithDistance.has(part.name))\r\n            throw new InvalidSelectorError(`Malformed selector: ${part.name}=` + part.body);\r\n          distance = unescaped[1];\r\n        }\r\n      } catch (e) {\r\n        throw new InvalidSelectorError(`Malformed selector: ${part.name}=` + part.body);\r\n      }\r\n      const nested = { name: part.name, source: part.body, body: { parsed: parseSelector(innerSelector), distance } };\r\n      const lastFrame = [...nested.body.parsed.parts].reverse().find(part => part.name === 'internal:control' && part.body === 'enter-frame');\r\n      const lastFrameIndex = lastFrame ? nested.body.parsed.parts.indexOf(lastFrame) : -1;\r\n      // Allow nested selectors to start with the same frame selector.\r\n      if (lastFrameIndex !== -1 && selectorPartsEqual(nested.body.parsed.parts.slice(0, lastFrameIndex + 1), parts.slice(0, lastFrameIndex + 1)))\r\n        nested.body.parsed.parts.splice(0, lastFrameIndex + 1);\r\n      parts.push(nested);\r\n      continue;\r\n    }\r\n    parts.push({ ...part, source: part.body });\r\n  }\r\n  if (kNestedSelectorNames.has(parts[0].name))\r\n    throw new InvalidSelectorError(`\"${parts[0].name}\" selector cannot be first`);\r\n  return {\r\n    capture: parsedStrings.capture,\r\n    parts\r\n  };\r\n}\r\n\r\nexport function splitSelectorByFrame(selectorText: string): ParsedSelector[] {\r\n  const selector = parseSelector(selectorText);\r\n  const result: ParsedSelector[] = [];\r\n  let chunk: ParsedSelector = {\r\n    parts: [],\r\n  };\r\n  let chunkStartIndex = 0;\r\n  for (let i = 0; i < selector.parts.length; ++i) {\r\n    const part = selector.parts[i];\r\n    if (part.name === 'internal:control' && part.body === 'enter-frame') {\r\n      if (!chunk.parts.length)\r\n        throw new InvalidSelectorError('Selector cannot start with entering frame, select the iframe first');\r\n      result.push(chunk);\r\n      chunk = { parts: [] };\r\n      chunkStartIndex = i + 1;\r\n      continue;\r\n    }\r\n    if (selector.capture === i)\r\n      chunk.capture = i - chunkStartIndex;\r\n    chunk.parts.push(part);\r\n  }\r\n  if (!chunk.parts.length)\r\n    throw new InvalidSelectorError(`Selector cannot end with entering frame, while parsing selector ${selectorText}`);\r\n  result.push(chunk);\r\n  if (typeof selector.capture === 'number' && typeof result[result.length - 1].capture !== 'number')\r\n    throw new InvalidSelectorError(`Can not capture the selector before diving into the frame. Only use * after the last frame has been selected`);\r\n  return result;\r\n}\r\n\r\nfunction selectorPartsEqual(list1: ParsedSelectorPart[], list2: ParsedSelectorPart[]) {\r\n  return stringifySelector({ parts: list1 }) === stringifySelector({ parts: list2 });\r\n}\r\n\r\nexport function stringifySelector(selector: string | ParsedSelector, forceEngineName?: boolean): string {\r\n  if (typeof selector === 'string')\r\n    return selector;\r\n  return selector.parts.map((p, i) => {\r\n    let includeEngine = true;\r\n    if (!forceEngineName && i !== selector.capture) {\r\n      if (p.name === 'css')\r\n        includeEngine = false;\r\n      else if (p.name === 'xpath' && p.source.startsWith('//') || p.source.startsWith('..'))\r\n        includeEngine = false;\r\n    }\r\n    const prefix = includeEngine ? p.name + '=' : '';\r\n    return `${i === selector.capture ? '*' : ''}${prefix}${p.source}`;\r\n  }).join(' >> ');\r\n}\r\n\r\nexport function visitAllSelectorParts(selector: ParsedSelector, visitor: (part: ParsedSelectorPart, nested: boolean) => void) {\r\n  const visit = (selector: ParsedSelector, nested: boolean) => {\r\n    for (const part of selector.parts) {\r\n      visitor(part, nested);\r\n      if (kNestedSelectorNames.has(part.name))\r\n        visit((part.body as NestedSelectorBody).parsed, true);\r\n    }\r\n  };\r\n  visit(selector, false);\r\n}\r\n\r\nfunction parseSelectorString(selector: string): ParsedSelectorStrings {\r\n  let index = 0;\r\n  let quote: string | undefined;\r\n  let start = 0;\r\n  const result: ParsedSelectorStrings = { parts: [] };\r\n  const append = () => {\r\n    const part = selector.substring(start, index).trim();\r\n    const eqIndex = part.indexOf('=');\r\n    let name: string;\r\n    let body: string;\r\n    if (eqIndex !== -1 && part.substring(0, eqIndex).trim().match(/^[a-zA-Z_0-9-+:*]+$/)) {\r\n      name = part.substring(0, eqIndex).trim();\r\n      body = part.substring(eqIndex + 1);\r\n    } else if (part.length > 1 && part[0] === '\"' && part[part.length - 1] === '\"') {\r\n      name = 'text';\r\n      body = part;\r\n    } else if (part.length > 1 && part[0] === \"'\" && part[part.length - 1] === \"'\") {\r\n      name = 'text';\r\n      body = part;\r\n    } else if (/^\\(*\\/\\//.test(part) || part.startsWith('..')) {\r\n      // If selector starts with '//' or '//' prefixed with multiple opening\r\n      // parenthesis, consider xpath. @see https://github.com/microsoft/playwright/issues/817\r\n      // If selector starts with '..', consider xpath as well.\r\n      name = 'xpath';\r\n      body = part;\r\n    } else {\r\n      name = 'css';\r\n      body = part;\r\n    }\r\n    let capture = false;\r\n    if (name[0] === '*') {\r\n      capture = true;\r\n      name = name.substring(1);\r\n    }\r\n    result.parts.push({ name, body });\r\n    if (capture) {\r\n      if (result.capture !== undefined)\r\n        throw new InvalidSelectorError(`Only one of the selectors can capture using * modifier`);\r\n      result.capture = result.parts.length - 1;\r\n    }\r\n  };\r\n\r\n  if (!selector.includes('>>')) {\r\n    index = selector.length;\r\n    append();\r\n    return result;\r\n  }\r\n\r\n  const shouldIgnoreTextSelectorQuote = () => {\r\n    const prefix = selector.substring(start, index);\r\n    const match = prefix.match(/^\\s*text\\s*=(.*)$/);\r\n    // Must be a text selector with some text before the quote.\r\n    return !!match && !!match[1];\r\n  };\r\n\r\n  while (index < selector.length) {\r\n    const c = selector[index];\r\n    if (c === '\\\\' && index + 1 < selector.length) {\r\n      index += 2;\r\n    } else if (c === quote) {\r\n      quote = undefined;\r\n      index++;\r\n    } else if (!quote && (c === '\"' || c === '\\'' || c === '`') && !shouldIgnoreTextSelectorQuote()) {\r\n      quote = c;\r\n      index++;\r\n    } else if (!quote && c === '>' && selector[index + 1] === '>') {\r\n      append();\r\n      index += 2;\r\n      start = index;\r\n    } else {\r\n      index++;\r\n    }\r\n  }\r\n  append();\r\n  return result;\r\n}\r\n\r\nexport type AttributeSelectorOperator = '<truthy>'|'='|'*='|'|='|'^='|'$='|'~=';\r\nexport type AttributeSelectorPart = {\r\n  name: string,\r\n  jsonPath: string[],\r\n  op: AttributeSelectorOperator,\r\n  value: any,\r\n  caseSensitive: boolean,\r\n};\r\n\r\nexport type AttributeSelector = {\r\n  name: string,\r\n  attributes: AttributeSelectorPart[],\r\n};\r\n\r\n\r\nexport function parseAttributeSelector(selector: string, allowUnquotedStrings: boolean): AttributeSelector {\r\n  let wp = 0;\r\n  let EOL = selector.length === 0;\r\n\r\n  const next = () => selector[wp] || '';\r\n  const eat1 = () => {\r\n    const result = next();\r\n    ++wp;\r\n    EOL = wp >= selector.length;\r\n    return result;\r\n  };\r\n\r\n  const syntaxError = (stage: string|undefined) => {\r\n    if (EOL)\r\n      throw new InvalidSelectorError(`Unexpected end of selector while parsing selector \\`${selector}\\``);\r\n    throw new InvalidSelectorError(`Error while parsing selector \\`${selector}\\` - unexpected symbol \"${next()}\" at position ${wp}` + (stage ? ' during ' + stage : ''));\r\n  };\r\n\r\n  function skipSpaces() {\r\n    while (!EOL && /\\s/.test(next()))\r\n      eat1();\r\n  }\r\n\r\n  function isCSSNameChar(char: string) {\r\n    // https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\r\n    return (char >= '\\u0080')  // non-ascii\r\n        || (char >= '\\u0030' && char <= '\\u0039')  // digit\r\n        || (char >= '\\u0041' && char <= '\\u005a')  // uppercase letter\r\n        || (char >= '\\u0061' && char <= '\\u007a')  // lowercase letter\r\n        || (char >= '\\u0030' && char <= '\\u0039')  // digit\r\n        || char === '\\u005f'  // \"_\"\r\n        || char === '\\u002d';  // \"-\"\r\n  }\r\n\r\n  function readIdentifier() {\r\n    let result = '';\r\n    skipSpaces();\r\n    while (!EOL && isCSSNameChar(next()))\r\n      result += eat1();\r\n    return result;\r\n  }\r\n\r\n  function readQuotedString(quote: string) {\r\n    let result = eat1();\r\n    if (result !== quote)\r\n      syntaxError('parsing quoted string');\r\n    while (!EOL && next() !== quote) {\r\n      if (next() === '\\\\')\r\n        eat1();\r\n      result += eat1();\r\n    }\r\n    if (next() !== quote)\r\n      syntaxError('parsing quoted string');\r\n    result += eat1();\r\n    return result;\r\n  }\r\n\r\n  function readRegularExpression() {\r\n    if (eat1() !== '/')\r\n      syntaxError('parsing regular expression');\r\n    let source = '';\r\n    let inClass = false;\r\n    // https://262.ecma-international.org/11.0/#sec-literals-regular-expression-literals\r\n    while (!EOL) {\r\n      if (next() === '\\\\') {\r\n        source += eat1();\r\n        if (EOL)\r\n          syntaxError('parsing regular expression');\r\n      } else if (inClass && next() === ']') {\r\n        inClass = false;\r\n      } else if (!inClass && next() === '[') {\r\n        inClass = true;\r\n      } else if (!inClass && next() === '/') {\r\n        break;\r\n      }\r\n      source += eat1();\r\n    }\r\n    if (eat1() !== '/')\r\n      syntaxError('parsing regular expression');\r\n    let flags = '';\r\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\r\n    while (!EOL && next().match(/[dgimsuy]/))\r\n      flags += eat1();\r\n    try {\r\n      return new RegExp(source, flags);\r\n    } catch (e) {\r\n      throw new InvalidSelectorError(`Error while parsing selector \\`${selector}\\`: ${e.message}`);\r\n    }\r\n  }\r\n\r\n  function readAttributeToken() {\r\n    let token = '';\r\n    skipSpaces();\r\n    if (next() === `'` || next() === `\"`)\r\n      token = readQuotedString(next()).slice(1, -1);\r\n    else\r\n      token = readIdentifier();\r\n    if (!token)\r\n      syntaxError('parsing property path');\r\n    return token;\r\n  }\r\n\r\n  function readOperator(): AttributeSelectorOperator {\r\n    skipSpaces();\r\n    let op = '';\r\n    if (!EOL)\r\n      op += eat1();\r\n    if (!EOL && (op !== '='))\r\n      op += eat1();\r\n    if (!['=', '*=', '^=', '$=', '|=', '~='].includes(op))\r\n      syntaxError('parsing operator');\r\n    return (op as AttributeSelectorOperator);\r\n  }\r\n\r\n  function readAttribute(): AttributeSelectorPart {\r\n    // skip leading [\r\n    eat1();\r\n\r\n    // read attribute name:\r\n    // foo.bar\r\n    // 'foo'  . \"ba zz\"\r\n    const jsonPath = [];\r\n    jsonPath.push(readAttributeToken());\r\n    skipSpaces();\r\n    while (next() === '.') {\r\n      eat1();\r\n      jsonPath.push(readAttributeToken());\r\n      skipSpaces();\r\n    }\r\n    // check property is truthy: [enabled]\r\n    if (next() === ']') {\r\n      eat1();\r\n      return { name: jsonPath.join('.'), jsonPath, op: '<truthy>', value: null, caseSensitive: false };\r\n    }\r\n\r\n    const operator = readOperator();\r\n\r\n    let value = undefined;\r\n    let caseSensitive = true;\r\n    skipSpaces();\r\n    if (next() === '/') {\r\n      if (operator !== '=')\r\n        throw new InvalidSelectorError(`Error while parsing selector \\`${selector}\\` - cannot use ${operator} in attribute with regular expression`);\r\n      value = readRegularExpression();\r\n    } else if (next() === `'` || next() === `\"`) {\r\n      value = readQuotedString(next()).slice(1, -1);\r\n      skipSpaces();\r\n      if (next() === 'i' || next() === 'I') {\r\n        caseSensitive = false;\r\n        eat1();\r\n      } else if (next() === 's' || next() === 'S') {\r\n        caseSensitive = true;\r\n        eat1();\r\n      }\r\n    } else {\r\n      value = '';\r\n      while (!EOL && (isCSSNameChar(next()) || next() === '+' || next() === '.'))\r\n        value += eat1();\r\n      if (value === 'true') {\r\n        value = true;\r\n      } else if (value === 'false') {\r\n        value = false;\r\n      } else {\r\n        if (!allowUnquotedStrings) {\r\n          value = +value;\r\n          if (Number.isNaN(value))\r\n            syntaxError('parsing attribute value');\r\n        }\r\n      }\r\n    }\r\n    skipSpaces();\r\n    if (next() !== ']')\r\n      syntaxError('parsing attribute value');\r\n\r\n    eat1();\r\n    if (operator !== '=' && typeof value !== 'string')\r\n      throw new InvalidSelectorError(`Error while parsing selector \\`${selector}\\` - cannot use ${operator} in attribute with non-string matching value - ${value}`);\r\n    return { name: jsonPath.join('.'), jsonPath, op: operator, value, caseSensitive };\r\n  }\r\n\r\n  const result: AttributeSelector = {\r\n    name: '',\r\n    attributes: [],\r\n  };\r\n  result.name = readIdentifier();\r\n  skipSpaces();\r\n  while (next() === '[') {\r\n    result.attributes.push(readAttribute());\r\n    skipSpaces();\r\n  }\r\n  if (!EOL)\r\n    syntaxError(undefined);\r\n  if (!result.name && !result.attributes.length)\r\n    throw new InvalidSelectorError(`Error while parsing selector \\`${selector}\\` - selector cannot be empty`);\r\n  return result;\r\n}\r\n","/**\r\n * Copyright (c) Microsoft Corporation.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n// NOTE: this function should not be used to escape any selectors.\r\nexport function escapeWithQuotes(text: string, char: string = '\\'') {\r\n  const stringified = JSON.stringify(text);\r\n  const escapedText = stringified.substring(1, stringified.length - 1).replace(/\\\\\"/g, '\"');\r\n  if (char === '\\'')\r\n    return char + escapedText.replace(/[']/g, '\\\\\\'') + char;\r\n  if (char === '\"')\r\n    return char + escapedText.replace(/[\"]/g, '\\\\\"') + char;\r\n  if (char === '`')\r\n    return char + escapedText.replace(/[`]/g, '`') + char;\r\n  throw new Error('Invalid escape char');\r\n}\r\n\r\nexport function escapeTemplateString(text: string): string {\r\n  return text\r\n      .replace(/\\\\/g, '\\\\\\\\')\r\n      .replace(/`/g, '\\\\`')\r\n      .replace(/\\$\\{/g, '\\\\${');\r\n}\r\n\r\nexport function isString(obj: any): obj is string {\r\n  return typeof obj === 'string' || obj instanceof String;\r\n}\r\n\r\nexport function toTitleCase(name: string) {\r\n  return name.charAt(0).toUpperCase() + name.substring(1);\r\n}\r\n\r\nexport function toSnakeCase(name: string): string {\r\n  // E.g. ignoreHTTPSErrors => ignore_https_errors.\r\n  return name.replace(/([a-z0-9])([A-Z])/g, '$1_$2').replace(/([A-Z])([A-Z][a-z])/g, '$1_$2').toLowerCase();\r\n}\r\n\r\nexport function quoteCSSAttributeValue(text: string): string {\r\n  return `\"${text.replace(/[\"\\\\]/g, char => '\\\\' + char)}\"`;\r\n}\r\n\r\nlet normalizedWhitespaceCache: Map<string, string> | undefined;\r\n\r\nexport function cacheNormalizedWhitespaces() {\r\n  normalizedWhitespaceCache = new Map();\r\n}\r\n\r\nexport function normalizeWhiteSpace(text: string): string {\r\n  let result = normalizedWhitespaceCache?.get(text);\r\n  if (result === undefined) {\r\n    result = text.replace(/[\\u200b\\u00ad]/g, '').trim().replace(/\\s+/g, ' ');\r\n    normalizedWhitespaceCache?.set(text, result);\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function normalizeEscapedRegexQuotes(source: string) {\r\n  // This function reverses the effect of escapeRegexForSelector below.\r\n  // Odd number of backslashes followed by the quote -> remove unneeded backslash.\r\n  return source.replace(/(^|[^\\\\])(\\\\\\\\)*\\\\(['\"`])/g, '$1$2$3');\r\n}\r\n\r\nfunction escapeRegexForSelector(re: RegExp): string {\r\n  // Unicode mode does not allow \"identity character escapes\", so we do not escape and\r\n  // hope that it does not contain quotes and/or >> signs.\r\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Regular_expressions/Character_escape\r\n  // TODO: rework RE usages in internal selectors away from literal representation to json, e.g. {source,flags}.\r\n  if (re.unicode || (re as any).unicodeSets)\r\n    return String(re);\r\n  // Even number of backslashes followed by the quote -> insert a backslash.\r\n  return String(re).replace(/(^|[^\\\\])(\\\\\\\\)*([\"'`])/g, '$1$2\\\\$3').replace(/>>/g, '\\\\>\\\\>');\r\n}\r\n\r\nexport function escapeForTextSelector(text: string | RegExp, exact: boolean): string {\r\n  if (typeof text !== 'string')\r\n    return escapeRegexForSelector(text);\r\n  return `${JSON.stringify(text)}${exact ? 's' : 'i'}`;\r\n}\r\n\r\nexport function escapeForAttributeSelector(value: string | RegExp, exact: boolean): string {\r\n  if (typeof value !== 'string')\r\n    return escapeRegexForSelector(value);\r\n  // TODO: this should actually be\r\n  //   cssEscape(value).replace(/\\\\ /g, ' ')\r\n  // However, our attribute selectors do not conform to CSS parsing spec,\r\n  // so we escape them differently.\r\n  return `\"${value.replace(/\\\\/g, '\\\\\\\\').replace(/[\"]/g, '\\\\\"')}\"${exact ? 's' : 'i'}`;\r\n}\r\n\r\nexport function trimString(input: string, cap: number, suffix: string = ''): string {\r\n  if (input.length <= cap)\r\n    return input;\r\n  const chars = [...input];\r\n  if (chars.length > cap)\r\n    return chars.slice(0, cap - suffix.length).join('') + suffix;\r\n  return chars.join('');\r\n}\r\n\r\nexport function trimStringWithEllipsis(input: string, cap: number): string {\r\n  return trimString(input, cap, '\\u2026');\r\n}\r\n\r\nexport function escapeRegExp(s: string) {\r\n  // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#escaping\r\n  return s.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\r\n}\r\n\r\nconst escaped = { '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', '\\'': '&#39;' };\r\nexport function escapeHTMLAttribute(s: string): string {\r\n  return s.replace(/[&<>\"']/ug, char => (escaped as any)[char]);\r\n}\r\nexport function escapeHTML(s: string): string {\r\n  return s.replace(/[&<]/ug, char => (escaped as any)[char]);\r\n}\r\n\r\nexport function longestCommonSubstring(s1: string, s2: string): string {\r\n  const n = s1.length;\r\n  const m = s2.length;\r\n  let maxLen = 0;\r\n  let endingIndex = 0;\r\n\r\n  // Initialize a 2D array with zeros\r\n  const dp = Array(n + 1)\r\n      .fill(null)\r\n      .map(() => Array(m + 1).fill(0));\r\n\r\n  // Build the dp table\r\n  for (let i = 1; i <= n; i++) {\r\n    for (let j = 1; j <= m; j++) {\r\n      if (s1[i - 1] === s2[j - 1]) {\r\n        dp[i][j] = dp[i - 1][j - 1] + 1;\r\n\r\n        if (dp[i][j] > maxLen) {\r\n          maxLen = dp[i][j];\r\n          endingIndex = i;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Extract the longest common substring\r\n  return s1.slice(endingIndex - maxLen, endingIndex);\r\n}\r\n","/**\r\n * Copyright (c) Microsoft Corporation.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport {  parseAttributeSelector, parseSelector, stringifySelector } from './selectorParser';\r\nimport { escapeWithQuotes, normalizeEscapedRegexQuotes, toSnakeCase, toTitleCase } from './stringUtils';\r\n\r\nimport type { NestedSelectorBody } from './selectorParser';\r\nimport type { ParsedSelector } from './selectorParser';\r\n\r\nexport type Language = 'javascript' | 'python' | 'java' | 'csharp' | 'jsonl';\r\nexport type LocatorType = 'default' | 'role' | 'text' | 'label' | 'placeholder' | 'alt' | 'title' | 'test-id' | 'nth' | 'first' | 'last' | 'visible' | 'has-text' | 'has-not-text' | 'has' | 'hasNot' | 'frame' | 'frame-locator' | 'and' | 'or' | 'chain';\r\nexport type LocatorBase = 'page' | 'locator' | 'frame-locator';\r\nexport type Quote = '\\'' | '\"' | '`';\r\n\r\ntype LocatorOptions = {\r\n  attrs?: { name: string, value: string | boolean | number }[],\r\n  exact?: boolean,\r\n  name?: string | RegExp,\r\n  hasText?: string | RegExp,\r\n  hasNotText?: string | RegExp,\r\n};\r\nexport interface LocatorFactory {\r\n  generateLocator(base: LocatorBase, kind: LocatorType, body: string | RegExp, options?: LocatorOptions): string;\r\n  chainLocators(locators: string[]): string;\r\n}\r\n\r\nexport function asLocatorDescription(lang: Language, selector: string): string | undefined {\r\n  const parsed = parseSelector(selector);\r\n  const lastPart = parsed.parts[parsed.parts.length - 1];\r\n  if (lastPart?.name === 'internal:describe')\r\n    return JSON.parse(lastPart.body as string);\r\n  return asLocator(lang, selector);\r\n}\r\n\r\nexport function asLocator(lang: Language, selector: string, isFrameLocator: boolean = false): string {\r\n  return asLocators(lang, selector, isFrameLocator, 1)[0];\r\n}\r\n\r\nexport function asLocators(lang: Language, selector: string, isFrameLocator: boolean = false, maxOutputSize = 20, preferredQuote?: Quote): string[] {\r\n  try {\r\n    return innerAsLocators(new generators[lang](preferredQuote), parseSelector(selector), isFrameLocator, maxOutputSize);\r\n  } catch (e) {\r\n    // Tolerate invalid input.\r\n    return [selector];\r\n  }\r\n}\r\n\r\nfunction innerAsLocators(factory: LocatorFactory, parsed: ParsedSelector, isFrameLocator: boolean = false, maxOutputSize = 20): string[] {\r\n  const parts = [...parsed.parts];\r\n  const tokens: string[][] = [];\r\n  let nextBase: LocatorBase = isFrameLocator ? 'frame-locator' : 'page';\r\n  for (let index = 0; index < parts.length; index++) {\r\n    const part = parts[index];\r\n    const base = nextBase;\r\n    nextBase = 'locator';\r\n\r\n    if (part.name === 'internal:describe')\r\n      continue;\r\n    if (part.name === 'nth') {\r\n      if (part.body === '0')\r\n        tokens.push([factory.generateLocator(base, 'first', ''), factory.generateLocator(base, 'nth', '0')]);\r\n      else if (part.body === '-1')\r\n        tokens.push([factory.generateLocator(base, 'last', ''), factory.generateLocator(base, 'nth', '-1')]);\r\n      else\r\n        tokens.push([factory.generateLocator(base, 'nth', part.body as string)]);\r\n      continue;\r\n    }\r\n    if (part.name === 'visible') {\r\n      tokens.push([factory.generateLocator(base, 'visible', part.body as string), factory.generateLocator(base, 'default', `visible=${part.body}`)]);\r\n      continue;\r\n    }\r\n    if (part.name === 'internal:text') {\r\n      const { exact, text } = detectExact(part.body as string);\r\n      tokens.push([factory.generateLocator(base, 'text', text, { exact })]);\r\n      continue;\r\n    }\r\n    if (part.name === 'internal:has-text') {\r\n      const { exact, text } = detectExact(part.body as string);\r\n      // There is no locator equivalent for strict has-text, leave it as is.\r\n      if (!exact) {\r\n        tokens.push([factory.generateLocator(base, 'has-text', text, { exact })]);\r\n        continue;\r\n      }\r\n    }\r\n    if (part.name === 'internal:has-not-text') {\r\n      const { exact, text } = detectExact(part.body as string);\r\n      // There is no locator equivalent for strict has-not-text, leave it as is.\r\n      if (!exact) {\r\n        tokens.push([factory.generateLocator(base, 'has-not-text', text, { exact })]);\r\n        continue;\r\n      }\r\n    }\r\n    if (part.name === 'internal:has') {\r\n      const inners = innerAsLocators(factory, (part.body as NestedSelectorBody).parsed, false, maxOutputSize);\r\n      tokens.push(inners.map(inner => factory.generateLocator(base, 'has', inner)));\r\n      continue;\r\n    }\r\n    if (part.name === 'internal:has-not') {\r\n      const inners = innerAsLocators(factory, (part.body as NestedSelectorBody).parsed, false, maxOutputSize);\r\n      tokens.push(inners.map(inner => factory.generateLocator(base, 'hasNot', inner)));\r\n      continue;\r\n    }\r\n    if (part.name === 'internal:and') {\r\n      const inners = innerAsLocators(factory, (part.body as NestedSelectorBody).parsed, false, maxOutputSize);\r\n      tokens.push(inners.map(inner => factory.generateLocator(base, 'and', inner)));\r\n      continue;\r\n    }\r\n    if (part.name === 'internal:or') {\r\n      const inners = innerAsLocators(factory, (part.body as NestedSelectorBody).parsed, false, maxOutputSize);\r\n      tokens.push(inners.map(inner => factory.generateLocator(base, 'or', inner)));\r\n      continue;\r\n    }\r\n    if (part.name === 'internal:chain') {\r\n      const inners = innerAsLocators(factory, (part.body as NestedSelectorBody).parsed, false, maxOutputSize);\r\n      tokens.push(inners.map(inner => factory.generateLocator(base, 'chain', inner)));\r\n      continue;\r\n    }\r\n    if (part.name === 'internal:label') {\r\n      const { exact, text } = detectExact(part.body as string);\r\n      tokens.push([factory.generateLocator(base, 'label', text, { exact })]);\r\n      continue;\r\n    }\r\n    if (part.name === 'internal:role') {\r\n      const attrSelector = parseAttributeSelector(part.body as string, true);\r\n      const options: LocatorOptions = { attrs: [] };\r\n      for (const attr of attrSelector.attributes) {\r\n        if (attr.name === 'name') {\r\n          options.exact = attr.caseSensitive;\r\n          options.name = attr.value;\r\n        } else {\r\n          if (attr.name === 'level' && typeof attr.value === 'string')\r\n            attr.value = +attr.value;\r\n          options.attrs!.push({ name: attr.name === 'include-hidden' ? 'includeHidden' : attr.name, value: attr.value });\r\n        }\r\n      }\r\n      tokens.push([factory.generateLocator(base, 'role', attrSelector.name, options)]);\r\n      continue;\r\n    }\r\n    if (part.name === 'internal:testid') {\r\n      const attrSelector = parseAttributeSelector(part.body as string, true);\r\n      const { value } = attrSelector.attributes[0];\r\n      tokens.push([factory.generateLocator(base, 'test-id', value)]);\r\n      continue;\r\n    }\r\n    if (part.name === 'internal:attr') {\r\n      const attrSelector = parseAttributeSelector(part.body as string, true);\r\n      const { name, value, caseSensitive } = attrSelector.attributes[0];\r\n      const text = value as string | RegExp;\r\n      const exact = !!caseSensitive;\r\n      if (name === 'placeholder') {\r\n        tokens.push([factory.generateLocator(base, 'placeholder', text, { exact })]);\r\n        continue;\r\n      }\r\n      if (name === 'alt') {\r\n        tokens.push([factory.generateLocator(base, 'alt', text, { exact })]);\r\n        continue;\r\n      }\r\n      if (name === 'title') {\r\n        tokens.push([factory.generateLocator(base, 'title', text, { exact })]);\r\n        continue;\r\n      }\r\n    }\r\n    if (part.name === 'internal:control' && (part.body as string) === 'enter-frame') {\r\n      // transform last tokens from `${selector}` into `${selector}.contentFrame()` and `frameLocator(${selector})`\r\n      const lastTokens = tokens[tokens.length - 1];\r\n      const lastPart = parts[index - 1];\r\n\r\n      const transformed = lastTokens.map(token => factory.chainLocators([token, factory.generateLocator(base, 'frame', '')]));\r\n      if (['xpath', 'css'].includes(lastPart.name)) {\r\n        transformed.push(\r\n            factory.generateLocator(base, 'frame-locator', stringifySelector({ parts: [lastPart] })),\r\n            factory.generateLocator(base, 'frame-locator', stringifySelector({ parts: [lastPart] }, true))\r\n        );\r\n      }\r\n\r\n      lastTokens.splice(0, lastTokens.length, ...transformed);\r\n      nextBase = 'frame-locator';\r\n      continue;\r\n    }\r\n\r\n    const nextPart = parts[index + 1];\r\n\r\n    const selectorPart = stringifySelector({ parts: [part] });\r\n    const locatorPart = factory.generateLocator(base, 'default', selectorPart);\r\n\r\n    if (nextPart && ['internal:has-text', 'internal:has-not-text'].includes(nextPart.name)) {\r\n      const { exact, text } = detectExact(nextPart.body as string);\r\n      // There is no locator equivalent for strict has-text and has-not-text, leave it as is.\r\n      if (!exact) {\r\n        const nextLocatorPart = factory.generateLocator('locator', nextPart.name === 'internal:has-text' ? 'has-text' : 'has-not-text', text, { exact });\r\n        const options: LocatorOptions = {};\r\n        if (nextPart.name === 'internal:has-text')\r\n          options.hasText = text;\r\n        else\r\n          options.hasNotText = text;\r\n        const combinedPart = factory.generateLocator(base, 'default', selectorPart, options);\r\n        // Two options:\r\n        // - locator('div').filter({ hasText: 'foo' })\r\n        // - locator('div', { hasText: 'foo' })\r\n        tokens.push([factory.chainLocators([locatorPart, nextLocatorPart]), combinedPart]);\r\n        index++;\r\n        continue;\r\n      }\r\n    }\r\n\r\n    // Selectors can be prefixed with engine name, e.g. xpath=//foo\r\n    let locatorPartWithEngine: string | undefined;\r\n    if (['xpath', 'css'].includes(part.name)) {\r\n      const selectorPart = stringifySelector({ parts: [part] }, /* forceEngineName */ true);\r\n      locatorPartWithEngine = factory.generateLocator(base, 'default', selectorPart);\r\n    }\r\n\r\n    tokens.push([locatorPart, locatorPartWithEngine].filter(Boolean) as string[]);\r\n  }\r\n\r\n  return combineTokens(factory, tokens, maxOutputSize);\r\n}\r\n\r\nfunction combineTokens(factory: LocatorFactory, tokens: string[][], maxOutputSize: number): string[] {\r\n  const currentTokens = tokens.map(() => '');\r\n  const result: string[] = [];\r\n\r\n  const visit = (index: number) => {\r\n    if (index === tokens.length) {\r\n      result.push(factory.chainLocators(currentTokens));\r\n      return result.length < maxOutputSize;\r\n    }\r\n    for (const taken of tokens[index]) {\r\n      currentTokens[index] = taken;\r\n      if (!visit(index + 1))\r\n        return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  visit(0);\r\n  return result;\r\n}\r\n\r\nfunction detectExact(text: string): { exact?: boolean, text: string | RegExp } {\r\n  let exact = false;\r\n  const match = text.match(/^\\/(.*)\\/([igm]*)$/);\r\n  if (match)\r\n    return { text: new RegExp(match[1], match[2]) };\r\n  if (text.endsWith('\"')) {\r\n    text = JSON.parse(text);\r\n    exact = true;\r\n  } else if (text.endsWith('\"s')) {\r\n    text = JSON.parse(text.substring(0, text.length - 1));\r\n    exact = true;\r\n  } else if (text.endsWith('\"i')) {\r\n    text = JSON.parse(text.substring(0, text.length - 1));\r\n    exact = false;\r\n  }\r\n  return { exact, text };\r\n}\r\n\r\nexport class JavaScriptLocatorFactory implements LocatorFactory {\r\n  constructor(private preferredQuote?: Quote) {}\r\n\r\n  generateLocator(base: LocatorBase, kind: LocatorType, body: string | RegExp, options: LocatorOptions = {}): string {\r\n    switch (kind) {\r\n      case 'default':\r\n        if (options.hasText !== undefined)\r\n          return `locator(${this.quote(body as string)}, { hasText: ${this.toHasText(options.hasText)} })`;\r\n        if (options.hasNotText !== undefined)\r\n          return `locator(${this.quote(body as string)}, { hasNotText: ${this.toHasText(options.hasNotText)} })`;\r\n        return `locator(${this.quote(body as string)})`;\r\n      case 'frame-locator':\r\n        return `frameLocator(${this.quote(body as string)})`;\r\n      case 'frame':\r\n        return `contentFrame()`;\r\n      case 'nth':\r\n        return `nth(${body})`;\r\n      case 'first':\r\n        return `first()`;\r\n      case 'last':\r\n        return `last()`;\r\n      case 'visible':\r\n        return `filter({ visible: ${body === 'true' ? 'true' : 'false'} })`;\r\n      case 'role':\r\n        const attrs: string[] = [];\r\n        if (isRegExp(options.name)) {\r\n          attrs.push(`name: ${this.regexToSourceString(options.name)}`);\r\n        } else if (typeof options.name === 'string') {\r\n          attrs.push(`name: ${this.quote(options.name)}`);\r\n          if (options.exact)\r\n            attrs.push(`exact: true`);\r\n        }\r\n        for (const { name, value } of options.attrs!)\r\n          attrs.push(`${name}: ${typeof value === 'string' ? this.quote(value) : value}`);\r\n        const attrString = attrs.length ? `, { ${attrs.join(', ')} }` : '';\r\n        return `getByRole(${this.quote(body as string)}${attrString})`;\r\n      case 'has-text':\r\n        return `filter({ hasText: ${this.toHasText(body)} })`;\r\n      case 'has-not-text':\r\n        return `filter({ hasNotText: ${this.toHasText(body)} })`;\r\n      case 'has':\r\n        return `filter({ has: ${body} })`;\r\n      case 'hasNot':\r\n        return `filter({ hasNot: ${body} })`;\r\n      case 'and':\r\n        return `and(${body})`;\r\n      case 'or':\r\n        return `or(${body})`;\r\n      case 'chain':\r\n        return `locator(${body})`;\r\n      case 'test-id':\r\n        return `getByTestId(${this.toTestIdValue(body)})`;\r\n      case 'text':\r\n        return this.toCallWithExact('getByText', body, !!options.exact);\r\n      case 'alt':\r\n        return this.toCallWithExact('getByAltText', body, !!options.exact);\r\n      case 'placeholder':\r\n        return this.toCallWithExact('getByPlaceholder', body, !!options.exact);\r\n      case 'label':\r\n        return this.toCallWithExact('getByLabel', body, !!options.exact);\r\n      case 'title':\r\n        return this.toCallWithExact('getByTitle', body, !!options.exact);\r\n      default:\r\n        throw new Error('Unknown selector kind ' + kind);\r\n    }\r\n  }\r\n\r\n  chainLocators(locators: string[]): string {\r\n    return locators.join('.');\r\n  }\r\n\r\n  private regexToSourceString(re: RegExp) {\r\n    return normalizeEscapedRegexQuotes(String(re));\r\n  }\r\n\r\n  private toCallWithExact(method: string, body: string | RegExp, exact?: boolean) {\r\n    if (isRegExp(body))\r\n      return `${method}(${this.regexToSourceString(body)})`;\r\n    return exact ? `${method}(${this.quote(body)}, { exact: true })` : `${method}(${this.quote(body)})`;\r\n  }\r\n\r\n  private toHasText(body: string | RegExp) {\r\n    if (isRegExp(body))\r\n      return this.regexToSourceString(body);\r\n    return this.quote(body);\r\n  }\r\n\r\n  private toTestIdValue(value: string | RegExp): string {\r\n    if (isRegExp(value))\r\n      return this.regexToSourceString(value);\r\n    return this.quote(value);\r\n  }\r\n\r\n  private quote(text: string) {\r\n    return escapeWithQuotes(text, this.preferredQuote ?? '\\'');\r\n  }\r\n}\r\n\r\nexport class PythonLocatorFactory implements LocatorFactory {\r\n  generateLocator(base: LocatorBase, kind: LocatorType, body: string | RegExp, options: LocatorOptions = {}): string {\r\n    switch (kind) {\r\n      case 'default':\r\n        if (options.hasText !== undefined)\r\n          return `locator(${this.quote(body as string)}, has_text=${this.toHasText(options.hasText)})`;\r\n        if (options.hasNotText !== undefined)\r\n          return `locator(${this.quote(body as string)}, has_not_text=${this.toHasText(options.hasNotText)})`;\r\n        return `locator(${this.quote(body as string)})`;\r\n      case 'frame-locator':\r\n        return `frame_locator(${this.quote(body as string)})`;\r\n      case 'frame':\r\n        return `content_frame`;\r\n      case 'nth':\r\n        return `nth(${body})`;\r\n      case 'first':\r\n        return `first`;\r\n      case 'last':\r\n        return `last`;\r\n      case 'visible':\r\n        return `filter(visible=${body === 'true' ? 'True' : 'False'})`;\r\n      case 'role':\r\n        const attrs: string[] = [];\r\n        if (isRegExp(options.name)) {\r\n          attrs.push(`name=${this.regexToString(options.name)}`);\r\n        } else if (typeof options.name === 'string') {\r\n          attrs.push(`name=${this.quote(options.name)}`);\r\n          if (options.exact)\r\n            attrs.push(`exact=True`);\r\n        }\r\n        for (const { name, value } of options.attrs!) {\r\n          let valueString = typeof value === 'string' ? this.quote(value) : value;\r\n          if (typeof value === 'boolean')\r\n            valueString = value ? 'True' : 'False';\r\n          attrs.push(`${toSnakeCase(name)}=${valueString}`);\r\n        }\r\n        const attrString = attrs.length ? `, ${attrs.join(', ')}` : '';\r\n        return `get_by_role(${this.quote(body as string)}${attrString})`;\r\n      case 'has-text':\r\n        return `filter(has_text=${this.toHasText(body)})`;\r\n      case 'has-not-text':\r\n        return `filter(has_not_text=${this.toHasText(body)})`;\r\n      case 'has':\r\n        return `filter(has=${body})`;\r\n      case 'hasNot':\r\n        return `filter(has_not=${body})`;\r\n      case 'and':\r\n        return `and_(${body})`;\r\n      case 'or':\r\n        return `or_(${body})`;\r\n      case 'chain':\r\n        return `locator(${body})`;\r\n      case 'test-id':\r\n        return `get_by_test_id(${this.toTestIdValue(body)})`;\r\n      case 'text':\r\n        return this.toCallWithExact('get_by_text', body, !!options.exact);\r\n      case 'alt':\r\n        return this.toCallWithExact('get_by_alt_text', body, !!options.exact);\r\n      case 'placeholder':\r\n        return this.toCallWithExact('get_by_placeholder', body, !!options.exact);\r\n      case 'label':\r\n        return this.toCallWithExact('get_by_label', body, !!options.exact);\r\n      case 'title':\r\n        return this.toCallWithExact('get_by_title', body, !!options.exact);\r\n      default:\r\n        throw new Error('Unknown selector kind ' + kind);\r\n    }\r\n  }\r\n\r\n  chainLocators(locators: string[]): string {\r\n    return locators.join('.');\r\n  }\r\n\r\n  private regexToString(body: RegExp) {\r\n    const suffix = body.flags.includes('i') ? ', re.IGNORECASE' : '';\r\n    return `re.compile(r\"${normalizeEscapedRegexQuotes(body.source).replace(/\\\\\\//, '/').replace(/\"/g, '\\\\\"')}\"${suffix})`;\r\n  }\r\n\r\n  private toCallWithExact(method: string, body: string | RegExp, exact: boolean) {\r\n    if (isRegExp(body))\r\n      return `${method}(${this.regexToString(body)})`;\r\n    if (exact)\r\n      return `${method}(${this.quote(body)}, exact=True)`;\r\n    return `${method}(${this.quote(body)})`;\r\n  }\r\n\r\n  private toHasText(body: string | RegExp) {\r\n    if (isRegExp(body))\r\n      return this.regexToString(body);\r\n    return `${this.quote(body)}`;\r\n  }\r\n\r\n  private toTestIdValue(value: string | RegExp) {\r\n    if (isRegExp(value))\r\n      return this.regexToString(value);\r\n    return this.quote(value);\r\n  }\r\n\r\n  private quote(text: string) {\r\n    return escapeWithQuotes(text, '\\\"');\r\n  }\r\n}\r\n\r\nexport class JavaLocatorFactory implements LocatorFactory {\r\n  generateLocator(base: LocatorBase, kind: LocatorType, body: string | RegExp, options: LocatorOptions = {}): string {\r\n    let clazz: string;\r\n    switch (base) {\r\n      case 'page': clazz = 'Page'; break;\r\n      case 'frame-locator': clazz = 'FrameLocator'; break;\r\n      case 'locator': clazz = 'Locator'; break;\r\n    }\r\n    switch (kind) {\r\n      case 'default':\r\n        if (options.hasText !== undefined)\r\n          return `locator(${this.quote(body as string)}, new ${clazz}.LocatorOptions().setHasText(${this.toHasText(options.hasText)}))`;\r\n        if (options.hasNotText !== undefined)\r\n          return `locator(${this.quote(body as string)}, new ${clazz}.LocatorOptions().setHasNotText(${this.toHasText(options.hasNotText)}))`;\r\n        return `locator(${this.quote(body as string)})`;\r\n      case 'frame-locator':\r\n        return `frameLocator(${this.quote(body as string)})`;\r\n      case 'frame':\r\n        return `contentFrame()`;\r\n      case 'nth':\r\n        return `nth(${body})`;\r\n      case 'first':\r\n        return `first()`;\r\n      case 'last':\r\n        return `last()`;\r\n      case 'visible':\r\n        return `filter(new ${clazz}.FilterOptions().setVisible(${body === 'true' ? 'true' : 'false'}))`;\r\n      case 'role':\r\n        const attrs: string[] = [];\r\n        if (isRegExp(options.name)) {\r\n          attrs.push(`.setName(${this.regexToString(options.name)})`);\r\n        } else if (typeof options.name === 'string') {\r\n          attrs.push(`.setName(${this.quote(options.name)})`);\r\n          if (options.exact)\r\n            attrs.push(`.setExact(true)`);\r\n        }\r\n        for (const { name, value } of options.attrs!)\r\n          attrs.push(`.set${toTitleCase(name)}(${typeof value === 'string' ? this.quote(value) : value})`);\r\n        const attrString = attrs.length ? `, new ${clazz}.GetByRoleOptions()${attrs.join('')}` : '';\r\n        return `getByRole(AriaRole.${toSnakeCase(body as string).toUpperCase()}${attrString})`;\r\n      case 'has-text':\r\n        return `filter(new ${clazz}.FilterOptions().setHasText(${this.toHasText(body)}))`;\r\n      case 'has-not-text':\r\n        return `filter(new ${clazz}.FilterOptions().setHasNotText(${this.toHasText(body)}))`;\r\n      case 'has':\r\n        return `filter(new ${clazz}.FilterOptions().setHas(${body}))`;\r\n      case 'hasNot':\r\n        return `filter(new ${clazz}.FilterOptions().setHasNot(${body}))`;\r\n      case 'and':\r\n        return `and(${body})`;\r\n      case 'or':\r\n        return `or(${body})`;\r\n      case 'chain':\r\n        return `locator(${body})`;\r\n      case 'test-id':\r\n        return `getByTestId(${this.toTestIdValue(body)})`;\r\n      case 'text':\r\n        return this.toCallWithExact(clazz, 'getByText', body, !!options.exact);\r\n      case 'alt':\r\n        return this.toCallWithExact(clazz, 'getByAltText', body, !!options.exact);\r\n      case 'placeholder':\r\n        return this.toCallWithExact(clazz, 'getByPlaceholder', body, !!options.exact);\r\n      case 'label':\r\n        return this.toCallWithExact(clazz, 'getByLabel', body, !!options.exact);\r\n      case 'title':\r\n        return this.toCallWithExact(clazz, 'getByTitle', body, !!options.exact);\r\n      default:\r\n        throw new Error('Unknown selector kind ' + kind);\r\n    }\r\n  }\r\n\r\n  chainLocators(locators: string[]): string {\r\n    return locators.join('.');\r\n  }\r\n\r\n  private regexToString(body: RegExp) {\r\n    const suffix = body.flags.includes('i') ? ', Pattern.CASE_INSENSITIVE' : '';\r\n    return `Pattern.compile(${this.quote(normalizeEscapedRegexQuotes(body.source))}${suffix})`;\r\n  }\r\n\r\n  private toCallWithExact(clazz: string, method: string, body: string | RegExp, exact: boolean) {\r\n    if (isRegExp(body))\r\n      return `${method}(${this.regexToString(body)})`;\r\n    if (exact)\r\n      return `${method}(${this.quote(body)}, new ${clazz}.${toTitleCase(method)}Options().setExact(true))`;\r\n    return `${method}(${this.quote(body)})`;\r\n  }\r\n\r\n  private toHasText(body: string | RegExp) {\r\n    if (isRegExp(body))\r\n      return this.regexToString(body);\r\n    return this.quote(body);\r\n  }\r\n\r\n  private toTestIdValue(value: string | RegExp) {\r\n    if (isRegExp(value))\r\n      return this.regexToString(value);\r\n    return this.quote(value);\r\n  }\r\n\r\n  private quote(text: string) {\r\n    return escapeWithQuotes(text, '\\\"');\r\n  }\r\n}\r\n\r\nexport class CSharpLocatorFactory implements LocatorFactory {\r\n  generateLocator(base: LocatorBase, kind: LocatorType, body: string | RegExp, options: LocatorOptions = {}): string {\r\n    switch (kind) {\r\n      case 'default':\r\n        if (options.hasText !== undefined)\r\n          return `Locator(${this.quote(body as string)}, new() { ${this.toHasText(options.hasText)} })`;\r\n        if (options.hasNotText !== undefined)\r\n          return `Locator(${this.quote(body as string)}, new() { ${this.toHasNotText(options.hasNotText)} })`;\r\n        return `Locator(${this.quote(body as string)})`;\r\n      case 'frame-locator':\r\n        return `FrameLocator(${this.quote(body as string)})`;\r\n      case 'frame':\r\n        return `ContentFrame`;\r\n      case 'nth':\r\n        return `Nth(${body})`;\r\n      case 'first':\r\n        return `First`;\r\n      case 'last':\r\n        return `Last`;\r\n      case 'visible':\r\n        return `Filter(new() { Visible = ${body === 'true' ? 'true' : 'false'} })`;\r\n      case 'role':\r\n        const attrs: string[] = [];\r\n        if (isRegExp(options.name)) {\r\n          attrs.push(`NameRegex = ${this.regexToString(options.name)}`);\r\n        } else if (typeof options.name === 'string') {\r\n          attrs.push(`Name = ${this.quote(options.name)}`);\r\n          if (options.exact)\r\n            attrs.push(`Exact = true`);\r\n        }\r\n        for (const { name, value } of options.attrs!)\r\n          attrs.push(`${toTitleCase(name)} = ${typeof value === 'string' ? this.quote(value) : value}`);\r\n        const attrString = attrs.length ? `, new() { ${attrs.join(', ')} }` : '';\r\n        return `GetByRole(AriaRole.${toTitleCase(body as string)}${attrString})`;\r\n      case 'has-text':\r\n        return `Filter(new() { ${this.toHasText(body)} })`;\r\n      case 'has-not-text':\r\n        return `Filter(new() { ${this.toHasNotText(body)} })`;\r\n      case 'has':\r\n        return `Filter(new() { Has = ${body} })`;\r\n      case 'hasNot':\r\n        return `Filter(new() { HasNot = ${body} })`;\r\n      case 'and':\r\n        return `And(${body})`;\r\n      case 'or':\r\n        return `Or(${body})`;\r\n      case 'chain':\r\n        return `Locator(${body})`;\r\n      case 'test-id':\r\n        return `GetByTestId(${this.toTestIdValue(body)})`;\r\n      case 'text':\r\n        return this.toCallWithExact('GetByText', body, !!options.exact);\r\n      case 'alt':\r\n        return this.toCallWithExact('GetByAltText', body, !!options.exact);\r\n      case 'placeholder':\r\n        return this.toCallWithExact('GetByPlaceholder', body, !!options.exact);\r\n      case 'label':\r\n        return this.toCallWithExact('GetByLabel', body, !!options.exact);\r\n      case 'title':\r\n        return this.toCallWithExact('GetByTitle', body, !!options.exact);\r\n      default:\r\n        throw new Error('Unknown selector kind ' + kind);\r\n    }\r\n  }\r\n\r\n  chainLocators(locators: string[]): string {\r\n    return locators.join('.');\r\n  }\r\n\r\n  private regexToString(body: RegExp): string {\r\n    const suffix = body.flags.includes('i') ? ', RegexOptions.IgnoreCase' : '';\r\n    return `new Regex(${this.quote(normalizeEscapedRegexQuotes(body.source))}${suffix})`;\r\n  }\r\n\r\n  private toCallWithExact(method: string, body: string | RegExp, exact: boolean) {\r\n    if (isRegExp(body))\r\n      return `${method}(${this.regexToString(body)})`;\r\n    if (exact)\r\n      return `${method}(${this.quote(body)}, new() { Exact = true })`;\r\n    return `${method}(${this.quote(body)})`;\r\n  }\r\n\r\n  private toHasText(body: string | RegExp) {\r\n    if (isRegExp(body))\r\n      return `HasTextRegex = ${this.regexToString(body)}`;\r\n    return `HasText = ${this.quote(body)}`;\r\n  }\r\n\r\n  private toTestIdValue(value: string | RegExp) {\r\n    if (isRegExp(value))\r\n      return this.regexToString(value);\r\n    return this.quote(value);\r\n  }\r\n\r\n  private toHasNotText(body: string | RegExp) {\r\n    if (isRegExp(body))\r\n      return `HasNotTextRegex = ${this.regexToString(body)}`;\r\n    return `HasNotText = ${this.quote(body)}`;\r\n  }\r\n\r\n  private quote(text: string) {\r\n    return escapeWithQuotes(text, '\\\"');\r\n  }\r\n}\r\n\r\nexport class JsonlLocatorFactory implements LocatorFactory {\r\n  generateLocator(base: LocatorBase, kind: LocatorType, body: string | RegExp, options: LocatorOptions = {}): string {\r\n    return JSON.stringify({\r\n      kind,\r\n      body,\r\n      options,\r\n    });\r\n  }\r\n\r\n  chainLocators(locators: string[]): string {\r\n    const objects = locators.map(l => JSON.parse(l));\r\n    for (let i = 0; i < objects.length - 1; ++i)\r\n      objects[i].next = objects[i + 1];\r\n    return JSON.stringify(objects[0]);\r\n  }\r\n}\r\n\r\nconst generators: Record<Language, new (preferredQuote?: Quote) => LocatorFactory> = {\r\n  javascript: JavaScriptLocatorFactory,\r\n  python: PythonLocatorFactory,\r\n  java: JavaLocatorFactory,\r\n  csharp: CSharpLocatorFactory,\r\n  jsonl: JsonlLocatorFactory,\r\n};\r\n\r\nfunction isRegExp(obj: any): obj is RegExp {\r\n  return obj instanceof RegExp;\r\n}\r\n","/*\n  Copyright (c) Microsoft Corporation.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport './callLog.css';\nimport * as React from 'react';\nimport type { CallLog } from './recorderTypes';\nimport { clsx, msToString } from '@web/uiUtils';\nimport { asLocator } from '@isomorphic/locatorGenerators';\nimport type { Language } from '@isomorphic/locatorGenerators';\n\nexport type CallLogProps = {\n  language: Language;\n  log: CallLog[];\n};\n\nexport const CallLogView: React.FC<CallLogProps> = ({\n  language,\n  log,\n}) => {\n  const messagesEndRef = React.useRef<HTMLDivElement>(null);\n  const [expandOverrides, setExpandOverrides] = React.useState<Map<string, boolean>>(new Map());\n  React.useLayoutEffect(() => {\n    if (log.find(callLog => callLog.reveal))\n      messagesEndRef.current?.scrollIntoView({ block: 'center', inline: 'nearest' });\n  }, [messagesEndRef, log]);\n  return <div className='call-log' style={{ flex: 'auto' }}>\n    {log.map(callLog => {\n      const expandOverride = expandOverrides.get(callLog.id);\n      const isExpanded = typeof expandOverride === 'boolean' ? expandOverride : callLog.status !== 'done';\n      const locator = callLog.params.selector ? asLocator(language, callLog.params.selector) : null;\n      let titlePrefix = callLog.title;\n      let titleSuffix = '';\n      if (callLog.title.startsWith('expect.to') || callLog.title.startsWith('expect.not.to')) {\n        titlePrefix = 'expect(';\n        titleSuffix = `).${callLog.title.substring('expect.'.length)}()`;\n      } else if (callLog.title.startsWith('locator.')) {\n        titlePrefix = '';\n        titleSuffix = `.${callLog.title.substring('locator.'.length)}()`;\n      } else if (locator || callLog.params.url) {\n        titlePrefix = callLog.title + '(';\n        titleSuffix = ')';\n      }\n      return <div className={clsx('call-log-call', callLog.status)} key={callLog.id}>\n        <div className='call-log-call-header'>\n          <span className={clsx('codicon', `codicon-chevron-${isExpanded ? 'down' : 'right'}`)} style={{ cursor: 'pointer' }}onClick={() => {\n            const newOverrides = new Map(expandOverrides);\n            newOverrides.set(callLog.id, !isExpanded);\n            setExpandOverrides(newOverrides);\n          }}></span>\n          { titlePrefix }\n          { callLog.params.url ? <span className='call-log-details'><span className='call-log-url' title={callLog.params.url}>{callLog.params.url}</span></span> : undefined }\n          { locator ? <span className='call-log-details'><span className='call-log-selector' title={`page.${locator}`}>{`page.${locator}`}</span></span> : undefined }\n          { titleSuffix }\n          <span className={clsx('codicon', iconClass(callLog))}></span>\n          { typeof callLog.duration === 'number' ? <span className='call-log-time'>— {msToString(callLog.duration)}</span> : undefined}\n        </div>\n        { (isExpanded ? callLog.messages : []).map((message, i) => {\n          return <div className='call-log-message' key={i}>\n            { message.trim() }\n          </div>;\n        })}\n        { !!callLog.error && <div className='call-log-message error' hidden={!isExpanded}>{ callLog.error }</div> }\n      </div>;\n    })}\n    <div ref={messagesEndRef}></div>\n  </div>;\n};\n\nfunction iconClass(callLog: CallLog): string {\n  switch (callLog.status) {\n    case 'done': return 'codicon-check';\n    case 'in-progress': return 'codicon-clock';\n    case 'paused': return 'codicon-debug-pause';\n    case 'error': return 'codicon-error';\n  }\n}\n","const ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar(node) || isCollection(node)) && !!node.anchor;\n\nexport { ALIAS, DOC, MAP, NODE_TYPE, PAIR, SCALAR, SEQ, hasAnchor, isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq };\n","import { isDocument, isNode, isPair, isCollection, isMap, isSeq, isScalar, isAlias } from './nodes/identity.js';\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (isScalar(node))\n        return visitor.Scalar?.(key, node, path);\n    if (isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexport { visit, visitAsync };\n","import { isNode } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/s);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix) {\n            try {\n                return prefix + decodeURIComponent(suffix);\n            }\n            catch (error) {\n                onError(String(error));\n                return null;\n            }\n        }\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && isNode(doc.contents)) {\n            const tags = {};\n            visit(doc.contents, (_key, node) => {\n                if (isNode(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\nexport { Directives };\n","import { isScalar, isCollection } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    visit(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            if (!prevAnchors)\n                prevAnchors = anchorNames(doc);\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    (isScalar(ref.node) || isCollection(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\nexport { anchorIsValid, anchorNames, createNodeAnchors, findNewAnchor };\n","/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                // eslint-disable-next-line @typescript-eslint/no-array-delete\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nexport { applyReviver };\n","import { hasAnchor } from './identity.js';\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\nexport { toJS };\n","import { applyReviver } from '../doc/applyReviver.js';\nimport { NODE_TYPE, isDocument } from './identity.js';\nimport { toJS } from './toJS.js';\n\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** A plain JavaScript representation of this node. */\n    toJS(doc, { mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        if (!isDocument(doc))\n            throw new TypeError('A document argument is required');\n        const ctx = {\n            anchors: new Map(),\n            doc,\n            keep: true,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this, '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n}\n\nexport { NodeBase };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { visit } from '../visit.js';\nimport { ALIAS, isAlias, isCollection, isPair } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nclass Alias extends NodeBase {\n    constructor(source) {\n        super(ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc) {\n        let found = undefined;\n        visit(doc, {\n            Node: (_key, node) => {\n                if (node === this)\n                    return visit.BREAK;\n                if (node.anchor === this.source)\n                    found = node;\n            }\n        });\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        let data = anchors.get(source);\n        if (!data) {\n            // Resolve anchors for Node.prototype.toJS()\n            toJS(source, null, ctx);\n            data = anchors.get(source);\n        }\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            anchorIsValid(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if (isAlias(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if (isCollection(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if (isPair(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\nexport { Alias };\n","import { SCALAR } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends NodeBase {\n    constructor(value) {\n        super(SCALAR);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return ctx?.keep ? this.value : toJS(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\nexport { Scalar, isScalarValue };\n","import { Alias } from '../nodes/Alias.js';\nimport { isNode, isPair, MAP, SEQ, isDocument } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = match.find(t => !t.format) ?? match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n    if (isDocument(value))\n        value = value.contents;\n    if (isNode(value))\n        return value;\n    if (isPair(value)) {\n        const map = ctx.schema[MAP].createNode?.(ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt !== 'undefined' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            if (!ref.anchor)\n                ref.anchor = onAnchor(value);\n            return new Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName?.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[SEQ]\n                    : schema[MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = tagObj?.createNode\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : typeof tagObj?.nodeClass?.from === 'function'\n            ? tagObj.nodeClass.from(ctx.schema, value, ctx)\n            : new Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    else if (!tagObj.default)\n        node.tag = tagObj.tag;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\nexport { createNode };\n","import { createNode } from '../doc/createNode.js';\nimport { isNode, isPair, isCollection, isScalar } from './identity.js';\nimport { NodeBase } from './Node.js';\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => isNode(it) || isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (isCollection(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && isScalar(node) ? node.value : node;\n        else\n            return isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    isScalar(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return isCollection(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\n\nexport { Collection, collectionFromPath, isEmptyPath };\n","/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nexport { indentComment, lineComment, stringifyComment };\n","const FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    if (lineWidth < minContentWidth)\n        minContentWidth = 0;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i, indent.length);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i, indent.length);\n            end = i + indent.length + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i, indent) {\n    let end = i;\n    let start = i + 1;\n    let ch = text[start];\n    while (ch === ' ' || ch === '\\t') {\n        if (i < start + indent) {\n            ch = text[++i];\n        }\n        else {\n            do {\n                ch = text[++i];\n            } while (ch && ch !== '\\n');\n            end = i;\n            start = i + 1;\n            ch = text[start];\n        }\n    }\n    return end;\n}\n\nexport { FOLD_BLOCK, FOLD_FLOW, FOLD_QUOTED, foldFlowLines };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { foldFlowLines, FOLD_QUOTED, FOLD_FLOW, FOLD_BLOCK } from './foldFlowLines.js';\n\nconst getFoldOptions = (ctx, isBlock) => ({\n    indentAtStart: isBlock ? ctx.indent.length : ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx, false));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\n// The negative lookbehind avoids a polynomial search,\n// but isn't supported yet on Safari: https://caniuse.com/js-regexp-lookbehind\nlet blockEndNewlines;\ntry {\n    blockEndNewlines = new RegExp('(^|(?<!\\n))\\n+(?!\\n|$)', 'g');\n}\ncatch {\n    blockEndNewlines = /\\n+(?!\\n|$)/g;\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === Scalar.BLOCK_FOLDED\n            ? false\n            : type === Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(blockEndNewlines, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    let header = (literal ? '|' : '>') + (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (literal) {\n        value = value.replace(/\\n+/g, `$&${indent}`);\n        return `${header}\\n${indent}${start}${value}${end}`;\n    }\n    value = value\n        .replace(/\\n+/g, '\\n$&')\n        .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n        //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n        .replace(/\\n+/g, `$&${indent}`);\n    const body = foldFlowLines(`${start}${value}${end}`, indent, FOLD_BLOCK, getFoldOptions(ctx, true));\n    return `${header}\\n${indent}${body}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, indentStep, inFlow } = ctx;\n    if ((implicitKey && value.includes('\\n')) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (!value ||\n        /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - empty string, '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (containsDocumentMarker(value)) {\n        if (indent === '') {\n            ctx.forceBlockIndent = true;\n            return blockString(item, ctx, onComment, onChompKeep);\n        }\n        else if (implicitKey && indent === indentStep) {\n            return quotedString(value, ctx);\n        }\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || compat?.some(test))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case Scalar.BLOCK_FOLDED:\n            case Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\nexport { stringifyString };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { isPair, isAlias, isNode, isScalar, isCollection } from '../nodes/identity.js';\nimport { stringifyComment } from './stringifyComment.js';\nimport { stringifyString } from './stringifyString.js';\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        flowCollectionPadding: true,\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        flowCollectionPadding: opt.flowCollectionPadding ? ' ' : '',\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (isScalar(item)) {\n        obj = item.value;\n        let match = tags.filter(t => t.identify?.(obj));\n        if (match.length > 1) {\n            const testMatch = match.filter(t => t.test);\n            if (testMatch.length > 0)\n                match = testMatch;\n        }\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? typeof obj;\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (isScalar(node) || isCollection(node)) && node.anchor;\n    if (anchor && anchorIsValid(anchor)) {\n        anchors.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ? node.tag : tagObj.default ? null : tagObj.tag;\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    if (isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    if (!tagObj)\n        tagObj = getTagObject(ctx.doc.schema.tags, node);\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : isScalar(node)\n            ? stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return isScalar(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nexport { createStringifyContext, stringify };\n","import { isCollection, isNode, isScalar, isSeq } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (isCollection(key) || (!isNode(key) && typeof key === 'object')) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            isCollection(key) ||\n            (isScalar(key)\n                ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vsb, vcb, valueComment;\n    if (isNode(value)) {\n        vsb = !!value.spaceBefore;\n        vcb = value.commentBefore;\n        valueComment = value.comment;\n    }\n    else {\n        vsb = false;\n        vcb = null;\n        valueComment = null;\n        if (value && typeof value === 'object')\n            value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substring(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (keyComment || vsb || vcb) {\n        ws = vsb ? '\\n' : '';\n        if (vcb) {\n            const cs = commentString(vcb);\n            ws += `\\n${indentComment(cs, ctx.indent)}`;\n        }\n        if (valueStr === '' && !ctx.inFlow) {\n            if (ws === '\\n')\n                ws = '\\n\\n';\n        }\n        else {\n            ws += `\\n${ctx.indent}`;\n        }\n    }\n    else if (!explicitKey && isCollection(value)) {\n        const vs0 = valueStr[0];\n        const nl0 = valueStr.indexOf('\\n');\n        const hasNewline = nl0 !== -1;\n        const flow = ctx.inFlow ?? value.flow ?? value.items.length === 0;\n        if (hasNewline || !flow) {\n            let hasPropsLine = false;\n            if (hasNewline && (vs0 === '&' || vs0 === '!')) {\n                let sp0 = valueStr.indexOf(' ');\n                if (vs0 === '&' &&\n                    sp0 !== -1 &&\n                    sp0 < nl0 &&\n                    valueStr[sp0 + 1] === '!') {\n                    sp0 = valueStr.indexOf(' ', sp0 + 1);\n                }\n                if (sp0 === -1 || nl0 < sp0)\n                    hasPropsLine = true;\n            }\n            if (!hasPropsLine)\n                ws = `\\n${ctx.indent}`;\n        }\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n') {\n        ws = '';\n    }\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexport { stringifyPair };\n","function debug(logLevel, ...messages) {\n    if (logLevel === 'debug')\n        console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        if (typeof process !== 'undefined' && process.emitWarning)\n            process.emitWarning(warning);\n        else\n            console.warn(warning);\n    }\n}\n\nexport { debug, warn };\n","import { isScalar, isAlias, isSeq, isMap } from '../../nodes/identity.js';\nimport { Scalar } from '../../nodes/Scalar.js';\n\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nconst MERGE_KEY = '<<';\nconst merge = {\n    identify: value => value === MERGE_KEY ||\n        (typeof value === 'symbol' && value.description === MERGE_KEY),\n    default: 'key',\n    tag: 'tag:yaml.org,2002:merge',\n    test: /^<<$/,\n    resolve: () => Object.assign(new Scalar(Symbol(MERGE_KEY)), {\n        addToJSMap: addMergeToJSMap\n    }),\n    stringify: () => MERGE_KEY\n};\nconst isMergeKey = (ctx, key) => (merge.identify(key) ||\n    (isScalar(key) &&\n        (!key.type || key.type === Scalar.PLAIN) &&\n        merge.identify(key.value))) &&\n    ctx?.doc.schema.tags.some(tag => tag.tag === merge.tag && tag.default);\nfunction addMergeToJSMap(ctx, map, value) {\n    value = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (isSeq(value))\n        for (const it of value.items)\n            mergeValue(ctx, map, it);\n    else if (Array.isArray(value))\n        for (const it of value)\n            mergeValue(ctx, map, it);\n    else\n        mergeValue(ctx, map, value);\n}\nfunction mergeValue(ctx, map, value) {\n    const source = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\n\nexport { addMergeToJSMap, isMergeKey, merge };\n","import { warn } from '../log.js';\nimport { isMergeKey, addMergeToJSMap } from '../schema/yaml-1.1/merge.js';\nimport { createStringifyContext } from '../stringify/stringify.js';\nimport { isNode } from './identity.js';\nimport { toJS } from './toJS.js';\n\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (isNode(key) && key.addToJSMap)\n        key.addToJSMap(ctx, map, value);\n    // TODO: Should drop this special case for bare << handling\n    else if (isMergeKey(ctx, key))\n        addMergeToJSMap(ctx, map, value);\n    else {\n        const jsKey = toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (isNode(key) && ctx?.doc) {\n        const strCtx = createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexport { addPairToJSMap };\n","import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './identity.js';\n\nfunction createPair(key, value, ctx) {\n    const k = createNode(key, undefined, ctx);\n    const v = createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, NODE_TYPE, { value: PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (isNode(key))\n            key = key.clone(schema);\n        if (isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nexport { Pair, createPair };\n","import { isNode, isPair } from '../nodes/identity.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ items }, ctx, { flowChars, itemIndent }) {\n    const { indent, indentStep, flowCollectionPadding: fcPadding, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik?.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        return start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = ctx.options.lineWidth > 0 && len > ctx.options.lineWidth;\n        }\n        if (reqNewline) {\n            let str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            return `${str}\\n${indent}${end}`;\n        }\n        else {\n            return `${start}${fcPadding}${lines.join(' ')}${fcPadding}${end}`;\n        }\n    }\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nexport { stringifyCollection };\n","import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { Collection } from './Collection.js';\nimport { isPair, isScalar, MAP } from './identity.js';\nimport { Pair, createPair } from './Pair.js';\nimport { isScalarValue } from './Scalar.js';\n\nfunction findPair(items, key) {\n    const k = isScalar(key) ? key.value : key;\n    for (const it of items) {\n        if (isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (isScalar(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    constructor(schema) {\n        super(MAP, schema);\n        this.items = [];\n    }\n    /**\n     * A generic collection parsing method that can be extended\n     * to other node classes that inherit from YAMLMap\n     */\n    static from(schema, obj, ctx) {\n        const { keepUndefined, replacer } = ctx;\n        const map = new this(schema);\n        const add = (key, value) => {\n            if (typeof replacer === 'function')\n                value = replacer.call(obj, key, value);\n            else if (Array.isArray(replacer) && !replacer.includes(key))\n                return;\n            if (value !== undefined || keepUndefined)\n                map.items.push(createPair(key, value, ctx));\n        };\n        if (obj instanceof Map) {\n            for (const [key, value] of obj)\n                add(key, value);\n        }\n        else if (obj && typeof obj === 'object') {\n            for (const key of Object.keys(obj))\n                add(key, obj[key]);\n        }\n        if (typeof schema.sortMapEntries === 'function') {\n            map.items.sort(schema.sortMapEntries);\n        }\n        return map;\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if (isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair(pair, pair?.value);\n        }\n        else\n            _pair = new Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (isScalar(prev.value) && isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && isScalar(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nexport { YAMLMap, findPair };\n","import { isMap } from '../../nodes/identity.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\n\nconst map = {\n    collection: 'map',\n    default: true,\n    nodeClass: YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!isMap(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode: (schema, obj, ctx) => YAMLMap.from(schema, obj, ctx)\n};\n\nexport { map };\n","import { createNode } from '../doc/createNode.js';\nimport { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { Collection } from './Collection.js';\nimport { SEQ, isScalar } from './identity.js';\nimport { isScalarValue } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nclass YAMLSeq extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    constructor(schema) {\n        super(SEQ, schema);\n        this.items = [];\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && isScalar(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (isScalar(prev) && isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n    static from(schema, obj, ctx) {\n        const { replacer } = ctx;\n        const seq = new this(schema);\n        if (obj && Symbol.iterator in Object(obj)) {\n            let i = 0;\n            for (let it of obj) {\n                if (typeof replacer === 'function') {\n                    const key = obj instanceof Set ? it : String(i++);\n                    it = replacer.call(obj, key, it);\n                }\n                seq.items.push(createNode(it, undefined, ctx));\n            }\n        }\n        return seq;\n    }\n}\nfunction asItemIndex(key) {\n    let idx = isScalar(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nexport { YAMLSeq };\n","import { isSeq } from '../../nodes/identity.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nconst seq = {\n    collection: 'seq',\n    default: true,\n    nodeClass: YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!isSeq(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    },\n    createNode: (schema, obj, ctx) => YAMLSeq.from(schema, obj, ctx)\n};\n\nexport { seq };\n","import { stringifyString } from '../../stringify/stringifyString.js';\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return stringifyString(item, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { string };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\nexport { nullTag };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\nexport { boolTag };\n","function stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\nexport { stringifyNumber };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intHex, intOct };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { boolTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intOct, int, intHex } from './int.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    boolTag,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float\n];\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { map } from '../common/map.js';\nimport { seq } from '../common/seq.js';\n\nfunction intIdentify(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true|false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema = [map, seq].concat(jsonScalars, jsonError);\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyString } from '../../stringify/stringifyString.js';\n\nconst binary = {\n    identify: value => value instanceof Uint8Array, // Buffer inherits from Uint8Array\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof Buffer === 'function') {\n            return Buffer.from(src, 'base64');\n        }\n        else if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof Buffer === 'function') {\n            str =\n                buf instanceof Buffer\n                    ? buf.toString('base64')\n                    : Buffer.from(buf.buffer).toString('base64');\n        }\n        else if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        if (!type)\n            type = Scalar.BLOCK_LITERAL;\n        if (type !== Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { binary };\n","import { isSeq, isPair, isMap } from '../../nodes/identity.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { Scalar } from '../../nodes/Scalar.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction resolvePairs(seq, onError) {\n    if (isSeq(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if (isPair(item))\n                continue;\n            else if (isMap(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new Pair(new Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = pair.value ?? pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = isPair(item) ? item : new Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else {\n                    throw new TypeError(`Expected tuple with one key, not ${keys.length} keys`);\n                }\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push(createPair(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\nexport { createPairs, pairs, resolvePairs };\n","import { isScalar, isPair } from '../../nodes/identity.js';\nimport { toJS } from '../../nodes/toJS.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\nimport { resolvePairs, createPairs } from './pairs.js';\n\nclass YAMLOMap extends YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (isPair(pair)) {\n                key = toJS(pair.key, '', ctx);\n                value = toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n    static from(schema, iterable, ctx) {\n        const pairs = createPairs(schema, iterable, ctx);\n        const omap = new this();\n        omap.items = pairs.items;\n        return omap;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs = resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs.items) {\n            if (isScalar(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs);\n    },\n    createNode: (schema, iterable, ctx) => YAMLOMap.from(schema, iterable, ctx)\n};\n\nexport { YAMLOMap, omap };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/,\n    resolve: () => new Scalar(false),\n    stringify: boolStringify\n};\n\nexport { falseTag, trueTag };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intBin, intHex, intOct };\n","import { isMap, isPair, isScalar } from '../../nodes/identity.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { YAMLMap, findPair } from '../../nodes/YAMLMap.js';\n\nclass YAMLSet extends YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (isPair(key))\n            pair = key;\n        else if (key &&\n            typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair(key.key, null);\n        else\n            pair = new Pair(key, null);\n        const prev = findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = findPair(this.items, key);\n        return !keepPair && isPair(pair)\n            ? isScalar(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n    static from(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new this(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(createPair(value, null, ctx));\n            }\n        return set;\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    createNode: (schema, iterable, ctx) => YAMLSet.from(schema, iterable, ctx),\n    resolve(map, onError) {\n        if (isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nexport { YAMLSet, set };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return stringifyNumber(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => String(n).padStart(2, '0'))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value.toISOString().replace(/((T00:00)?:00)?\\.000Z$/, '')\n};\n\nexport { floatTime, intTime, timestamp };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { binary } from './binary.js';\nimport { trueTag, falseTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intBin, intOct, int, intHex } from './int.js';\nimport { merge } from './merge.js';\nimport { omap } from './omap.js';\nimport { pairs } from './pairs.js';\nimport { set } from './set.js';\nimport { intTime, floatTime, timestamp } from './timestamp.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    trueTag,\n    falseTag,\n    intBin,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float,\n    binary,\n    merge,\n    omap,\n    pairs,\n    set,\n    intTime,\n    floatTime,\n    timestamp\n];\n\nexport { schema };\n","import { map } from './common/map.js';\nimport { nullTag } from './common/null.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { boolTag } from './core/bool.js';\nimport { float, floatExp, floatNaN } from './core/float.js';\nimport { int, intHex, intOct } from './core/int.js';\nimport { schema } from './core/schema.js';\nimport { schema as schema$1 } from './json/schema.js';\nimport { binary } from './yaml-1.1/binary.js';\nimport { merge } from './yaml-1.1/merge.js';\nimport { omap } from './yaml-1.1/omap.js';\nimport { pairs } from './yaml-1.1/pairs.js';\nimport { schema as schema$2 } from './yaml-1.1/schema.js';\nimport { set } from './yaml-1.1/set.js';\nimport { timestamp, floatTime, intTime } from './yaml-1.1/timestamp.js';\n\nconst schemas = new Map([\n    ['core', schema],\n    ['failsafe', [map, seq, string]],\n    ['json', schema$1],\n    ['yaml11', schema$2],\n    ['yaml-1.1', schema$2]\n]);\nconst tagsByName = {\n    binary,\n    bool: boolTag,\n    float,\n    floatExp,\n    floatNaN,\n    floatTime,\n    int,\n    intHex,\n    intOct,\n    intTime,\n    map,\n    merge,\n    null: nullTag,\n    omap,\n    pairs,\n    seq,\n    set,\n    timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': binary,\n    'tag:yaml.org,2002:merge': merge,\n    'tag:yaml.org,2002:omap': omap,\n    'tag:yaml.org,2002:pairs': pairs,\n    'tag:yaml.org,2002:set': set,\n    'tag:yaml.org,2002:timestamp': timestamp\n};\nfunction getTags(customTags, schemaName, addMergeTag) {\n    const schemaTags = schemas.get(schemaName);\n    if (schemaTags && !customTags) {\n        return addMergeTag && !schemaTags.includes(merge)\n            ? schemaTags.concat(merge)\n            : schemaTags.slice();\n    }\n    let tags = schemaTags;\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    if (addMergeTag)\n        tags = tags.concat(merge);\n    return tags.reduce((tags, tag) => {\n        const tagObj = typeof tag === 'string' ? tagsByName[tag] : tag;\n        if (!tagObj) {\n            const tagName = JSON.stringify(tag);\n            const keys = Object.keys(tagsByName)\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown custom tag ${tagName}; use one of ${keys}`);\n        }\n        if (!tags.includes(tagObj))\n            tags.push(tagObj);\n        return tags;\n    }, []);\n}\n\nexport { coreKnownTags, getTags };\n","import { MAP, SCALAR, SEQ } from '../nodes/identity.js';\nimport { map } from './common/map.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { getTags, coreKnownTags } from './tags.js';\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? getTags(compat, 'compat')\n            : compat\n                ? getTags(null, compat)\n                : null;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? coreKnownTags : {};\n        this.tags = getTags(customTags, this.name, merge);\n        this.toStringOptions = toStringDefaults ?? null;\n        Object.defineProperty(this, MAP, { value: map });\n        Object.defineProperty(this, SCALAR, { value: string });\n        Object.defineProperty(this, SEQ, { value: seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\nexport { Schema };\n","import { isNode } from '../nodes/identity.js';\nimport { createStringifyContext, stringify } from './stringify.js';\nimport { indentComment, lineComment } from './stringifyComment.js';\n\nfunction stringifyDocument(doc, options) {\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = createStringifyContext(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift(indentComment(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if (isNode(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push(indentComment(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = stringify(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += lineComment(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push(stringify(doc.contents, ctx));\n    }\n    if (doc.directives?.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push(indentComment(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push(indentComment(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\nexport { stringifyDocument };\n","import { Alias } from '../nodes/Alias.js';\nimport { isEmptyPath, collectionFromPath } from '../nodes/Collection.js';\nimport { NODE_TYPE, DOC, isNode, isCollection, isScalar } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { toJS } from '../nodes/toJS.js';\nimport { Schema } from '../schema/Schema.js';\nimport { stringifyDocument } from '../stringify/stringifyDocument.js';\nimport { anchorNames, findNewAnchor, createNodeAnchors } from './anchors.js';\nimport { applyReviver } from './applyReviver.js';\nimport { createNode } from './createNode.js';\nimport { Directives } from './directives.js';\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, NODE_TYPE, { value: DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            stringKeys: false,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new Directives({ version });\n        this.setSchema(version, options);\n        // @ts-expect-error We can't really know that this matches Contents.\n        this.contents =\n            value === undefined ? null : this.createNode(value, _replacer, options);\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [NODE_TYPE]: { value: DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        // @ts-expect-error We can't really know that this matches Contents.\n        copy.contents = isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode(value, tag, ctx);\n        if (flow && isCollection(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            // @ts-expect-error Presumed impossible if Strict extends false\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return isCollection(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (isEmptyPath(path))\n            return !keepScalar && isScalar(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return isCollection(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return isCollection(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (isEmptyPath(path))\n            return this.contents !== undefined;\n        return isCollection(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (isEmptyPath(path)) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = value;\n        }\n        else if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new Directives({ version: '1.1' });\n                opt = { resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new Directives({ version });\n                opt = { resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (isCollection(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nexport { Document };\n","class YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '…' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '…';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '…\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.max(1, Math.min(end.col - col, 80 - ci));\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\nexport { YAMLError, YAMLParseError, YAMLWarning, prettifyError };\n","function resolveProps(tokens, { flow, indicator, next, offset, onError, parentIndent, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let reqSpace = false;\n    let tab = null;\n    let anchor = null;\n    let tag = null;\n    let newlineAfterProp = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        if (tab) {\n            if (atNewline && token.type !== 'comment' && token.type !== 'newline') {\n                onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n            }\n            tab = null;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    (indicator !== 'doc-start' || next?.type !== 'flow-collection') &&\n                    token.source.includes('\\t')) {\n                    tab = token;\n                }\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                if (anchor || tag)\n                    newlineAfterProp = token;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n                found = token;\n                atNewline =\n                    indicator === 'seq-item-ind' || indicator === 'explicit-key-ind';\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== '')) {\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    }\n    if (tab &&\n        ((atNewline && tab.indent <= parentIndent) ||\n            next?.type === 'block-map' ||\n            next?.type === 'block-seq'))\n        onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        anchor,\n        tag,\n        newlineAfterProp,\n        end,\n        start: start ?? end\n    };\n}\n\nexport { resolveProps };\n","function containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\nexport { containsNewline };\n","import { containsNewline } from './util-contains-newline.js';\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if (fc?.type === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            containsNewline(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\nexport { flowIndentCheck };\n","import { isScalar } from '../nodes/identity.js';\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b || (isScalar(a) && isScalar(b) && a.value === b.value);\n    return items.some(pair => isEqual(pair.key, search));\n}\n\nexport { mapIncludes };\n","import { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLMap;\n    const map = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    let commentEnd = null;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                commentEnd = keyProps.end;\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.newlineAfterProp || containsNewline(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        ctx.atKey = true;\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bm.indent, key, onError);\n        ctx.atKey = false;\n        if (mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    if (commentEnd && commentEnd < offset)\n        onError(commentEnd, 'IMPOSSIBLE', 'Map comment with trailing content');\n    map.range = [bm.offset, offset, commentEnd ?? offset];\n    return map;\n}\n\nexport { resolveBlockMap };\n","import { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveProps } from './resolve-props.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLSeq;\n    const seq = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = bs.offset;\n    let commentEnd = null;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            parentIndent: bs.indent,\n            startOnNewline: true\n        });\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(props.end, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                commentEnd = props.end;\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, props.end, start, null, props, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, commentEnd ?? offset];\n    return seq;\n}\n\nexport { resolveBlockSeq };\n","function resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\nexport { resolveEnd };\n","import { isPair } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError, tag) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const NodeClass = (tag?.nodeClass ?? (isMap ? YAMLMap : YAMLSeq));\n    const coll = new NodeClass(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: fc.indent,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (isPair(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // → key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            ctx.atKey = true;\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            ctx.atKey = false;\n            // value properties\n            const valueProps = resolveProps(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                parentIndent: fc.indent,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                const endRange = (valueNode ?? keyNode).range;\n                map.range = [keyNode.range[0], endRange[1], endRange[2]];\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nexport { resolveFlowCollection };\n","import { isNode } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveBlockMap } from './resolve-block-map.js';\nimport { resolveBlockSeq } from './resolve-block-seq.js';\nimport { resolveFlowCollection } from './resolve-flow-collection.js';\n\nfunction resolveCollection(CN, ctx, token, onError, tagName, tag) {\n    const coll = token.type === 'block-map'\n        ? resolveBlockMap(CN, ctx, token, onError, tag)\n        : token.type === 'block-seq'\n            ? resolveBlockSeq(CN, ctx, token, onError, tag)\n            : resolveFlowCollection(CN, ctx, token, onError, tag);\n    const Coll = coll.constructor;\n    // If we got a tagName matching the class, or the tag name is '!',\n    // then use the tagName from the node class used to create it.\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    if (tagName)\n        coll.tag = tagName;\n    return coll;\n}\nfunction composeCollection(CN, ctx, token, props, onError) {\n    const tagToken = props.tag;\n    const tagName = !tagToken\n        ? null\n        : ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    if (token.type === 'block-seq') {\n        const { anchor, newlineAfterProp: nl } = props;\n        const lastProp = anchor && tagToken\n            ? anchor.offset > tagToken.offset\n                ? anchor\n                : tagToken\n            : (anchor ?? tagToken);\n        if (lastProp && (!nl || nl.offset < lastProp.offset)) {\n            const message = 'Missing newline after block sequence props';\n            onError(lastProp, 'MISSING_CHAR', message);\n        }\n    }\n    const expType = token.type === 'block-map'\n        ? 'map'\n        : token.type === 'block-seq'\n            ? 'seq'\n            : token.start.source === '{'\n                ? 'map'\n                : 'seq';\n    // shortcut: check if it's a generic YAMLMap or YAMLSeq\n    // before jumping into the custom tag logic.\n    if (!tagToken ||\n        !tagName ||\n        tagName === '!' ||\n        (tagName === YAMLMap.tagName && expType === 'map') ||\n        (tagName === YAMLSeq.tagName && expType === 'seq')) {\n        return resolveCollection(CN, ctx, token, onError, tagName);\n    }\n    let tag = ctx.schema.tags.find(t => t.tag === tagName && t.collection === expType);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            if (kt?.collection) {\n                onError(tagToken, 'BAD_COLLECTION_TYPE', `${kt.tag} used for ${expType} collection, but expects ${kt.collection}`, true);\n            }\n            else {\n                onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            }\n            return resolveCollection(CN, ctx, token, onError, tagName);\n        }\n    }\n    const coll = resolveCollection(CN, ctx, token, onError, tagName, tag);\n    const res = tag.resolve?.(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options) ?? coll;\n    const node = isNode(res)\n        ? res\n        : new Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag?.format)\n        node.format = tag.format;\n    return node;\n}\n\nexport { composeCollection };\n","import { Scalar } from '../nodes/Scalar.js';\n\nfunction resolveBlockScalar(ctx, scalar, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, ctx.options.strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? Scalar.BLOCK_FOLDED : Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            if (trimIndent === 0 && !ctx.atRoot) {\n                const message = 'Block scalar values in collections must be indented';\n                onError(offset, 'BAD_INDENT', message);\n            }\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = m?.[1]\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\nexport { resolveBlockScalar };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0', // null character\n    a: '\\x07', // bell character\n    b: '\\b', // backspace\n    e: '\\x1b', // escape character\n    f: '\\f', // form feed\n    n: '\\n', // line feed\n    r: '\\r', // carriage return\n    t: '\\t', // horizontal tab\n    v: '\\v', // vertical tab\n    N: '\\u0085', // Unicode next line\n    _: '\\u00a0', // Unicode non-breaking space\n    L: '\\u2028', // Unicode line separator\n    P: '\\u2029', // Unicode paragraph separator\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\nexport { resolveFlowScalar };\n","import { isScalar, SCALAR } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar(ctx, token, onError)\n        : resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    let tag;\n    if (ctx.options.stringKeys && ctx.atKey) {\n        tag = ctx.schema[SCALAR];\n    }\n    else if (tagName)\n        tag = findScalarTagByName(ctx.schema, value, tagName, tagToken, onError);\n    else if (token.type === 'scalar')\n        tag = findScalarTagByTest(ctx, value, token, onError);\n    else\n        tag = ctx.schema[SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = isScalar(res) ? res : new Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[SCALAR];\n}\nfunction findScalarTagByTest({ atKey, directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => (tag.default === true || (atKey && tag.default === 'key')) &&\n        tag.test?.test(value)) || schema[SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexport { composeScalar };\n","function emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        if (pos === null)\n            pos = before.length;\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while (st?.type === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\nexport { emptyScalarPosition };\n","import { Alias } from '../nodes/Alias.js';\nimport { isScalar } from '../nodes/identity.js';\nimport { composeCollection } from './compose-collection.js';\nimport { composeScalar } from './compose-scalar.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { emptyScalarPosition } from './util-empty-scalar-position.js';\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const atKey = ctx.atKey;\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection(CN, ctx, token, props, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (atKey &&\n        ctx.options.stringKeys &&\n        (!isScalar(node) ||\n            typeof node.value !== 'string' ||\n            (node.tag && node.tag !== 'tag:yaml.org,2002:str'))) {\n        const msg = 'With stringKeys, all keys must be strings';\n        onError(tag ?? token, 'NON_STRING_KEY', msg);\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag, end }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        node.comment = comment;\n        node.range[2] = end;\n    }\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nexport { composeEmptyNode, composeNode };\n","import { Document } from '../doc/Document.js';\nimport { composeNode, composeEmptyNode } from './compose-node.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new Document(undefined, opts);\n    const ctx = {\n        atKey: false,\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        parentIndent: 0,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    // @ts-expect-error If Contents is set, let's trust the user\n    doc.contents = value\n        ? composeNode(ctx, value, props, onError)\n        : composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nexport { composeDoc };\n","import { Directives } from '../doc/directives.js';\nimport { Document } from '../doc/Document.js';\nimport { YAMLWarning, YAMLParseError } from '../errors.js';\nimport { isCollection, isPair } from '../nodes/identity.js';\nimport { composeDoc } from './compose-doc.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (prelude[i + 1]?.[0] !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if (isCollection(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if (isPair(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = composeDoc(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ _directives: this.directives }, this.options);\n            const doc = new Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\nexport { Composer };\n","import { resolveBlockScalar } from '../compose/resolve-block-scalar.js';\nimport { resolveFlowScalar } from '../compose/resolve-flow-scalar.js';\nimport { YAMLParseError } from '../errors.js';\nimport { stringifyString } from '../stringify/stringifyString.js';\n\nfunction resolveAsScalar(token, strict = true, onError) {\n    if (token) {\n        const _onError = (pos, code, message) => {\n            const offset = typeof pos === 'number' ? pos : Array.isArray(pos) ? pos[0] : pos.offset;\n            if (onError)\n                onError(offset, code, message);\n            else\n                throw new YAMLParseError([offset, offset + 1], code, message);\n        };\n        switch (token.type) {\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return resolveFlowScalar(token, strict, _onError);\n            case 'block-scalar':\n                return resolveBlockScalar({ options: { strict } }, token, _onError);\n        }\n    }\n    return null;\n}\n/**\n * Create a new scalar token with `value`\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.end Comments and whitespace after the end of the value, or after the block scalar header. If undefined, a newline will be added.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.indent The indent level of the token.\n * @param context.inFlow Is this scalar within a flow collection? This may affect the resolved type of the token's value.\n * @param context.offset The offset position of the token.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction createScalarToken(value, context) {\n    const { implicitKey = false, indent, inFlow = false, offset = -1, type = 'PLAIN' } = context;\n    const source = stringifyString({ type, value }, {\n        implicitKey,\n        indent: indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    const end = context.end ?? [\n        { type: 'newline', offset: -1, indent, source: '\\n' }\n    ];\n    switch (source[0]) {\n        case '|':\n        case '>': {\n            const he = source.indexOf('\\n');\n            const head = source.substring(0, he);\n            const body = source.substring(he + 1) + '\\n';\n            const props = [\n                { type: 'block-scalar-header', offset, indent, source: head }\n            ];\n            if (!addEndtoBlockProps(props, end))\n                props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n            return { type: 'block-scalar', offset, indent, props, source: body };\n        }\n        case '\"':\n            return { type: 'double-quoted-scalar', offset, indent, source, end };\n        case \"'\":\n            return { type: 'single-quoted-scalar', offset, indent, source, end };\n        default:\n            return { type: 'scalar', offset, indent, source, end };\n    }\n}\n/**\n * Set the value of `token` to the given string `value`, overwriting any previous contents and type that it may have.\n *\n * Best efforts are made to retain any comments previously associated with the `token`,\n * though all contents within a collection's `items` will be overwritten.\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param token Any token. If it does not include an `indent` value, the value will be stringified as if it were an implicit key.\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.afterKey In most cases, values after a key should have an additional level of indentation.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.inFlow Being within a flow collection may affect the resolved type of the token's value.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction setScalarValue(token, value, context = {}) {\n    let { afterKey = false, implicitKey = false, inFlow = false, type } = context;\n    let indent = 'indent' in token ? token.indent : null;\n    if (afterKey && typeof indent === 'number')\n        indent += 2;\n    if (!type)\n        switch (token.type) {\n            case 'single-quoted-scalar':\n                type = 'QUOTE_SINGLE';\n                break;\n            case 'double-quoted-scalar':\n                type = 'QUOTE_DOUBLE';\n                break;\n            case 'block-scalar': {\n                const header = token.props[0];\n                if (header.type !== 'block-scalar-header')\n                    throw new Error('Invalid block scalar header');\n                type = header.source[0] === '>' ? 'BLOCK_FOLDED' : 'BLOCK_LITERAL';\n                break;\n            }\n            default:\n                type = 'PLAIN';\n        }\n    const source = stringifyString({ type, value }, {\n        implicitKey: implicitKey || indent === null,\n        indent: indent !== null && indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    switch (source[0]) {\n        case '|':\n        case '>':\n            setBlockScalarValue(token, source);\n            break;\n        case '\"':\n            setFlowScalarValue(token, source, 'double-quoted-scalar');\n            break;\n        case \"'\":\n            setFlowScalarValue(token, source, 'single-quoted-scalar');\n            break;\n        default:\n            setFlowScalarValue(token, source, 'scalar');\n    }\n}\nfunction setBlockScalarValue(token, source) {\n    const he = source.indexOf('\\n');\n    const head = source.substring(0, he);\n    const body = source.substring(he + 1) + '\\n';\n    if (token.type === 'block-scalar') {\n        const header = token.props[0];\n        if (header.type !== 'block-scalar-header')\n            throw new Error('Invalid block scalar header');\n        header.source = head;\n        token.source = body;\n    }\n    else {\n        const { offset } = token;\n        const indent = 'indent' in token ? token.indent : -1;\n        const props = [\n            { type: 'block-scalar-header', offset, indent, source: head }\n        ];\n        if (!addEndtoBlockProps(props, 'end' in token ? token.end : undefined))\n            props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n        for (const key of Object.keys(token))\n            if (key !== 'type' && key !== 'offset')\n                delete token[key];\n        Object.assign(token, { type: 'block-scalar', indent, props, source: body });\n    }\n}\n/** @returns `true` if last token is a newline */\nfunction addEndtoBlockProps(props, end) {\n    if (end)\n        for (const st of end)\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                    props.push(st);\n                    break;\n                case 'newline':\n                    props.push(st);\n                    return true;\n            }\n    return false;\n}\nfunction setFlowScalarValue(token, source, type) {\n    switch (token.type) {\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            token.type = type;\n            token.source = source;\n            break;\n        case 'block-scalar': {\n            const end = token.props.slice(1);\n            let oa = source.length;\n            if (token.props[0].type === 'block-scalar-header')\n                oa -= token.props[0].source.length;\n            for (const tok of end)\n                tok.offset += oa;\n            delete token.props;\n            Object.assign(token, { type, source, end });\n            break;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            const offset = token.offset + source.length;\n            const nl = { type: 'newline', offset, indent: token.indent, source: '\\n' };\n            delete token.items;\n            Object.assign(token, { type, source, end: [nl] });\n            break;\n        }\n        default: {\n            const indent = 'indent' in token ? token.indent : -1;\n            const end = 'end' in token && Array.isArray(token.end)\n                ? token.end.filter(st => st.type === 'space' ||\n                    st.type === 'comment' ||\n                    st.type === 'newline')\n                : [];\n            for (const key of Object.keys(token))\n                if (key !== 'type' && key !== 'offset')\n                    delete token[key];\n            Object.assign(token, { type, indent, source, end });\n        }\n    }\n}\n\nexport { createScalarToken, resolveAsScalar, setScalarValue };\n","/**\n * Stringify a CST document, token, or collection item\n *\n * Fair warning: This applies no validation whatsoever, and\n * simply concatenates the sources in their logical order.\n */\nconst stringify = (cst) => 'type' in cst ? stringifyToken(cst) : stringifyItem(cst);\nfunction stringifyToken(token) {\n    switch (token.type) {\n        case 'block-scalar': {\n            let res = '';\n            for (const tok of token.props)\n                res += stringifyToken(tok);\n            return res + token.source;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            let res = '';\n            for (const item of token.items)\n                res += stringifyItem(item);\n            return res;\n        }\n        case 'flow-collection': {\n            let res = token.start.source;\n            for (const item of token.items)\n                res += stringifyItem(item);\n            for (const st of token.end)\n                res += st.source;\n            return res;\n        }\n        case 'document': {\n            let res = stringifyItem(token);\n            if (token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n        default: {\n            let res = token.source;\n            if ('end' in token && token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n    }\n}\nfunction stringifyItem({ start, key, sep, value }) {\n    let res = '';\n    for (const st of start)\n        res += st.source;\n    if (key)\n        res += stringifyToken(key);\n    if (sep)\n        for (const st of sep)\n            res += st.source;\n    if (value)\n        res += stringifyToken(value);\n    return res;\n}\n\nexport { stringify };\n","const BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` – Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` – Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` – Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` – The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item?.[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent?.[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\nexport { visit };\n","export { createScalarToken, resolveAsScalar, setScalarValue } from './cst-scalar.js';\nexport { stringify } from './cst-stringify.js';\nexport { visit } from './cst-visit.js';\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nexport { BOM, DOCUMENT, FLOW_END, SCALAR, isCollection, isScalar, prettyToken, tokenType };\n","import { BOM, DOCUMENT, FLOW_END, SCALAR } from './cst.js';\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = new Set('0123456789ABCDEFabcdef');\nconst tagChars = new Set(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\");\nconst flowIndicatorChars = new Set(',[]{}');\nconst invalidAnchorChars = new Set(' ,[]{}\\n\\r\\t');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.has(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        if (source) {\n            if (typeof source !== 'string')\n                throw TypeError('source is not a string');\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = this.next ?? 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            let cs = line.indexOf('#');\n            while (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t') {\n                    dirEnd = cs - 1;\n                    break;\n                }\n                else {\n                    cs = line.indexOf('#', cs + 1);\n                }\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if ((s === '---' || s === '...') && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return s === '---' ? 'doc' : 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else {\n                this.indentNext =\n                    this.blockScalarIndent + (this.indentNext === 0 ? 1 : this.indentNext);\n            }\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        // Trailing insufficiently indented tabs are invalid.\n        // To catch that during parsing, we include them in the block scalar value.\n        let i = nl + 1;\n        ch = this.buffer[i];\n        while (ch === ' ')\n            ch = this.buffer[++i];\n        if (ch === '\\t') {\n            while (ch === '\\t' || ch === ' ' || ch === '\\r' || ch === '\\n')\n                ch = this.buffer[++i];\n            nl = i - 1;\n        }\n        else if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && flowIndicatorChars.has(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && flowIndicatorChars.has(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.has(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.has(this.buffer[i + 1]) &&\n                    hexDigits.has(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\nexport { Lexer };\n","/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\nexport { LineCounter };\n","import { tokenType } from './cst.js';\nimport { Lexer } from './lexer.js';\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction findNonEmptyIndex(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return i;\n        }\n    }\n    return -1;\n}\nfunction isFlowToken(token) {\n    switch (token?.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return it.sep ?? it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (prev[++i]?.type === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = tokenType(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error ?? this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !it.explicitKey;\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    findNonEmptyIndex(last.start) === -1 &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (findNonEmptyIndex(doc.start) !== -1) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value) {\n                    map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atMapIndent = !this.onKeyLine && this.indent === map.indent;\n            const atNextItem = atMapIndent &&\n                (it.sep || it.explicitKey) &&\n                this.type !== 'seq-item-ind';\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !it.explicitKey) {\n                        it.start.push(this.sourceToken);\n                        it.explicitKey = true;\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start, explicitKey: true });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken], explicitKey: true }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (it.explicitKey) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key;\n                            // @ts-expect-error type guard is wrong here\n                            delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (atMapIndent && bv.type !== 'block-seq') {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, explicitKey: true }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\nexport { Parser };\n","import { Composer } from './compose/composer.js';\nimport { Document } from './doc/Document.js';\nimport { prettifyError, YAMLParseError } from './errors.js';\nimport { warn } from './log.js';\nimport { isDocument } from './nodes/identity.js';\nimport { LineCounter } from './parse/line-counter.js';\nimport { Parser } from './parse/parser.js';\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter = options.lineCounter || (prettyErrors && new LineCounter()) || null;\n    return { lineCounter, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    const docs = Array.from(composer.compose(parser.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(prettifyError(source, lineCounter));\n            doc.warnings.forEach(prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(prettifyError(source, lineCounter));\n        doc.warnings.forEach(prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options ?? replacer ?? {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    if (isDocument(value) && !_replacer)\n        return value.toString(options);\n    return new Document(value, _replacer, options).toString(options);\n}\n\nexport { parse, parseAllDocuments, parseDocument, stringify };\n","/**\r\n * Copyright (c) Microsoft Corporation.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n// https://www.w3.org/TR/wai-aria-1.2/#role_definitions\r\n\r\nexport type AriaRole = 'alert' | 'alertdialog' | 'application' | 'article' | 'banner' | 'blockquote' | 'button' | 'caption' | 'cell' | 'checkbox' | 'code' | 'columnheader' | 'combobox' |\r\n  'complementary' | 'contentinfo' | 'definition' | 'deletion' | 'dialog' | 'directory' | 'document' | 'emphasis' | 'feed' | 'figure' | 'form' | 'generic' | 'grid' |\r\n  'gridcell' | 'group' | 'heading' | 'img' | 'insertion' | 'link' | 'list' | 'listbox' | 'listitem' | 'log' | 'main' | 'mark' | 'marquee' | 'math' | 'meter' | 'menu' |\r\n  'menubar' | 'menuitem' | 'menuitemcheckbox' | 'menuitemradio' | 'navigation' | 'none' | 'note' | 'option' | 'paragraph' | 'presentation' | 'progressbar' | 'radio' | 'radiogroup' |\r\n  'region' | 'row' | 'rowgroup' | 'rowheader' | 'scrollbar' | 'search' | 'searchbox' | 'separator' | 'slider' |\r\n  'spinbutton' | 'status' | 'strong' | 'subscript' | 'superscript' | 'switch' | 'tab' | 'table' | 'tablist' | 'tabpanel' | 'term' | 'textbox' | 'time' | 'timer' |\r\n  'toolbar' | 'tooltip' | 'tree' | 'treegrid' | 'treeitem';\r\n\r\nexport type AriaProps = {\r\n  checked?: boolean | 'mixed';\r\n  disabled?: boolean;\r\n  expanded?: boolean;\r\n  level?: number;\r\n  pressed?: boolean | 'mixed';\r\n  selected?: boolean;\r\n};\r\n\r\n// We pass parsed template between worlds using JSON, make it easy.\r\nexport type AriaRegex = { pattern: string };\r\n\r\nexport type AriaTemplateTextNode = {\r\n  kind: 'text';\r\n  text: AriaRegex | string;\r\n};\r\n\r\nexport type AriaTemplateRoleNode = AriaProps & {\r\n  kind: 'role';\r\n  role: AriaRole | 'fragment';\r\n  name?: AriaRegex | string;\r\n  children?: AriaTemplateNode[];\r\n  props?: Record<string, string | AriaRegex>;\r\n  containerMode?: 'contain' | 'equal' | 'deep-equal';\r\n};\r\n\r\nexport type AriaTemplateNode = AriaTemplateRoleNode | AriaTemplateTextNode;\r\n\r\nimport type * as yamlTypes from 'yaml';\r\n\r\ntype YamlLibrary = {\r\n  parseDocument: typeof yamlTypes.parseDocument;\r\n  Scalar: typeof yamlTypes.Scalar;\r\n  YAMLMap: typeof yamlTypes.YAMLMap;\r\n  YAMLSeq: typeof yamlTypes.YAMLSeq;\r\n  LineCounter: typeof yamlTypes.LineCounter;\r\n};\r\n\r\ntype ParsedYamlPosition = { line: number; col: number; };\r\n\r\nexport type ParsedYamlError = {\r\n  message: string;\r\n  range: [ParsedYamlPosition, ParsedYamlPosition];\r\n};\r\n\r\nexport function parseAriaSnapshotUnsafe(yaml: YamlLibrary, text: string): AriaTemplateNode {\r\n  const result = parseAriaSnapshot(yaml, text);\r\n  if (result.errors.length)\r\n    throw new Error(result.errors[0].message);\r\n  return result.fragment;\r\n}\r\n\r\nexport function parseAriaSnapshot(yaml: YamlLibrary, text: string, options: yamlTypes.ParseOptions = {}): { fragment: AriaTemplateNode, errors: ParsedYamlError[] } {\r\n  const lineCounter = new yaml.LineCounter();\r\n  const parseOptions: yamlTypes.ParseOptions = {\r\n    keepSourceTokens: true,\r\n    lineCounter,\r\n    ...options,\r\n  };\r\n  const yamlDoc = yaml.parseDocument(text, parseOptions);\r\n  const errors: ParsedYamlError[] = [];\r\n\r\n  const convertRange = (range: [number, number] | yamlTypes.Range): [ParsedYamlPosition, ParsedYamlPosition] => {\r\n    return [lineCounter.linePos(range[0]), lineCounter.linePos(range[1])];\r\n  };\r\n\r\n  const addError = (error: yamlTypes.YAMLError) => {\r\n    errors.push({\r\n      message: error.message,\r\n      range: [lineCounter.linePos(error.pos[0]), lineCounter.linePos(error.pos[1])],\r\n    });\r\n  };\r\n\r\n  const convertSeq = (container: AriaTemplateRoleNode, seq: yamlTypes.YAMLSeq) => {\r\n    for (const item of seq.items) {\r\n      const itemIsString = item instanceof yaml.Scalar && typeof item.value === 'string';\r\n      if (itemIsString) {\r\n        const childNode = KeyParser.parse(item, parseOptions, errors);\r\n        if (childNode) {\r\n          container.children = container.children || [];\r\n          container.children.push(childNode);\r\n        }\r\n        continue;\r\n      }\r\n      const itemIsMap = item instanceof yaml.YAMLMap;\r\n      if (itemIsMap) {\r\n        convertMap(container, item);\r\n        continue;\r\n      }\r\n      errors.push({\r\n        message: 'Sequence items should be strings or maps',\r\n        range: convertRange((item as any).range || seq.range),\r\n      });\r\n    }\r\n  };\r\n\r\n  const convertMap = (container: AriaTemplateRoleNode, map: yamlTypes.YAMLMap) => {\r\n    for (const entry of map.items) {\r\n      container.children = container.children || [];\r\n      // Key must by a string\r\n      const keyIsString = entry.key instanceof yaml.Scalar && typeof entry.key.value === 'string';\r\n      if (!keyIsString) {\r\n        errors.push({\r\n          message: 'Only string keys are supported',\r\n          range: convertRange((entry.key as any).range || map.range),\r\n        });\r\n        continue;\r\n      }\r\n\r\n      const key: yamlTypes.Scalar<string> = entry.key as yamlTypes.Scalar<string>;\r\n      const value = entry.value;\r\n\r\n      // - text: \"text\"\r\n      if (key.value === 'text') {\r\n        const valueIsString = value instanceof yaml.Scalar && typeof value.value === 'string';\r\n        if (!valueIsString) {\r\n          errors.push({\r\n            message: 'Text value should be a string',\r\n            range: convertRange(((entry.value as any).range || map.range)),\r\n          });\r\n          continue;\r\n        }\r\n        container.children.push({\r\n          kind: 'text',\r\n          text: valueOrRegex(value.value)\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // - /children: equal\r\n      if (key.value === '/children') {\r\n        const valueIsString = value instanceof yaml.Scalar && typeof value.value === 'string';\r\n        if (!valueIsString || (value.value !== 'contain' && value.value !== 'equal' && value.value !== 'deep-equal')) {\r\n          errors.push({\r\n            message: 'Strict value should be \"contain\", \"equal\" or \"deep-equal\"',\r\n            range: convertRange(((entry.value as any).range || map.range)),\r\n          });\r\n          continue;\r\n        }\r\n        container.containerMode = value.value;\r\n        continue;\r\n      }\r\n\r\n      // - /url: \"about:blank\"\r\n      if (key.value.startsWith('/')) {\r\n        const valueIsString = value instanceof yaml.Scalar && typeof value.value === 'string';\r\n        if (!valueIsString) {\r\n          errors.push({\r\n            message: 'Property value should be a string',\r\n            range: convertRange(((entry.value as any).range || map.range)),\r\n          });\r\n          continue;\r\n        }\r\n        container.props = container.props ?? {};\r\n        container.props[key.value.slice(1)] = valueOrRegex(value.value);\r\n        continue;\r\n      }\r\n\r\n      // role \"name\": ...\r\n      const childNode = KeyParser.parse(key, parseOptions, errors);\r\n      if (!childNode)\r\n        continue;\r\n\r\n      // - role \"name\": \"text\"\r\n      const valueIsScalar = value instanceof yaml.Scalar;\r\n      if (valueIsScalar) {\r\n        const type = typeof value.value;\r\n        if (type !== 'string' && type !== 'number' && type !== 'boolean') {\r\n          errors.push({\r\n            message: 'Node value should be a string or a sequence',\r\n            range: convertRange(((entry.value as any).range || map.range)),\r\n          });\r\n          continue;\r\n        }\r\n\r\n        container.children.push({\r\n          ...childNode,\r\n          children: [{\r\n            kind: 'text',\r\n            text: valueOrRegex(String(value.value))\r\n          }]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // - role \"name\":\r\n      //   - child\r\n      const valueIsSequence = value instanceof yaml.YAMLSeq;\r\n      if (valueIsSequence) {\r\n        container.children.push(childNode);\r\n        convertSeq(childNode, value as yamlTypes.YAMLSeq);\r\n        continue;\r\n      }\r\n\r\n      errors.push({\r\n        message: 'Map values should be strings or sequences',\r\n        range: convertRange((entry.value as any).range || map.range),\r\n      });\r\n    }\r\n  };\r\n\r\n  const fragment: AriaTemplateNode = { kind: 'role', role: 'fragment' };\r\n\r\n  yamlDoc.errors.forEach(addError);\r\n  if (errors.length)\r\n    return { errors, fragment };\r\n\r\n  if (!(yamlDoc.contents instanceof yaml.YAMLSeq)) {\r\n    errors.push({\r\n      message: 'Aria snapshot must be a YAML sequence, elements starting with \" -\"',\r\n      range: yamlDoc.contents ? convertRange(yamlDoc.contents!.range) : [{ line: 0, col: 0 }, { line: 0, col: 0 }],\r\n    });\r\n  }\r\n  if (errors.length)\r\n    return { errors, fragment };\r\n\r\n  convertSeq(fragment, yamlDoc.contents as yamlTypes.YAMLSeq);\r\n  if (errors.length)\r\n    return { errors, fragment: emptyFragment };\r\n  if (fragment.children?.length === 1)\r\n    return { fragment: fragment.children[0], errors };\r\n  return { fragment, errors };\r\n}\r\n\r\nconst emptyFragment: AriaTemplateRoleNode = { kind: 'role', role: 'fragment' };\r\n\r\nfunction normalizeWhitespace(text: string) {\r\n  // TODO: why is this different from normalizeWhitespace in stringUtils.ts?\r\n  return text.replace(/[\\u200b\\u00ad]/g, '').replace(/[\\r\\n\\s\\t]+/g, ' ').trim();\r\n}\r\n\r\nexport function valueOrRegex(value: string): string | AriaRegex {\r\n  return value.startsWith('/') && value.endsWith('/') && value.length > 1 ? { pattern: value.slice(1, -1) } : normalizeWhitespace(value);\r\n}\r\n\r\nexport class KeyParser {\r\n  private _input: string;\r\n  private _pos: number;\r\n  private _length: number;\r\n\r\n  static parse(text: yamlTypes.Scalar<string>, options: yamlTypes.ParseOptions, errors: ParsedYamlError[]): AriaTemplateRoleNode | null {\r\n    try {\r\n      return new KeyParser(text.value)._parse();\r\n    } catch (e) {\r\n      if (e instanceof ParserError) {\r\n        const message = options.prettyErrors === false ? e.message : e.message + ':\\n\\n' + text.value + '\\n' + ' '.repeat(e.pos) + '^\\n';\r\n        errors.push({\r\n          message,\r\n          range: [options.lineCounter!.linePos(text.range![0]), options.lineCounter!.linePos(text.range![0] + e.pos)],\r\n        });\r\n        return null;\r\n      }\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  constructor(input: string) {\r\n    this._input = input;\r\n    this._pos = 0;\r\n    this._length = input.length;\r\n  }\r\n\r\n  private _peek() {\r\n    return this._input[this._pos] || '';\r\n  }\r\n\r\n  private _next() {\r\n    if (this._pos < this._length)\r\n      return this._input[this._pos++];\r\n    return null;\r\n  }\r\n\r\n  private _eof() {\r\n    return this._pos >= this._length;\r\n  }\r\n\r\n  private _isWhitespace() {\r\n    return !this._eof() && /\\s/.test(this._peek());\r\n  }\r\n\r\n  private _skipWhitespace() {\r\n    while (this._isWhitespace())\r\n      this._pos++;\r\n  }\r\n\r\n  private _readIdentifier(type: 'role' | 'attribute'): string {\r\n    if (this._eof())\r\n      this._throwError(`Unexpected end of input when expecting ${type}`);\r\n    const start = this._pos;\r\n    while (!this._eof() && /[a-zA-Z]/.test(this._peek()))\r\n      this._pos++;\r\n    return this._input.slice(start, this._pos);\r\n  }\r\n\r\n  private _readString(): string {\r\n    let result = '';\r\n    let escaped = false;\r\n    while (!this._eof()) {\r\n      const ch = this._next();\r\n      if (escaped) {\r\n        result += ch;\r\n        escaped = false;\r\n      } else if (ch === '\\\\') {\r\n        escaped = true;\r\n      } else if (ch === '\"') {\r\n        return result;\r\n      } else {\r\n        result += ch;\r\n      }\r\n    }\r\n    this._throwError('Unterminated string');\r\n  }\r\n\r\n  private _throwError(message: string, offset: number = 0): never {\r\n    throw new ParserError(message, offset || this._pos);\r\n  }\r\n\r\n  private _readRegex(): AriaRegex {\r\n    let result = '';\r\n    let escaped = false;\r\n    let insideClass = false;\r\n    while (!this._eof()) {\r\n      const ch = this._next();\r\n      if (escaped) {\r\n        result += ch;\r\n        escaped = false;\r\n      } else if (ch === '\\\\') {\r\n        escaped = true;\r\n        result += ch;\r\n      } else if (ch === '/' && !insideClass) {\r\n        return { pattern: result };\r\n      } else if (ch === '[') {\r\n        insideClass = true;\r\n        result += ch;\r\n      } else if (ch === ']' && insideClass) {\r\n        result += ch;\r\n        insideClass = false;\r\n      } else {\r\n        result += ch;\r\n      }\r\n    }\r\n    this._throwError('Unterminated regex');\r\n  }\r\n\r\n  private _readStringOrRegex(): string | AriaRegex | null {\r\n    const ch = this._peek();\r\n    if (ch === '\"') {\r\n      this._next();\r\n      return normalizeWhitespace(this._readString());\r\n    }\r\n\r\n    if (ch === '/') {\r\n      this._next();\r\n      return this._readRegex();\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private _readAttributes(result: AriaTemplateRoleNode) {\r\n    let errorPos = this._pos;\r\n    while (true) {\r\n      this._skipWhitespace();\r\n      if (this._peek() === '[') {\r\n        this._next();\r\n        this._skipWhitespace();\r\n        errorPos = this._pos;\r\n        const flagName = this._readIdentifier('attribute');\r\n        this._skipWhitespace();\r\n        let flagValue = '';\r\n        if (this._peek() === '=') {\r\n          this._next();\r\n          this._skipWhitespace();\r\n          errorPos = this._pos;\r\n          while (this._peek() !== ']' && !this._isWhitespace() && !this._eof())\r\n            flagValue += this._next();\r\n        }\r\n        this._skipWhitespace();\r\n        if (this._peek() !== ']')\r\n          this._throwError('Expected ]');\r\n\r\n        this._next(); // Consume ']'\r\n        this._applyAttribute(result, flagName, flagValue || 'true', errorPos);\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  _parse(): AriaTemplateRoleNode {\r\n    this._skipWhitespace();\r\n\r\n    const role = this._readIdentifier('role') as AriaTemplateRoleNode['role'];\r\n    this._skipWhitespace();\r\n    const name = this._readStringOrRegex() || '';\r\n    const result: AriaTemplateRoleNode = { kind: 'role', role, name };\r\n    this._readAttributes(result);\r\n    this._skipWhitespace();\r\n    if (!this._eof())\r\n      this._throwError('Unexpected input');\r\n    return result;\r\n  }\r\n\r\n  private _applyAttribute(node: AriaTemplateRoleNode, key: string, value: string, errorPos: number) {\r\n    if (key === 'checked') {\r\n      this._assert(value === 'true' || value === 'false' || value === 'mixed', 'Value of \"checked\\\" attribute must be a boolean or \"mixed\"', errorPos);\r\n      node.checked = value === 'true' ? true : value === 'false' ? false : 'mixed';\r\n      return;\r\n    }\r\n    if (key === 'disabled') {\r\n      this._assert(value === 'true' || value === 'false', 'Value of \"disabled\" attribute must be a boolean', errorPos);\r\n      node.disabled = value === 'true';\r\n      return;\r\n    }\r\n    if (key === 'expanded') {\r\n      this._assert(value === 'true' || value === 'false', 'Value of \"expanded\" attribute must be a boolean', errorPos);\r\n      node.expanded = value === 'true';\r\n      return;\r\n    }\r\n    if (key === 'level') {\r\n      this._assert(!isNaN(Number(value)), 'Value of \"level\" attribute must be a number', errorPos);\r\n      node.level = Number(value);\r\n      return;\r\n    }\r\n    if (key === 'pressed') {\r\n      this._assert(value === 'true' || value === 'false' || value === 'mixed', 'Value of \"pressed\" attribute must be a boolean or \"mixed\"', errorPos);\r\n      node.pressed = value === 'true' ? true : value === 'false' ? false : 'mixed';\r\n      return;\r\n    }\r\n    if (key === 'selected') {\r\n      this._assert(value === 'true' || value === 'false', 'Value of \"selected\" attribute must be a boolean', errorPos);\r\n      node.selected = value === 'true';\r\n      return;\r\n    }\r\n    this._assert(false, `Unsupported attribute [${key}]`, errorPos);\r\n  }\r\n\r\n  private _assert(value: any, message: string, valuePos: number): asserts value {\r\n    if (!value)\r\n      this._throwError(message || 'Assertion error', valuePos);\r\n  }\r\n}\r\n\r\nexport class ParserError extends Error {\r\n  readonly pos: number;\r\n\r\n  constructor(message: string, pos: number) {\r\n    super(message);\r\n    this.pos = pos;\r\n  }\r\n}\r\n","/*\n  Copyright (c) Microsoft Corporation.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport type { CallLog, ElementInfo, Mode, Source } from './recorderTypes';\nimport { CodeMirrorWrapper } from '@web/components/codeMirrorWrapper';\nimport type { SourceHighlight } from '@web/components/codeMirrorWrapper';\nimport { SplitView } from '@web/components/splitView';\nimport { TabbedPane } from '@web/components/tabbedPane';\nimport { Toolbar } from '@web/components/toolbar';\nimport { emptySource, SourceChooser } from '@web/components/sourceChooser';\nimport { ToolbarButton, ToolbarSeparator } from '@web/components/toolbarButton';\nimport * as React from 'react';\nimport { CallLogView } from './callLog';\nimport './recorder.css';\nimport { asLocator } from '@isomorphic/locatorGenerators';\nimport { toggleTheme } from '@web/theme';\nimport { copy, useSetting } from '@web/uiUtils';\nimport yaml from 'yaml';\nimport { parseAriaSnapshot } from '@isomorphic/ariaSnapshot';\n\nexport interface RecorderProps {\n  sources: Source[],\n  paused: boolean,\n  log: Map<string, CallLog>,\n  mode: Mode,\n  onEditedCode?: (code: string) => any,\n  onCursorActivity?: (position: { line: number }) => any,\n}\n\nexport const Recorder: React.FC<RecorderProps> = ({\n  sources,\n  paused,\n  log,\n  mode,\n  onEditedCode,\n  onCursorActivity,\n}) => {\n  const [selectedFileId, setSelectedFileId] = React.useState<string | undefined>();\n  const [runningFileId, setRunningFileId] = React.useState<string | undefined>();\n  const [selectedTab, setSelectedTab] = useSetting<string>('recorderPropertiesTab', 'log');\n  const [ariaSnapshot, setAriaSnapshot] = React.useState<string | undefined>();\n  const [ariaSnapshotErrors, setAriaSnapshotErrors] = React.useState<SourceHighlight[]>();\n  const [selectorFocusOnChange, setSelectorFocusOnChange] = React.useState<boolean | undefined>(true);\n\n  const fileId = selectedFileId || runningFileId || sources[0]?.id;\n\n  const source = React.useMemo(() => {\n    if (fileId) {\n      const source = sources.find(s => s.id === fileId);\n      if (source)\n        return source;\n    }\n    return emptySource();\n  }, [sources, fileId]);\n\n  const [locator, setLocator] = React.useState('');\n  window.playwrightElementPicked = (elementInfo: ElementInfo, userGesture?: boolean) => {\n    const language = source.language;\n    setLocator(asLocator(language, elementInfo.selector));\n    setAriaSnapshot(elementInfo.ariaSnapshot);\n    setAriaSnapshotErrors([]);\n    setSelectorFocusOnChange(userGesture);\n\n    if (userGesture && selectedTab !== 'locator' && selectedTab !== 'aria')\n      setSelectedTab('locator');\n\n    if (mode === 'inspecting' && selectedTab === 'aria') {\n      // Keep exploring aria.\n    } else {\n      const isRecording = ['recording', 'assertingText', 'assertingVisibility', 'assertingValue', 'assertingSnapshot'].includes(mode);\n      window.dispatch({ event: 'setMode', params: { mode: isRecording ? 'recording' : 'standby' } }).catch(() => { });\n    }\n  };\n\n  window.playwrightSetRunningFile = setRunningFileId;\n\n  const messagesEndRef = React.useRef<HTMLDivElement>(null);\n  React.useLayoutEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ block: 'center', inline: 'nearest' });\n  }, [messagesEndRef]);\n\n\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      switch (event.key) {\n        case 'F8':\n          event.preventDefault();\n          if (paused)\n            window.dispatch({ event: 'resume' });\n          else\n            window.dispatch({ event: 'pause' });\n          break;\n        case 'F10':\n          event.preventDefault();\n          if (paused)\n            window.dispatch({ event: 'step' });\n          break;\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [paused]);\n\n  const onEditorChange = React.useCallback((selector: string) => {\n    if (mode === 'none' || mode === 'inspecting')\n      window.dispatch({ event: 'setMode', params: { mode: 'standby' } });\n    setLocator(selector);\n    window.dispatch({ event: 'highlightRequested', params: { selector } });\n  }, [mode]);\n\n  const onAriaEditorChange = React.useCallback((ariaSnapshot: string) => {\n    if (mode === 'none' || mode === 'inspecting')\n      window.dispatch({ event: 'setMode', params: { mode: 'standby' } });\n    const { fragment, errors } = parseAriaSnapshot(yaml, ariaSnapshot, { prettyErrors: false });\n    const highlights = errors.map(error => {\n      const highlight: SourceHighlight = {\n        message: error.message,\n        line: error.range[1].line,\n        column: error.range[1].col,\n        type: 'subtle-error',\n      };\n      return highlight;\n    });\n    setAriaSnapshotErrors(highlights);\n    setAriaSnapshot(ariaSnapshot);\n    if (!errors.length)\n      window.dispatch({ event: 'highlightRequested', params: { ariaTemplate: fragment } });\n  }, [mode]);\n\n  return <div className='recorder'>\n    <Toolbar>\n      <ToolbarButton icon='circle-large-filled' title='Record' toggled={mode === 'recording' || mode === 'recording-inspecting' || mode === 'assertingText' || mode === 'assertingVisibility'} onClick={() => {\n        window.dispatch({ event: 'setMode', params: { mode: mode === 'none' || mode === 'standby' || mode === 'inspecting' ? 'recording' : 'standby' } });\n      }}>Record</ToolbarButton>\n      <ToolbarSeparator />\n      <ToolbarButton icon='inspect' title='Pick locator' toggled={mode === 'inspecting' || mode === 'recording-inspecting'} onClick={() => {\n        const newMode = {\n          'inspecting': 'standby',\n          'none': 'inspecting',\n          'standby': 'inspecting',\n          'recording': 'recording-inspecting',\n          'recording-inspecting': 'recording',\n          'assertingText': 'recording-inspecting',\n          'assertingVisibility': 'recording-inspecting',\n          'assertingValue': 'recording-inspecting',\n          'assertingSnapshot': 'recording-inspecting',\n        }[mode];\n        window.dispatch({ event: 'setMode', params: { mode: newMode } }).catch(() => { });\n      }}></ToolbarButton>\n      <ToolbarButton icon='eye' title='Assert visibility' toggled={mode === 'assertingVisibility'} disabled={mode === 'none' || mode === 'standby' || mode === 'inspecting'} onClick={() => {\n        window.dispatch({ event: 'setMode', params: { mode: mode === 'assertingVisibility' ? 'recording' : 'assertingVisibility' } });\n      }}></ToolbarButton>\n      <ToolbarButton icon='whole-word' title='Assert text' toggled={mode === 'assertingText'} disabled={mode === 'none' || mode === 'standby' || mode === 'inspecting'} onClick={() => {\n        window.dispatch({ event: 'setMode', params: { mode: mode === 'assertingText' ? 'recording' : 'assertingText' } });\n      }}></ToolbarButton>\n      <ToolbarButton icon='symbol-constant' title='Assert value' toggled={mode === 'assertingValue'} disabled={mode === 'none' || mode === 'standby' || mode === 'inspecting'} onClick={() => {\n        window.dispatch({ event: 'setMode', params: { mode: mode === 'assertingValue' ? 'recording' : 'assertingValue' } });\n      }}></ToolbarButton>\n      <ToolbarButton icon='gist' title='Assert snapshot' toggled={mode === 'assertingSnapshot'} disabled={mode === 'none' || mode === 'standby' || mode === 'inspecting'} onClick={() => {\n        window.dispatch({ event: 'setMode', params: { mode: mode === 'assertingSnapshot' ? 'recording' : 'assertingSnapshot' } });\n      }}></ToolbarButton>\n      <ToolbarSeparator />\n      <ToolbarButton icon='files' title='Copy' disabled={!source || !source.text} onClick={() => {\n        copy(source.text);\n      }}></ToolbarButton>\n      <ToolbarButton icon='debug-continue' title='Resume (F8)' ariaLabel='Resume' disabled={!paused} onClick={() => {\n        window.dispatch({ event: 'resume' });\n      }}></ToolbarButton>\n      <ToolbarButton icon='debug-pause' title='Pause (F8)' ariaLabel='Pause' disabled={paused} onClick={() => {\n        window.dispatch({ event: 'pause' });\n      }}></ToolbarButton>\n      <ToolbarButton icon='debug-step-over' title='Step over (F10)' ariaLabel='Step over' disabled={!paused} onClick={() => {\n        window.dispatch({ event: 'step' });\n      }}></ToolbarButton>\n      <div style={{ flex: 'auto' }}></div>\n      <div>Target:</div>\n      <SourceChooser fileId={fileId} sources={sources} setFileId={fileId => {\n        setSelectedFileId(fileId);\n        window.dispatch({ event: 'fileChanged', params: { file: fileId } });\n      }} />\n      <ToolbarButton icon='clear-all' title='Clear' disabled={!source || !source.text} onClick={() => {\n        window.dispatch({ event: 'clear' });\n      }}></ToolbarButton>\n      <ToolbarButton icon='color-mode' title='Toggle color mode' toggled={false} onClick={() => toggleTheme()}></ToolbarButton>\n    </Toolbar>\n    <SplitView\n      sidebarSize={200}\n      main={<CodeMirrorWrapper text={source.text} language={source.language} highlight={source.highlight} revealLine={source.revealLine} readOnly={source.id !== 'playwright-test'} onChange={onEditedCode} onCursorActivity={onCursorActivity} lineNumbers={true} />}\n      sidebar={<TabbedPane\n        rightToolbar={selectedTab === 'locator' || selectedTab === 'aria' ? [<ToolbarButton key={1} icon='files' title='Copy' onClick={() => copy((selectedTab === 'locator' ? locator : ariaSnapshot) || '')} />] : []}\n        tabs={[\n          {\n            id: 'locator',\n            title: 'Locator',\n            render: () => <CodeMirrorWrapper text={locator} placeholder='Type locator to inspect' language={source.language} focusOnChange={selectorFocusOnChange} onChange={onEditorChange} wrapLines={true} />\n          },\n          {\n            id: 'log',\n            title: 'Log',\n            render: () => <CallLogView language={source.language} log={Array.from(log.values())} />\n          },\n          {\n            id: 'aria',\n            title: 'Aria',\n            render: () => <CodeMirrorWrapper text={ariaSnapshot || ''} placeholder='Type aria template to match' language={'yaml'} onChange={onAriaEditorChange} highlight={ariaSnapshotErrors} wrapLines={true} />\n          },\n        ]}\n        selectedTab={selectedTab}\n        setSelectedTab={setSelectedTab}\n      />}\n    />\n  </div>;\n};\n","export type Hex = string\n\nexport const hexGen = (len: number = 12): Hex => {\n  const maxlen = 8\n  const min = Math.pow(16, Math.min(len, maxlen) - 1)\n  const max = Math.pow(16, Math.min(len, maxlen)) - 1\n  const n = Math.floor(Math.random() * (max - min + 1)) + min\n  let r = n.toString(16)\n  while (r.length < len) {\n    r = r + hexGen(len - maxlen)\n  }\n  return r\n}\n","import { Scope, ScopeModel, ContainerRef } from '../types'\n\nexport const DEFAULT_SCOPE = 'stack'\nexport const SCOPE_KEY = 'factoryStack'\ndeclare global {\n  interface Window {\n    [SCOPE_KEY]: ScopeModel\n  }\n}\n\nif (typeof window !== 'undefined') {\n  if (!window[SCOPE_KEY]) {\n    window[SCOPE_KEY] = {}\n  }\n}\n\nexport const registerContainer = (scope: Scope, ref: ContainerRef) => {\n  window[SCOPE_KEY][scope] = ref\n\n  return ref\n}\n\nexport const unregisterContainer = (scope: Scope) => {\n  delete window[SCOPE_KEY][scope]\n}\n\nexport const getContainer = (scope?: Scope) =>\n  window[SCOPE_KEY][scope || DEFAULT_SCOPE]\n","import React, {\n  useRef,\n  useImperativeHandle,\n  forwardRef,\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n} from 'react'\n\nimport {\n  hexGen,\n  Hex,\n  registerContainer,\n  unregisterContainer,\n  DEFAULT_SCOPE,\n} from './utils'\n\nimport {\n  ContainerRef,\n  ContainerProps,\n  Instance,\n  InstanceId,\n  InstanceCreator,\n  InstanceOptions,\n} from './types'\n\nconst InstanceContainer: React.ForwardRefRenderFunction<\n  ContainerRef,\n  ContainerProps\n> = (props, ref) => {\n  const { scope = DEFAULT_SCOPE } = props || {}\n\n  const propsRef = useRef(props)\n\n  const [instances, setInstances] = useState<{ [key: string]: Instance }>({})\n  const [hashStack, setHashStack] = useState<Hex[]>([])\n\n  const resolve = useCallback(\n    (hash: InstanceId, v) => instances?.[hash]?.resolve(v),\n    [instances]\n  )\n  const resolveAll = useCallback(\n    v => Object.values(instances).forEach(i => i.resolve(v)),\n    [instances]\n  )\n\n  const reject = useCallback(\n    (hash: InstanceId, r) => instances?.[hash]?.reject(r),\n    [instances]\n  )\n  const rejectAll = useCallback(\n    r => Object.values(instances).forEach(i => i.reject(r)),\n    [instances]\n  )\n  const hasInstance = useCallback(\n    (hash: InstanceId) => !!hashStack.find(id => id === hash),\n    [hashStack]\n  )\n  const getInstance = useCallback((hash: InstanceId) => instances?.[hash], [\n    instances,\n  ])\n\n  const remove = (hash: InstanceId, options: InstanceOptions): void => {\n    setHashStack(stack => stack.filter(s => s !== hash))\n\n    setTimeout(() => {\n      setInstances(instances => {\n        const { [hash]: _, ...omitHash } = instances\n\n        return omitHash\n      })\n    }, options?.exitTimeout)\n\n    props.onRemove?.(hash)\n  }\n\n  const create: InstanceCreator = (Component, options = {}, instanceProps) =>\n    new Promise((res, rej) => {\n      const hash = instanceProps?.instanceId || hexGen()\n\n      const {\n        enterTimeout,\n        exitTimeout,\n        isAppendIntances,\n        onResolve,\n        onReject,\n      } = propsRef.current\n\n      const instanceOptions = {\n        enterTimeout,\n        exitTimeout,\n        instanceId: hash,\n        ...options,\n      }\n\n      const instance: Instance = {\n        Component,\n        props: { ...options, ...instanceProps },\n        resolve: v => {\n          removeRef.current(hash, instanceOptions)\n          res(v)\n          onResolve?.(v, hash)\n        },\n        reject: r => {\n          removeRef.current(hash, instanceOptions)\n          rej(r)\n          onReject?.(r, hash)\n        },\n        ...instanceOptions,\n      }\n\n      setInstances(instances =>\n        isAppendIntances\n          ? {\n              ...instances,\n              [hash]: instance,\n            }\n          : {\n              [hash]: instance,\n              ...instances,\n            }\n      )\n\n      setTimeout(() => {\n        setHashStack(stack => [...stack, hash])\n        propsRef.current.onOpen?.(hash, instance)\n      }, instanceOptions.enterTimeout)\n    })\n\n  const removeRef = useRef(remove)\n  const createRef = useRef(create)\n\n  useEffect(() => {\n    propsRef.current = props\n    removeRef.current = remove\n    createRef.current = create\n  })\n\n  useImperativeHandle(ref, () => ({\n    create: createRef.current,\n    resolve,\n    reject,\n    resolveAll,\n    rejectAll,\n    hasInstance,\n    getInstance,\n  }))\n\n  useEffect(() => {\n    registerContainer(scope, {\n      create: createRef.current,\n      resolve,\n      reject,\n      resolveAll,\n      rejectAll,\n      hasInstance,\n      getInstance,\n    })\n\n    return () => unregisterContainer(scope)\n  }, [scope])\n\n  const mapKeys = useMemo(() => {\n    const keys = Object.keys(instances)\n\n    return keys.map(key => {\n      const { Component, props, resolve, reject } = instances[key]\n\n      const isOpen = !!hashStack.find(h => h === key)\n\n      return (\n        <Component\n          {...props}\n          key={key}\n          isOpen={isOpen}\n          onReject={reject}\n          onResolve={resolve}\n          /** @deprecated **/\n          close={resolve}\n          /** @deprecated **/\n          open={isOpen}\n        />\n      )\n    })\n  }, [instances, hashStack])\n\n  return <>{mapKeys}</>\n}\n\nexport const Container = forwardRef(InstanceContainer)\n\nContainer.defaultProps = {\n  exitTimeout: 500,\n  enterTimeout: 50,\n}\n","import { getContainer } from './utils'\nimport { CreateInstance } from './types'\n\n/** @deprecated */\nexport const createModal: CreateInstance = (Component, options) => props =>\n  getContainer(options?.scope).create(Component, options, props)\n\nexport const create: CreateInstance = (Component, options) => props =>\n  getContainer(options?.scope).create(Component, options, props)\n","/**\r\n * Copyright (c) Rui Figueira.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport React from 'react';\r\n\r\nexport const SaveCodeForm: React.FC<{\r\n  suggestedFilename?: string;\r\n  onSubmit: (result: { filename: string }) => any;\r\n}> = ({ suggestedFilename, onSubmit }) => {\r\n\r\n  const [filename, setFilename] = React.useState<string>(suggestedFilename ?? '');\r\n\r\n  return <form id='save-form' onSubmit={() => onSubmit({ filename })}>\r\n    <label htmlFor='filename'>File Name:</label>\r\n    <input\r\n      type='text'\r\n      id='filename'\r\n      name='filename'\r\n      placeholder='Enter file name'\r\n      required\r\n      value={filename}\r\n      onChange={e => setFilename(e.target.value)}\r\n    />\r\n    <button id='submit' type='submit' disabled={!filename}>Save</button>\r\n  </form>;\r\n};\r\n","/**\r\n * Real Data Integration for Self-Healing Features\r\n * Connects self-healing with actual test execution data\r\n */\r\n\r\nimport { aiSelfHealingService } from './aiSelfHealingService';\r\nimport { selfHealingService } from './selfHealing';\r\nimport { testExecutor } from './testExecutor';\r\n\r\nexport interface RealTestExecution {\r\n  id: string;\r\n  scriptId: string;\r\n  status: 'pending' | 'running' | 'passed' | 'failed';\r\n  startTime: Date;\r\n  endTime?: Date;\r\n  logs: string[];\r\n  failures?: TestFailure[];\r\n}\r\n\r\nexport interface TestFailure {\r\n  id: string;\r\n  step: number;\r\n  locator: string;\r\n  error: string;\r\n  timestamp: Date;\r\n  element?: Element;\r\n  healed?: boolean;\r\n  healedLocator?: string;\r\n}\r\n\r\nexport class RealDataIntegration {\r\n  private activeExecutions: Map<string, RealTestExecution> = new Map();\r\n  private isListening: boolean = false;\r\n\r\n  constructor() {\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Set up event listeners for test execution\r\n   */\r\n  private setupEventListeners(): void {\r\n    // Listen for test execution events\r\n    if (typeof window !== 'undefined') {\r\n      window.addEventListener('testExecutionStarted', this.handleTestStart as EventListener);\r\n      window.addEventListener('testExecutionCompleted', this.handleTestComplete as EventListener);\r\n      window.addEventListener('locatorFailed', this.handleLocatorFailure as EventListener);\r\n      window.addEventListener('locatorHealed', this.handleLocatorHealed as EventListener);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start listening for real test data\r\n   */\r\n  startListening(): void {\r\n    this.isListening = true;\r\n    console.log('Real data integration started');\r\n  }\r\n\r\n  /**\r\n   * Stop listening for real test data\r\n   */\r\n  stopListening(): void {\r\n    this.isListening = false;\r\n    console.log('Real data integration stopped');\r\n  }\r\n\r\n  /**\r\n   * Handle test execution start\r\n   */\r\n  private handleTestStart(event: Event): void {\r\n    const customEvent = event as CustomEvent;\r\n    if (!this.isListening) return;\r\n\r\n    const { testExecution } = customEvent.detail;\r\n    this.activeExecutions.set(testExecution.id, testExecution);\r\n  }\r\n\r\n  /**\r\n   * Handle test execution completion\r\n   */\r\n  private handleTestComplete(event: Event): void {\r\n    const customEvent = event as CustomEvent;\r\n    if (!this.isListening) return;\r\n\r\n    const { testExecution } = customEvent.detail;\r\n    const execution = this.activeExecutions.get(testExecution.id);\r\n\r\n    if (execution) {\r\n      execution.status = testExecution.status;\r\n      execution.endTime = testExecution.endTime;\r\n      execution.logs = testExecution.logs;\r\n\r\n      // Process failures for self-healing\r\n      if (execution.failures && execution.failures.length > 0) {\r\n        this.processFailures(execution);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle locator failure\r\n   */\r\n  private handleLocatorFailure(event: Event): void {\r\n    const customEvent = event as CustomEvent;\r\n    if (!this.isListening) return;\r\n\r\n    const { testId, step, locator, error, element } = customEvent.detail;\r\n    const execution = this.activeExecutions.get(testId);\r\n\r\n    if (execution) {\r\n      const failure: TestFailure = {\r\n        id: `failure-${Date.now()}`,\r\n        step,\r\n        locator,\r\n        error,\r\n        timestamp: new Date(),\r\n        element\r\n      };\r\n\r\n      if (!execution.failures) {\r\n        execution.failures = [];\r\n      }\r\n      execution.failures.push(failure);\r\n\r\n      // Attempt auto-healing\r\n      this.attemptAutoHealing(execution, failure);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle locator healing\r\n   */\r\n  private handleLocatorHealed(event: Event): void {\r\n    const customEvent = event as CustomEvent;\r\n    if (!this.isListening) return;\r\n\r\n    const { testId, failureId, healedLocator, success } = customEvent.detail;\r\n    const execution = this.activeExecutions.get(testId);\r\n\r\n    if (execution && execution.failures) {\r\n      const failure = execution.failures.find(f => f.id === failureId);\r\n      if (failure) {\r\n        failure.healed = success;\r\n        failure.healedLocator = healedLocator;\r\n\r\n        // Record the healing result\r\n        this.recordHealingResult(failure, success);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attempt auto-healing for a failure\r\n   */\r\n  private async attemptAutoHealing(execution: RealTestExecution, failure: TestFailure): Promise<void> {\r\n    if (!failure.element) return;\r\n\r\n    try {\r\n      // Try AI healing first\r\n      const config = aiSelfHealingService.getConfig();\r\n      if (config.enabled) {\r\n        const aiResult = await aiSelfHealingService.autoHealLocator(\r\n          failure.locator,\r\n          failure.element,\r\n          {\r\n            url: `test-${execution.scriptId}`,\r\n            failureReason: failure.error\r\n          }\r\n        );\r\n\r\n        if (aiResult.autoApplied) {\r\n          failure.healed = true;\r\n          failure.healedLocator = aiResult.healedLocator;\r\n\r\n          // Emit healing event\r\n          this.emitEvent('locatorHealed', {\r\n            testId: execution.id,\r\n            failureId: failure.id,\r\n            healedLocator: aiResult.healedLocator,\r\n            success: true\r\n          });\r\n\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Fallback to traditional self-healing\r\n      const traditionalResult = await selfHealingService.autoHealLocator(\r\n        failure.locator,\r\n        failure.element,\r\n        {\r\n          url: `test-${execution.scriptId}`,\r\n          failureReason: failure.error\r\n        }\r\n      );\r\n\r\n      if (traditionalResult.healedLocator) {\r\n        failure.healed = true;\r\n        failure.healedLocator = traditionalResult.healedLocator;\r\n\r\n        // Emit healing event\r\n        this.emitEvent('locatorHealed', {\r\n          testId: execution.id,\r\n          failureId: failure.id,\r\n          healedLocator: traditionalResult.healedLocator,\r\n          success: true\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Auto-healing failed:', error);\r\n\r\n      // Record failure\r\n      this.recordHealingResult(failure, false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Process all failures in a test execution\r\n   */\r\n  private async processFailures(execution: RealTestExecution): Promise<void> {\r\n    if (!execution.failures) return;\r\n\r\n    for (const failure of execution.failures) {\r\n      if (!failure.healed) {\r\n        // Try to heal any remaining failures\r\n        await this.attemptAutoHealing(execution, failure);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Record healing result in both services\r\n   */\r\n  private async recordHealingResult(failure: TestFailure, success: boolean): Promise<void> {\r\n    try {\r\n      // Record in AI service\r\n      await aiSelfHealingService.recordHealingResult(\r\n        `failure-${failure.id}`,\r\n        success,\r\n        success ? undefined : failure.error\r\n      );\r\n\r\n      // Record in traditional service\r\n      await selfHealingService.recordHealingResult(\r\n        `failure-${failure.id}`,\r\n        success,\r\n        failure.error\r\n      );\r\n    } catch (error) {\r\n      console.error('Failed to record healing result:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get real healing statistics\r\n   */\r\n  async getRealHealingStatistics(): Promise<{\r\n    totalTests: number;\r\n    totalFailures: number;\r\n    totalHealings: number;\r\n    successRate: number;\r\n    aiHealings: number;\r\n    traditionalHealings: number;\r\n    recentFailures: TestFailure[];\r\n  }> {\r\n    let totalTests = 0;\r\n    let totalFailures = 0;\r\n    let totalHealings = 0;\r\n    let aiHealings = 0;\r\n    let traditionalHealings = 0;\r\n    const recentFailures: TestFailure[] = [];\r\n\r\n    // Process all active executions\r\n    for (const execution of this.activeExecutions.values()) {\r\n      totalTests++;\r\n\r\n      if (execution.failures) {\r\n        totalFailures += execution.failures.length;\r\n\r\n        for (const failure of execution.failures) {\r\n          if (failure.healed) {\r\n            totalHealings++;\r\n\r\n            // Check if it was AI or traditional healing\r\n            if (failure.healedLocator && failure.healedLocator.includes('data-testid')) {\r\n              aiHealings++;\r\n            } else {\r\n              traditionalHealings++;\r\n            }\r\n          } else {\r\n            // Add to recent failures if not healed\r\n            if (Date.now() - failure.timestamp.getTime() < 24 * 60 * 60 * 1000) { // Last 24 hours\r\n              recentFailures.push(failure);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Get AI service statistics\r\n    const aiStats = await aiSelfHealingService.getHealingStatistics();\r\n\r\n    // Get traditional service statistics\r\n    const traditionalStats = await selfHealingService.getStatistics();\r\n\r\n    return {\r\n      totalTests,\r\n      totalFailures,\r\n      totalHealings,\r\n      successRate: totalFailures > 0 ? totalHealings / totalFailures : 0,\r\n      aiHealings: aiHealings + aiStats.totalHealings,\r\n      traditionalHealings: traditionalHealings + traditionalStats.total,\r\n      recentFailures: recentFailures.slice(0, 10) // Last 10 failures\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get real healing history\r\n   */\r\n  async getRealHealingHistory(): Promise<Array<{\r\n    id: string;\r\n    testId: string;\r\n    scriptId: string;\r\n    originalLocator: string;\r\n    healedLocator?: string;\r\n    success: boolean;\r\n    timestamp: Date;\r\n    failureReason: string;\r\n    elementType: string;\r\n    aiEnhanced: boolean;\r\n  }>> {\r\n    const history: Array<{\r\n      id: string;\r\n      testId: string;\r\n      scriptId: string;\r\n      originalLocator: string;\r\n      healedLocator?: string;\r\n      success: boolean;\r\n      timestamp: Date;\r\n      failureReason: string;\r\n      elementType: string;\r\n      aiEnhanced: boolean;\r\n    }> = [];\r\n\r\n    // Process all active executions\r\n    for (const execution of this.activeExecutions.values()) {\r\n      if (execution.failures) {\r\n        for (const failure of execution.failures) {\r\n          history.push({\r\n            id: `healing-${failure.id}`,\r\n            testId: execution.id,\r\n            scriptId: execution.scriptId,\r\n            originalLocator: failure.locator,\r\n            healedLocator: failure.healedLocator,\r\n            success: failure.healed || false,\r\n            timestamp: failure.timestamp,\r\n            failureReason: failure.error,\r\n            elementType: failure.element?.tagName.toLowerCase() || 'unknown',\r\n            aiEnhanced: failure.healedLocator?.includes('data-testid') || false\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    // Sort by timestamp (newest first)\r\n    return history.sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime());\r\n  }\r\n\r\n  /**\r\n   * Simulate test execution with failures for demonstration\r\n   */\r\n  async simulateTestExecution(scriptId: string, withFailures: boolean = true): Promise<void> {\r\n    const testId = `test-${Date.now()}`;\r\n    const execution: RealTestExecution = {\r\n      id: testId,\r\n      scriptId,\r\n      status: 'running',\r\n      startTime: new Date(),\r\n      logs: ['Test started'],\r\n      failures: []\r\n    };\r\n\r\n    this.activeExecutions.set(testId, execution);\r\n\r\n    // Emit test start event\r\n    this.emitEvent('testExecutionStarted', { testExecution: execution });\r\n\r\n    // Simulate test steps\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n    if (withFailures) {\r\n      // Simulate a locator failure\r\n      const failure: TestFailure = {\r\n        id: `failure-${Date.now()}`,\r\n        step: 1,\r\n        locator: '#dynamic-element-12345',\r\n        error: 'Element not found',\r\n        timestamp: new Date()\r\n      };\r\n\r\n      execution.failures?.push(failure);\r\n      execution.logs.push(`Step 1 failed: ${failure.error}`);\r\n\r\n      // Emit failure event\r\n      this.emitEvent('locatorFailed', {\r\n        testId,\r\n        step: failure.step,\r\n        locator: failure.locator,\r\n        error: failure.error\r\n      });\r\n\r\n      // Wait for healing attempt\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n    }\r\n\r\n    // Complete test\r\n    execution.status = 'passed';\r\n    execution.endTime = new Date();\r\n    execution.logs.push('Test completed');\r\n\r\n    // Emit test complete event\r\n    this.emitEvent('testExecutionCompleted', { testExecution: execution });\r\n  }\r\n\r\n  /**\r\n   * Emit custom event\r\n   */\r\n  private emitEvent(eventName: string, detail: any): void {\r\n    if (typeof window !== 'undefined') {\r\n      window.dispatchEvent(new CustomEvent(eventName, { detail }));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear old test executions\r\n   */\r\n  clearOldExecutions(olderThanDays: number = 7): void {\r\n    const cutoffDate = new Date();\r\n    cutoffDate.setDate(cutoffDate.getDate() - olderThanDays);\r\n\r\n    for (const [id, execution] of this.activeExecutions.entries()) {\r\n      if (execution.startTime < cutoffDate) {\r\n        this.activeExecutions.delete(id);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const realDataIntegration = new RealDataIntegration();\r\n","/**\r\n * Copyright (c) Rui Figueira.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { selfHealingService, HealingSuggestion } from './selfHealing';\r\nimport { realDataIntegration } from './realDataIntegration';\r\n\r\ninterface SelfHealingManagerProps {\r\n  onSuggestionApproved?: (suggestion: HealingSuggestion) => void;\r\n  onClose?: () => void;\r\n}\r\n\r\nexport const SelfHealingManager: React.FC<SelfHealingManagerProps> = ({ onSuggestionApproved, onClose }) => {\r\n  const [suggestions, setSuggestions] = React.useState<HealingSuggestion[]>([]);\r\n  const [loading, setLoading] = React.useState<boolean>(false);\r\n  const [statistics, setStatistics] = React.useState<any>(null);\r\n\r\n  // Load suggestions on component mount\r\n  React.useEffect(() => {\r\n    loadSuggestions();\r\n\r\n    // Start listening for real data\r\n    realDataIntegration.startListening();\r\n\r\n    // Simulate some test executions for demonstration\r\n    setTimeout(() => {\r\n      realDataIntegration.simulateTestExecution('demo-script-1', true);\r\n    }, 2000);\r\n\r\n    return () => {\r\n      realDataIntegration.stopListening();\r\n    };\r\n  }, []);\r\n\r\n  const loadSuggestions = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Get real statistics from integration service\r\n      const realStats = await realDataIntegration.getRealHealingStatistics();\r\n\r\n      // Get traditional service statistics\r\n      const traditionalStats = await selfHealingService.getStatistics();\r\n\r\n      // Get suggestions\r\n      const healingSuggestions = await selfHealingService.getSuggestions();\r\n\r\n      // Combine real and traditional statistics\r\n      const combinedStats = {\r\n        total: realStats.totalTests + traditionalStats.total,\r\n        pending: healingSuggestions.filter(s => s.status === 'pending').length,\r\n        approved: healingSuggestions.filter(s => s.status === 'approved').length,\r\n        rejected: healingSuggestions.filter(s => s.status === 'rejected').length,\r\n        averageConfidence: traditionalStats.averageConfidence,\r\n        aiEnhancedCount: realStats.aiHealings,\r\n        aiSuccessRate: realStats.successRate,\r\n        visualSimilarityAvg: traditionalStats.visualSimilarityAvg\r\n      };\r\n\r\n      setSuggestions(healingSuggestions);\r\n      setStatistics(combinedStats);\r\n    } catch (error) {\r\n      console.error('Error loading suggestions:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleApprove = async (id: string) => {\r\n    try {\r\n      setLoading(true);\r\n      const success = await selfHealingService.approveSuggestion(id);\r\n      if (success) {\r\n        // Update local state\r\n        setSuggestions(prev =>\r\n          prev.map(s => s.id === id ? { ...s, status: 'approved' } : s)\r\n        );\r\n\r\n        // Notify parent\r\n        const suggestion = suggestions.find(s => s.id === id);\r\n        if (suggestion && onSuggestionApproved) {\r\n          onSuggestionApproved(suggestion);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error approving suggestion:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleReject = async (id: string) => {\r\n    try {\r\n      setLoading(true);\r\n      const success = await selfHealingService.rejectSuggestion(id);\r\n      if (success) {\r\n        // Update local state\r\n        setSuggestions(prev =>\r\n          prev.map(s => s.id === id ? { ...s, status: 'rejected' } : s)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error('Error rejecting suggestion:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const pendingSuggestions = suggestions.filter(s => s.status === 'pending');\r\n  const approvedSuggestions = suggestions.filter(s => s.status === 'approved');\r\n  const rejectedSuggestions = suggestions.filter(s => s.status === 'rejected');\r\n\r\n  return (\r\n    <div className=\"self-healing-manager\">\r\n      <div className=\"healing-header\">\r\n        <h3>Self-Healing Suggestions</h3>\r\n        <div style={{ display: 'flex', gap: '8px' }}>\r\n          <button onClick={loadSuggestions} disabled={loading}>\r\n            {loading ? 'Refreshing...' : 'Refresh'}\r\n          </button>\r\n          {onClose && (\r\n            <button onClick={onClose}>Close</button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {pendingSuggestions.length > 0 && (\r\n        <div className=\"suggestions-section\">\r\n          <h4>Pending ({pendingSuggestions.length})</h4>\r\n          <div className=\"suggestions-list\">\r\n            {pendingSuggestions.map(suggestion => (\r\n              <div key={suggestion.id} className=\"suggestion-item pending\">\r\n                <div className=\"suggestion-content\">\r\n                  <div className=\"locator-pair\">\r\n                    <div className=\"broken-locator\">\r\n                      <label>Broken:</label>\r\n                      <code>{suggestion.brokenLocator}</code>\r\n                    </div>\r\n                    <div className=\"valid-locator\">\r\n                      <label>Valid:</label>\r\n                      <code>{suggestion.validLocator}</code>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"confidence\">\r\n                    Confidence: {Math.round(suggestion.confidence * 100)}%\r\n                  </div>\r\n                </div>\r\n                <div className=\"suggestion-actions\">\r\n                  <button\r\n                    onClick={() => handleApprove(suggestion.id)}\r\n                    disabled={loading}\r\n                    className=\"approve-btn\"\r\n                  >\r\n                    Approve\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleReject(suggestion.id)}\r\n                    disabled={loading}\r\n                    className=\"reject-btn\"\r\n                  >\r\n                    Reject\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {approvedSuggestions.length > 0 && (\r\n        <div className=\"suggestions-section\">\r\n          <h4>Approved ({approvedSuggestions.length})</h4>\r\n          <div className=\"suggestions-list\">\r\n            {approvedSuggestions.map(suggestion => (\r\n              <div key={suggestion.id} className=\"suggestion-item approved\">\r\n                <div className=\"suggestion-content\">\r\n                  <div className=\"locator-pair\">\r\n                    <div className=\"broken-locator\">\r\n                      <label>Broken:</label>\r\n                      <code>{suggestion.brokenLocator}</code>\r\n                    </div>\r\n                    <div className=\"valid-locator\">\r\n                      <label>Valid:</label>\r\n                      <code>{suggestion.validLocator}</code>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"confidence\">\r\n                    Confidence: {Math.round(suggestion.confidence * 100)}%\r\n                  </div>\r\n                </div>\r\n                <div className=\"status-badge approved\">Approved</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {rejectedSuggestions.length > 0 && (\r\n        <div className=\"suggestions-section\">\r\n          <h4>Rejected ({rejectedSuggestions.length})</h4>\r\n          <div className=\"suggestions-list\">\r\n            {rejectedSuggestions.map(suggestion => (\r\n              <div key={suggestion.id} className=\"suggestion-item rejected\">\r\n                <div className=\"suggestion-content\">\r\n                  <div className=\"locator-pair\">\r\n                    <div className=\"broken-locator\">\r\n                      <label>Broken:</label>\r\n                      <code>{suggestion.brokenLocator}</code>\r\n                    </div>\r\n                    <div className=\"valid-locator\">\r\n                      <label>Valid:</label>\r\n                      <code>{suggestion.validLocator}</code>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"confidence\">\r\n                    Confidence: {Math.round(suggestion.confidence * 100)}%\r\n                  </div>\r\n                </div>\r\n                <div className=\"status-badge rejected\">Rejected</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {suggestions.length === 0 && !loading && (\r\n        <p>No self-healing suggestions found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Export both the manager and a simple UI wrapper\r\nexport const SelfHealingUI: React.FC<{ onClose?: () => void }> = ({ onClose }) => {\r\n  return <SelfHealingManager onClose={onClose} />;\r\n};\r\n","/**\r\n * AI Self-Healing UI Component\r\n * Provides advanced interface for AI-powered self-healing features\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { aiSelfHealingService, AutoHealingConfig, HealingHistory } from './aiSelfHealingService';\r\nimport { realDataIntegration } from './realDataIntegration';\r\nimport type { LocatorInfo } from './enhancedSelfHealing';\r\n\r\ninterface AISelfHealingUIProps {\r\n  onClose: () => void;\r\n}\r\n\r\ninterface HealingStatistics {\r\n  totalHealings: number;\r\n  successRate: number;\r\n  autoHealRate: number;\r\n  rollbackRate: number;\r\n  averageConfidence: number;\r\n  topStrategies: Array<{ strategy: string; count: number; successRate: number }>;\r\n}\r\n\r\ninterface HealingRecord {\r\n  id: string;\r\n  originalLocator: string;\r\n  healedLocator: string;\r\n  success: boolean | null;\r\n  confidence: number;\r\n  timestamp: Date;\r\n  context: {\r\n    url: string;\r\n    elementType: string;\r\n    failureReason: string;\r\n  };\r\n  rollback?: {\r\n    timestamp: Date;\r\n    reason: string;\r\n  };\r\n}\r\n\r\nexport const AISelfHealingUI: React.FC<AISelfHealingUIProps> = ({ onClose }) => {\r\n  const [activeTab, setActiveTab] = React.useState<'dashboard' | 'history' | 'config' | 'training'>('dashboard');\r\n  const [statistics, setStatistics] = React.useState<HealingStatistics | null>(null);\r\n  const [history, setHistory] = React.useState<HealingRecord[]>([]);\r\n  const [config, setConfig] = React.useState<AutoHealingConfig | null>(null);\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  const [selectedRecord, setSelectedRecord] = React.useState<HealingRecord | null>(null);\r\n  const [showDetails, setShowDetails] = React.useState(false);\r\n  const [trainingData, setTrainingData] = React.useState<Array<{ features: any; label: number }>>([]);\r\n  const [isTraining, setIsTraining] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    loadData();\r\n\r\n    // Start listening for real data\r\n    realDataIntegration.startListening();\r\n\r\n    // Simulate some test executions for demonstration\r\n    setTimeout(() => {\r\n      realDataIntegration.simulateTestExecution('demo-script-1', true);\r\n    }, 2000);\r\n\r\n    setTimeout(() => {\r\n      realDataIntegration.simulateTestExecution('demo-script-2', true);\r\n    }, 5000);\r\n\r\n    return () => {\r\n      realDataIntegration.stopListening();\r\n    };\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      // Get real statistics from integration service\r\n      const realStats = await realDataIntegration.getRealHealingStatistics();\r\n\r\n      // Get AI service statistics\r\n      const aiStats = await aiSelfHealingService.getHealingStatistics();\r\n\r\n      // Get real healing history\r\n      const realHistory = await realDataIntegration.getRealHealingHistory();\r\n\r\n      // Get current config\r\n      const currentConfig = await aiSelfHealingService.getConfig();\r\n\r\n      // Combine real and AI statistics\r\n      const combinedStats = {\r\n        totalHealings: realStats.totalHealings + aiStats.totalHealings,\r\n        successRate: realStats.successRate || aiStats.successRate,\r\n        autoHealRate: aiStats.autoHealRate,\r\n        rollbackRate: aiStats.rollbackRate,\r\n        averageConfidence: aiStats.averageConfidence,\r\n        topStrategies: aiStats.topStrategies\r\n      };\r\n\r\n      setStatistics(combinedStats);\r\n      setHistory(await loadHealingHistory());\r\n      setConfig(currentConfig);\r\n    } catch (error) {\r\n      console.error('Failed to load AI self-healing data:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadHealingHistory = async (): Promise<HealingRecord[]> => {\r\n    try {\r\n      // Get real healing history\r\n      const realHistory = await realDataIntegration.getRealHealingHistory();\r\n\r\n      // Convert to HealingRecord format\r\n      return realHistory.map(record => ({\r\n        id: record.id,\r\n        originalLocator: record.originalLocator,\r\n        healedLocator: record.healedLocator || '',\r\n        success: record.success,\r\n        confidence: 0.8, // Default confidence\r\n        timestamp: record.timestamp,\r\n        context: {\r\n          url: `test-${record.scriptId}`,\r\n          elementType: record.elementType,\r\n          failureReason: record.failureReason\r\n        }\r\n      }));\r\n    } catch (error) {\r\n      console.error('Failed to load healing history:', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const handleConfigUpdate = async (newConfig: Partial<AutoHealingConfig>) => {\r\n    try {\r\n      aiSelfHealingService.updateConfig(newConfig);\r\n      setConfig({ ...config!, ...newConfig });\r\n    } catch (error) {\r\n      console.error('Failed to update config:', error);\r\n    }\r\n  };\r\n\r\n  const handleTrainModel = async () => {\r\n    setIsTraining(true);\r\n    try {\r\n      // In a real implementation, this would collect training data\r\n      // and train the ML model\r\n      await new Promise(resolve => setTimeout(resolve, 2000)); // Simulate training\r\n      await loadData();\r\n    } catch (error) {\r\n      console.error('Failed to train model:', error);\r\n    } finally {\r\n      setIsTraining(false);\r\n    }\r\n  };\r\n\r\n  const formatDate = (date: Date) => {\r\n    return new Intl.DateTimeFormat('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    }).format(date);\r\n  };\r\n\r\n  const formatPercentage = (value: number) => {\r\n    return `${(value * 100).toFixed(1)}%`;\r\n  };\r\n\r\n  const getStatusIcon = (record: HealingRecord) => {\r\n    if (record.success === null) return '⏳';\r\n    if (record.success) return '✅';\r\n    if (record.rollback) return '🔄';\r\n    return '❌';\r\n  };\r\n\r\n  const getConfidenceColor = (confidence: number) => {\r\n    if (confidence >= 0.8) return '#28a745';\r\n    if (confidence >= 0.6) return '#ffc107';\r\n    return '#dc3545';\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div style={{ padding: '20px', textAlign: 'center' }}>\r\n        <div className=\"spinner\"></div>\r\n        <p>Loading AI Self-Healing...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      background: 'var(--vscode-sideBar-background)',\r\n      color: 'var(--vscode-sideBar-foreground)'\r\n    }}>\r\n      {/* Header */}\r\n      <div style={{\r\n        padding: '15px',\r\n        borderBottom: '1px solid var(--vscode-panel-border)',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between'\r\n      }}>\r\n        <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\r\n          <span style={{ fontSize: '18px' }}>🤖</span>\r\n          <h3 style={{ margin: 0, fontSize: '14px', fontWeight: '600' }}>\r\n            AI Self-Healing\r\n          </h3>\r\n        </div>\r\n        <button\r\n          onClick={onClose}\r\n          style={{\r\n            background: 'none',\r\n            border: 'none',\r\n            fontSize: '20px',\r\n            cursor: 'pointer',\r\n            color: 'var(--vscode-sideBar-foreground)',\r\n            padding: '0',\r\n            width: '24px',\r\n            height: '24px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n          }}\r\n        >\r\n          ×\r\n        </button>\r\n      </div>\r\n\r\n      {/* Tabs */}\r\n      <div style={{\r\n        display: 'flex',\r\n        borderBottom: '1px solid var(--vscode-panel-border)',\r\n        background: 'var(--vscode-editor-background)'\r\n      }}>\r\n        {[\r\n          { id: 'dashboard', label: 'Dashboard', icon: '📊' },\r\n          { id: 'history', label: 'History', icon: '📜' },\r\n          { id: 'config', label: 'Config', icon: '⚙️' },\r\n          { id: 'training', label: 'Training', icon: '🧠' }\r\n        ].map(tab => (\r\n          <button\r\n            key={tab.id}\r\n            onClick={() => setActiveTab(tab.id as any)}\r\n            style={{\r\n              flex: 1,\r\n              padding: '10px',\r\n              border: 'none',\r\n              background: activeTab === tab.id\r\n                ? 'var(--vscode-tab-activeBackground)'\r\n                : 'transparent',\r\n              color: activeTab === tab.id\r\n                ? 'var(--vscode-tab-activeForeground)'\r\n                : 'var(--vscode-tab-inactiveForeground)',\r\n              cursor: 'pointer',\r\n              fontSize: '12px',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              gap: '5px'\r\n            }}\r\n          >\r\n            <span>{tab.icon}</span>\r\n            <span>{tab.label}</span>\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div style={{ flex: 1, overflow: 'auto', padding: '15px' }}>\r\n        {activeTab === 'dashboard' && (\r\n          <DashboardTab\r\n            statistics={statistics}\r\n            onRefresh={loadData}\r\n          />\r\n        )}\r\n\r\n        {activeTab === 'history' && (\r\n          <HistoryTab\r\n            history={history}\r\n            selectedRecord={selectedRecord}\r\n            onSelectRecord={setSelectedRecord}\r\n            showDetails={showDetails}\r\n            onToggleDetails={() => setShowDetails(!showDetails)}\r\n          />\r\n        )}\r\n\r\n        {activeTab === 'config' && (\r\n          <ConfigTab\r\n            config={config}\r\n            onUpdate={handleConfigUpdate}\r\n          />\r\n        )}\r\n\r\n        {activeTab === 'training' && (\r\n          <TrainingTab\r\n            trainingData={trainingData}\r\n            isTraining={isTraining}\r\n            onTrain={handleTrainModel}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Dashboard Tab Component\r\nconst DashboardTab: React.FC<{\r\n  statistics: HealingStatistics | null;\r\n  onRefresh: () => void;\r\n}> = ({ statistics, onRefresh }) => {\r\n  if (!statistics) {\r\n    return <div>No statistics available</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        marginBottom: '20px'\r\n      }}>\r\n        <h4 style={{ margin: 0, fontSize: '14px' }}>Performance Overview</h4>\r\n        <button\r\n          onClick={onRefresh}\r\n          style={{\r\n            padding: '5px 10px',\r\n            border: '1px solid var(--vscode-button-border)',\r\n            background: 'var(--vscode-button-background)',\r\n            color: 'var(--vscode-button-foreground)',\r\n            cursor: 'pointer',\r\n            fontSize: '11px',\r\n            borderRadius: '3px'\r\n          }}\r\n        >\r\n          Refresh\r\n        </button>\r\n      </div>\r\n\r\n      {/* Key Metrics */}\r\n      <div style={{\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr 1fr',\r\n        gap: '15px',\r\n        marginBottom: '20px'\r\n      }}>\r\n        <MetricCard\r\n          label=\"Total Healings\"\r\n          value={statistics.totalHealings.toString()}\r\n          icon=\"🔧\"\r\n        />\r\n        <MetricCard\r\n          label=\"Success Rate\"\r\n          value={`${(statistics.successRate * 100).toFixed(1)}%`}\r\n          icon=\"✅\"\r\n          color={statistics.successRate >= 0.8 ? '#28a745' : '#ffc107'}\r\n        />\r\n        <MetricCard\r\n          label=\"Auto-Heal Rate\"\r\n          value={`${(statistics.autoHealRate * 100).toFixed(1)}%`}\r\n          icon=\"🤖\"\r\n          color={statistics.autoHealRate >= 0.7 ? '#28a745' : '#ffc107'}\r\n        />\r\n        <MetricCard\r\n          label=\"Avg Confidence\"\r\n          value={`${(statistics.averageConfidence * 100).toFixed(1)}%`}\r\n          icon=\"📊\"\r\n          color={statistics.averageConfidence >= 0.8 ? '#28a745' : '#ffc107'}\r\n        />\r\n      </div>\r\n\r\n      {/* Top Strategies */}\r\n      <div>\r\n        <h5 style={{ margin: '0 0 10px 0', fontSize: '13px' }}>Top Healing Strategies</h5>\r\n        <div style={{\r\n          background: 'var(--vscode-editor-background)',\r\n          border: '1px solid var(--vscode-panel-border)',\r\n          borderRadius: '4px',\r\n          padding: '10px'\r\n        }}>\r\n          {statistics.topStrategies.map((strategy, index) => (\r\n            <div\r\n              key={strategy.strategy}\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                padding: '8px 0',\r\n                borderBottom: index < statistics.topStrategies.length - 1\r\n                  ? '1px solid var(--vscode-panel-border)'\r\n                  : 'none'\r\n              }}\r\n            >\r\n              <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                <span style={{\r\n                  background: 'var(--vscode-badge-background)',\r\n                  color: 'var(--vscode-badge-foreground)',\r\n                  padding: '2px 6px',\r\n                  borderRadius: '3px',\r\n                  fontSize: '10px',\r\n                  fontWeight: 'bold'\r\n                }}>\r\n                  #{index + 1}\r\n                </span>\r\n                <span style={{ fontSize: '12px', textTransform: 'capitalize' }}>\r\n                  {strategy.strategy}\r\n                </span>\r\n              </div>\r\n              <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\r\n                <span style={{ fontSize: '11px', color: 'var(--vscode-descriptionForeground)' }}>\r\n                  {strategy.count} uses\r\n                </span>\r\n                <span style={{\r\n                  fontSize: '11px',\r\n                  color: strategy.successRate >= 0.8 ? '#28a745' : '#ffc107',\r\n                  fontWeight: 'bold'\r\n                }}>\r\n                  {(strategy.successRate * 100).toFixed(1)}%\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// History Tab Component\r\nconst HistoryTab: React.FC<{\r\n  history: HealingRecord[];\r\n  selectedRecord: HealingRecord | null;\r\n  onSelectRecord: (record: HealingRecord | null) => void;\r\n  showDetails: boolean;\r\n  onToggleDetails: () => void;\r\n}> = ({ history, selectedRecord, onSelectRecord, showDetails, onToggleDetails }) => {\r\n  const formatDate = (date: Date) => {\r\n    return new Intl.DateTimeFormat('en-US', {\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    }).format(date);\r\n  };\r\n\r\n  const getStatusIcon = (record: HealingRecord) => {\r\n    if (record.success === null) return '⏳';\r\n    if (record.success) return '✅';\r\n    if (record.rollback) return '🔄';\r\n    return '❌';\r\n  };\r\n\r\n  const getConfidenceColor = (confidence: number) => {\r\n    if (confidence >= 0.8) return '#28a745';\r\n    if (confidence >= 0.6) return '#ffc107';\r\n    return '#dc3545';\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        marginBottom: '15px'\r\n      }}>\r\n        <h4 style={{ margin: 0, fontSize: '14px' }}>Healing History</h4>\r\n        <button\r\n          onClick={onToggleDetails}\r\n          style={{\r\n            padding: '5px 10px',\r\n            border: '1px solid var(--vscode-button-border)',\r\n            background: showDetails ? 'var(--vscode-button-secondaryBackground)' : 'var(--vscode-button-background)',\r\n            color: 'var(--vscode-button-foreground)',\r\n            cursor: 'pointer',\r\n            fontSize: '11px',\r\n            borderRadius: '3px'\r\n          }}\r\n        >\r\n          {showDetails ? 'Hide' : 'Show'} Details\r\n        </button>\r\n      </div>\r\n\r\n      {history.length === 0 ? (\r\n        <div style={{\r\n          textAlign: 'center',\r\n          padding: '40px 20px',\r\n          color: 'var(--vscode-descriptionForeground)'\r\n        }}>\r\n          <div style={{ fontSize: '24px', marginBottom: '10px' }}>📭</div>\r\n          <p style={{ margin: 0, fontSize: '12px' }}>No healing history yet</p>\r\n          <p style={{ margin: '5px 0 0 0', fontSize: '11px' }}>\r\n            Healing attempts will appear here\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div style={{\r\n          background: 'var(--vscode-editor-background)',\r\n          border: '1px solid var(--vscode-panel-border)',\r\n          borderRadius: '4px',\r\n          maxHeight: '400px',\r\n          overflow: 'auto'\r\n        }}>\r\n          {history.map((record) => (\r\n            <div\r\n              key={record.id}\r\n              onClick={() => onSelectRecord(record)}\r\n              style={{\r\n                padding: '12px',\r\n                borderBottom: '1px solid var(--vscode-panel-border)',\r\n                cursor: 'pointer',\r\n                background: selectedRecord?.id === record.id\r\n                  ? 'var(--vscode-list-activeSelectionBackground)'\r\n                  : 'transparent',\r\n                transition: 'background 0.2s'\r\n              }}\r\n            >\r\n              <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'flex-start',\r\n                marginBottom: '8px'\r\n              }}>\r\n                <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                  <span style={{ fontSize: '16px' }}>{getStatusIcon(record)}</span>\r\n                  <div>\r\n                    <div style={{ fontSize: '12px', fontWeight: '500' }}>\r\n                      {record.context.elementType}\r\n                    </div>\r\n                    <div style={{\r\n                      fontSize: '10px',\r\n                      color: 'var(--vscode-descriptionForeground)',\r\n                      marginTop: '2px'\r\n                    }}>\r\n                      {formatDate(record.timestamp)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div style={{\r\n                  fontSize: '11px',\r\n                  color: getConfidenceColor(record.confidence),\r\n                  fontWeight: 'bold',\r\n                  textAlign: 'right'\r\n                }}>\r\n                  {(record.confidence * 100).toFixed(0)}%\r\n                </div>\r\n              </div>\r\n\r\n              {showDetails && (\r\n                <div style={{\r\n                  fontSize: '10px',\r\n                  color: 'var(--vscode-descriptionForeground)',\r\n                  marginTop: '8px',\r\n                  paddingTop: '8px',\r\n                  borderTop: '1px solid var(--vscode-panel-border)'\r\n                }}>\r\n                  <div style={{ marginBottom: '4px' }}>\r\n                    <strong>Original:</strong>\r\n                    <code style={{\r\n                      background: 'var(--vscode-textBlockQuote-background)',\r\n                      padding: '2px 4px',\r\n                      borderRadius: '2px',\r\n                      fontSize: '9px',\r\n                      marginLeft: '4px',\r\n                      wordBreak: 'break-all'\r\n                    }}>\r\n                      {record.originalLocator}\r\n                    </code>\r\n                  </div>\r\n                  <div style={{ marginBottom: '4px' }}>\r\n                    <strong>Healed:</strong>\r\n                    <code style={{\r\n                      background: 'var(--vscode-textBlockQuote-background)',\r\n                      padding: '2px 4px',\r\n                      borderRadius: '2px',\r\n                      fontSize: '9px',\r\n                      marginLeft: '4px',\r\n                      wordBreak: 'break-all'\r\n                    }}>\r\n                      {record.healedLocator}\r\n                    </code>\r\n                  </div>\r\n                  <div style={{ marginBottom: '4px' }}>\r\n                    <strong>Reason:</strong> {record.context.failureReason}\r\n                  </div>\r\n                  {record.rollback && (\r\n                    <div style={{ color: '#dc3545' }}>\r\n                      <strong>Rolled back:</strong> {record.rollback.reason}\r\n                      ({formatDate(record.rollback.timestamp)})\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Config Tab Component\r\nconst ConfigTab: React.FC<{\r\n  config: AutoHealingConfig | null;\r\n  onUpdate: (config: Partial<AutoHealingConfig>) => void;\r\n}> = ({ config, onUpdate }) => {\r\n  if (!config) return <div>Loading configuration...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h4 style={{ margin: '0 0 15px 0', fontSize: '14px' }}>AI Configuration</h4>\r\n\r\n      <div style={{ display: 'flex', flexDirection: 'column', gap: '15px' }}>\r\n        {/* Enable/Disable */}\r\n        <ConfigToggle\r\n          label=\"Enable AI Self-Healing\"\r\n          description=\"Allow AI to automatically heal failed locators\"\r\n          enabled={config.enabled}\r\n          onToggle={(enabled) => onUpdate({ enabled })}\r\n        />\r\n\r\n        {/* Confidence Threshold */}\r\n        <ConfigSlider\r\n          label=\"Confidence Threshold\"\r\n          description=\"Minimum confidence required for auto-healing\"\r\n          value={config.confidenceThreshold}\r\n          min={0.5}\r\n          max={1.0}\r\n          step={0.05}\r\n          onChange={(confidenceThreshold) => onUpdate({ confidenceThreshold })}\r\n          formatValue={(v) => `${(v * 100).toFixed(0)}%`}\r\n        />\r\n\r\n        {/* Max Retries */}\r\n        <ConfigSlider\r\n          label=\"Max Retries\"\r\n          description=\"Maximum number of healing attempts\"\r\n          value={config.maxRetries}\r\n          min={1}\r\n          max={5}\r\n          step={1}\r\n          onChange={(maxRetries) => onUpdate({ maxRetries })}\r\n        />\r\n\r\n        {/* Rollback Threshold */}\r\n        <ConfigSlider\r\n          label=\"Rollback After Failures\"\r\n          description=\"Auto-rollback after N consecutive failures\"\r\n          value={config.rollbackAfterFailures}\r\n          min={2}\r\n          max={10}\r\n          step={1}\r\n          onChange={(rollbackAfterFailures) => onUpdate({ rollbackAfterFailures })}\r\n        />\r\n\r\n        {/* User Approval */}\r\n        <ConfigToggle\r\n          label=\"Require User Approval\"\r\n          description=\"Always ask for user approval before applying healing\"\r\n          enabled={config.requireUserApproval}\r\n          onToggle={(requireUserApproval) => onUpdate({ requireUserApproval })}\r\n        />\r\n\r\n        {/* Auto-approve High Confidence */}\r\n        <ConfigToggle\r\n          label=\"Auto-approve High Confidence\"\r\n          description=\"Automatically apply healing when confidence is very high\"\r\n          enabled={config.autoApproveHighConfidence}\r\n          onToggle={(autoApproveHighConfidence) => onUpdate({ autoApproveHighConfidence })}\r\n          disabled={config.requireUserApproval}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Training Tab Component\r\nconst TrainingTab: React.FC<{\r\n  trainingData: Array<{ features: any; label: number }>;\r\n  isTraining: boolean;\r\n  onTrain: () => void;\r\n}> = ({ trainingData, isTraining, onTrain }) => {\r\n  return (\r\n    <div>\r\n      <h4 style={{ margin: '0 0 15px 0', fontSize: '14px' }}>ML Model Training</h4>\r\n\r\n      <div style={{\r\n        background: 'var(--vscode-editor-background)',\r\n        border: '1px solid var(--vscode-panel-border)',\r\n        borderRadius: '4px',\r\n        padding: '15px',\r\n        marginBottom: '15px'\r\n      }}>\r\n        <h5 style={{ margin: '0 0 10px 0', fontSize: '12px' }}>Model Information</h5>\r\n        <div style={{ fontSize: '11px', color: 'var(--vscode-descriptionForeground)' }}>\r\n          <div style={{ marginBottom: '5px' }}>\r\n            <strong>Model Type:</strong> Simple Neural Network\r\n          </div>\r\n          <div style={{ marginBottom: '5px' }}>\r\n            <strong>Features:</strong> 24 locator characteristics\r\n          </div>\r\n          <div style={{ marginBottom: '5px' }}>\r\n            <strong>Training Samples:</strong> {trainingData.length}\r\n          </div>\r\n          <div>\r\n            <strong>Last Trained:</strong> Never\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{\r\n        background: 'var(--vscode-textBlockQuote-background)',\r\n        border: '1px solid var(--vscode-textBlockQuote-border)',\r\n        borderRadius: '4px',\r\n        padding: '15px',\r\n        marginBottom: '15px'\r\n      }}>\r\n        <h5 style={{ margin: '0 0 10px 0', fontSize: '12px' }}>How It Works</h5>\r\n        <div style={{ fontSize: '11px', lineHeight: '1.4' }}>\r\n          The AI model learns from past healing attempts to predict which locators\r\n          are most likely to succeed. It considers factors like:\r\n        </div>\r\n        <ul style={{\r\n          margin: '10px 0 0 0',\r\n          paddingLeft: '20px',\r\n          fontSize: '11px',\r\n          lineHeight: '1.4'\r\n        }}>\r\n          <li>Element type and attributes</li>\r\n          <li>Text content and structure</li>\r\n          <li>Position in DOM hierarchy</li>\r\n          <li>Visual properties</li>\r\n          <li>Historical success patterns</li>\r\n        </ul>\r\n      </div>\r\n\r\n      <button\r\n        onClick={onTrain}\r\n        disabled={isTraining || trainingData.length < 10}\r\n        style={{\r\n          width: '100%',\r\n          padding: '12px',\r\n          border: 'none',\r\n          borderRadius: '4px',\r\n          background: isTraining || trainingData.length < 10\r\n            ? 'var(--vscode-button-secondaryBackground)'\r\n            : 'var(--vscode-button-background)',\r\n          color: 'var(--vscode-button-foreground)',\r\n          cursor: isTraining || trainingData.length < 10 ? 'not-allowed' : 'pointer',\r\n          fontSize: '12px',\r\n          fontWeight: '500',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          gap: '8px'\r\n        }}\r\n      >\r\n        {isTraining ? (\r\n          <>\r\n            <div className=\"spinner\" style={{ width: '12px', height: '12px' }}></div>\r\n            Training Model...\r\n          </>\r\n        ) : (\r\n          <>\r\n            🧠 Train Model\r\n          </>\r\n        )}\r\n      </button>\r\n\r\n      {trainingData.length < 10 && (\r\n        <div style={{\r\n          fontSize: '10px',\r\n          color: 'var(--vscode-descriptionForeground)',\r\n          textAlign: 'center',\r\n          marginTop: '8px'\r\n        }}>\r\n          Need at least 10 healing attempts to train the model\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Helper Components\r\nconst MetricCard: React.FC<{\r\n  label: string;\r\n  value: string;\r\n  icon: string;\r\n  color?: string;\r\n}> = ({ label, value, icon, color }) => {\r\n  return (\r\n    <div style={{\r\n      background: 'var(--vscode-editor-background)',\r\n      border: '1px solid var(--vscode-panel-border)',\r\n      borderRadius: '4px',\r\n      padding: '12px',\r\n      textAlign: 'center'\r\n    }}>\r\n      <div style={{ fontSize: '20px', marginBottom: '5px' }}>{icon}</div>\r\n      <div style={{\r\n        fontSize: '16px',\r\n        fontWeight: 'bold',\r\n        color: color || 'var(--vscode-foreground)',\r\n        marginBottom: '5px'\r\n      }}>\r\n        {value}\r\n      </div>\r\n      <div style={{\r\n        fontSize: '10px',\r\n        color: 'var(--vscode-descriptionForeground)'\r\n      }}>\r\n        {label}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ConfigToggle: React.FC<{\r\n  label: string;\r\n  description: string;\r\n  enabled: boolean;\r\n  onToggle: (enabled: boolean) => void;\r\n  disabled?: boolean;\r\n}> = ({ label, description, enabled, onToggle, disabled }) => {\r\n  return (\r\n    <div>\r\n      <div style={{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        marginBottom: '5px'\r\n      }}>\r\n        <label style={{\r\n          fontSize: '12px',\r\n          fontWeight: '500',\r\n          color: disabled ? 'var(--vscode-disabledForeground)' : 'var(--vscode-foreground)'\r\n        }}>\r\n          {label}\r\n        </label>\r\n        <button\r\n          onClick={() => onToggle(!enabled)}\r\n          disabled={disabled}\r\n          style={{\r\n            width: '40px',\r\n            height: '20px',\r\n            borderRadius: '10px',\r\n            border: 'none',\r\n            background: enabled\r\n              ? 'var(--vscode-button-background)'\r\n              : 'var(--vscode-button-secondaryBackground)',\r\n            position: 'relative',\r\n            cursor: disabled ? 'not-allowed' : 'pointer',\r\n            transition: 'background 0.2s'\r\n          }}\r\n        >\r\n          <div style={{\r\n            position: 'absolute',\r\n            top: '2px',\r\n            left: enabled ? '20px' : '2px',\r\n            width: '16px',\r\n            height: '16px',\r\n            borderRadius: '50%',\r\n            background: 'var(--vscode-button-foreground)',\r\n            transition: 'left 0.2s'\r\n          }} />\r\n        </button>\r\n      </div>\r\n      <div style={{\r\n        fontSize: '10px',\r\n        color: 'var(--vscode-descriptionForeground)',\r\n        paddingLeft: '0'\r\n      }}>\r\n        {description}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ConfigSlider: React.FC<{\r\n  label: string;\r\n  description: string;\r\n  value: number;\r\n  min: number;\r\n  max: number;\r\n  step: number;\r\n  onChange: (value: number) => void;\r\n  formatValue?: (value: number) => string;\r\n}> = ({ label, description, value, min, max, step, onChange, formatValue }) => {\r\n  return (\r\n    <div>\r\n      <div style={{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        marginBottom: '5px'\r\n      }}>\r\n        <label style={{ fontSize: '12px', fontWeight: '500' }}>\r\n          {label}\r\n        </label>\r\n        <span style={{\r\n          fontSize: '11px',\r\n          color: 'var(--vscode-foreground)',\r\n          fontWeight: 'bold'\r\n        }}>\r\n          {formatValue ? formatValue(value) : value}\r\n        </span>\r\n      </div>\r\n      <input\r\n        type=\"range\"\r\n        min={min}\r\n        max={max}\r\n        step={step}\r\n        value={value}\r\n        onChange={(e) => onChange(parseFloat(e.target.value))}\r\n        style={{\r\n          width: '100%',\r\n          marginBottom: '5px'\r\n        }}\r\n      />\r\n      <div style={{\r\n        fontSize: '10px',\r\n        color: 'var(--vscode-descriptionForeground)'\r\n      }}>\r\n        {description}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/**\r\n * Copyright (c) Rui Figueira.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport interface TestDataFile {\r\n  id: string;\r\n  name: string;\r\n  fileName: string;\r\n  fileType: 'csv' | 'json';\r\n  fileSize: number;\r\n  createdAt: Date;\r\n  rowCount: number;\r\n  columnNames: string[];\r\n}\r\n\r\nexport interface TestDataRow {\r\n  rowNumber: number;\r\n  data: Record<string, any>;\r\n}\r\n\r\nexport interface ParsedRow {\r\n  rowNumber: number;\r\n  data: Record<string, any>;\r\n}\r\n\r\nexport class DDTService {\r\n  private dataFiles: Map<string, TestDataFile> = new Map();\r\n  private dataRows: Map<string, TestDataRow[]> = new Map();\r\n\r\n  /**\r\n   * Parse a CSV string\r\n   */\r\n  private parseCSV(text: string): { data: Array<Record<string, string>>; columns: string[] } {\r\n    const lines = text.split('\\n').filter(line => line.trim() !== '');\r\n    if (lines.length === 0) {\r\n      return { data: [], columns: [] };\r\n    }\r\n\r\n    // Parse header\r\n    const headers = lines[0].split(',').map(header => header.trim().replace(/^\"(.*)\"$/, '$1'));\r\n\r\n    // Parse rows\r\n    const data = [];\r\n    for (let i = 1; i < lines.length; i++) {\r\n      const values = lines[i].split(',').map(value => value.trim().replace(/^\"(.*)\"$/, '$1'));\r\n      const row: Record<string, string> = {};\r\n\r\n      headers.forEach((header, index) => {\r\n        row[header] = values[index] || '';\r\n      });\r\n\r\n      data.push(row);\r\n    }\r\n\r\n    return { data, columns: headers };\r\n  }\r\n\r\n  /**\r\n   * Parse a JSON string\r\n   */\r\n  private parseJSON(text: string): { data: Array<Record<string, any>>; columns: string[] } {\r\n    try {\r\n      const data = JSON.parse(text);\r\n\r\n      if (!Array.isArray(data)) {\r\n        throw new Error('JSON must be an array of objects');\r\n      }\r\n\r\n      if (data.length === 0) {\r\n        return { data: [], columns: [] };\r\n      }\r\n\r\n      // Extract column names from first object\r\n      const columns = Object.keys(data[0]);\r\n\r\n      return { data, columns };\r\n    } catch (error) {\r\n      throw new Error(`JSON parsing error: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Upload and parse a CSV file\r\n   */\r\n  async uploadCSV(fileName: string, fileContent: string): Promise<TestDataFile> {\r\n    try {\r\n      // Parse CSV\r\n      const { data: rows, columns } = this.parseCSV(fileContent);\r\n\r\n      // Create test data file\r\n      const fileId = Math.random().toString(36).substr(2, 9);\r\n      const testDataFile: TestDataFile = {\r\n        id: fileId,\r\n        name: fileName.replace(/\\.csv$/i, ''),\r\n        fileName,\r\n        fileType: 'csv',\r\n        fileSize: fileContent.length,\r\n        createdAt: new Date(),\r\n        rowCount: rows.length,\r\n        columnNames: columns\r\n      };\r\n\r\n      // Store file info\r\n      this.dataFiles.set(fileId, testDataFile);\r\n\r\n      // Create rows\r\n      const rowsToCreate = rows.map((row, index) => ({\r\n        rowNumber: index + 1,\r\n        data: row\r\n      }));\r\n\r\n      // Store rows\r\n      this.dataRows.set(fileId, rowsToCreate);\r\n\r\n      // Save to chrome.storage for persistence\r\n      await chrome.storage.local.set({\r\n        [`ddt_file_${fileId}`]: testDataFile,\r\n        [`ddt_rows_${fileId}`]: rowsToCreate\r\n      });\r\n\r\n      return testDataFile;\r\n    } catch (error) {\r\n      console.error('Error uploading CSV:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Upload and parse a JSON file\r\n   */\r\n  async uploadJSON(fileName: string, fileContent: string): Promise<TestDataFile> {\r\n    try {\r\n      // Parse JSON\r\n      const { data: rows, columns } = this.parseJSON(fileContent);\r\n\r\n      // Create test data file\r\n      const fileId = Math.random().toString(36).substr(2, 9);\r\n      const testDataFile: TestDataFile = {\r\n        id: fileId,\r\n        name: fileName.replace(/\\.json$/i, ''),\r\n        fileName,\r\n        fileType: 'json',\r\n        fileSize: fileContent.length,\r\n        createdAt: new Date(),\r\n        rowCount: rows.length,\r\n        columnNames: columns\r\n      };\r\n\r\n      // Store file info\r\n      this.dataFiles.set(fileId, testDataFile);\r\n\r\n      // Create rows\r\n      const rowsToCreate = rows.map((row, index) => ({\r\n        rowNumber: index + 1,\r\n        data: row\r\n      }));\r\n\r\n      // Store rows\r\n      this.dataRows.set(fileId, rowsToCreate);\r\n\r\n      // Save to chrome.storage for persistence\r\n      await chrome.storage.local.set({\r\n        [`ddt_file_${fileId}`]: testDataFile,\r\n        [`ddt_rows_${fileId}`]: rowsToCreate\r\n      });\r\n\r\n      return testDataFile;\r\n    } catch (error) {\r\n      console.error('Error uploading JSON:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all data files\r\n   */\r\n  async getDataFiles(): Promise<TestDataFile[]> {\r\n    try {\r\n      // Try to load from storage first\r\n      const storageData = await chrome.storage.local.get(null);\r\n      const keys = Object.keys(storageData).filter(key => key.startsWith('ddt_file_'));\r\n      const files: TestDataFile[] = [];\r\n\r\n      for (const key of keys) {\r\n        const result = await chrome.storage.local.get([key]);\r\n        if (result[key]) {\r\n          files.push(result[key]);\r\n        }\r\n      }\r\n\r\n      return files;\r\n    } catch (error) {\r\n      console.error('Error getting data files:', error);\r\n      // Return in-memory files as fallback\r\n      return Array.from(this.dataFiles.values());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get a specific data file with its rows\r\n   */\r\n  async getDataFile(fileId: string): Promise<{ file: TestDataFile; rows: TestDataRow[] } | null> {\r\n    try {\r\n      // Try to load from storage\r\n      const fileResult = await chrome.storage.local.get([`ddt_file_${fileId}`]);\r\n      const rowsResult = await chrome.storage.local.get([`ddt_rows_${fileId}`]);\r\n\r\n      const file = fileResult[`ddt_file_${fileId}`];\r\n      const rows = rowsResult[`ddt_rows_${fileId}`];\r\n\r\n      if (file && rows) {\r\n        return { file, rows };\r\n      }\r\n\r\n      // Fallback to in-memory\r\n      const inMemoryFile = this.dataFiles.get(fileId);\r\n      const inMemoryRows = this.dataRows.get(fileId);\r\n\r\n      if (inMemoryFile && inMemoryRows) {\r\n        return { file: inMemoryFile, rows: inMemoryRows };\r\n      }\r\n\r\n      return null;\r\n    } catch (error) {\r\n      console.error('Error getting data file:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete a data file\r\n   */\r\n  async deleteDataFile(fileId: string): Promise<boolean> {\r\n    try {\r\n      // Remove from storage\r\n      await chrome.storage.local.remove([`ddt_file_${fileId}`, `ddt_rows_${fileId}`]);\r\n\r\n      // Remove from memory\r\n      this.dataFiles.delete(fileId);\r\n      this.dataRows.delete(fileId);\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error deleting data file:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Bind variables to test data\r\n   * Used during test execution to replace ${variable} with actual data\r\n   */\r\n  substituteVariables(template: string, data: Record<string, any>): string {\r\n    let result = template;\r\n\r\n    // Replace ${variableName} with actual values\r\n    Object.keys(data).forEach(key => {\r\n      const regex = new RegExp(`\\\\$\\\\{${key}\\\\}`, 'g');\r\n      result = result.replace(regex, String(data[key] || ''));\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Execute test with data-driven approach\r\n   * Returns all rows for iteration\r\n   */\r\n  async prepareDataDrivenExecution(fileId: string) {\r\n    try {\r\n      const result = await this.getDataFile(fileId);\r\n\r\n      if (!result) {\r\n        throw new Error('Data file not found');\r\n      }\r\n\r\n      const { file, rows } = result;\r\n\r\n      return {\r\n        fileInfo: file,\r\n        iterations: rows.map(r => ({\r\n          iteration: r.rowNumber,\r\n          variables: r.data\r\n        }))\r\n      };\r\n    } catch (error) {\r\n      console.error('Error preparing DDT execution:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const ddtService = new DDTService();\r\n","/**\r\n * Copyright (c) Rui Figueira.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport * as React from 'react';\r\n\r\n// Type definitions for React JSX\r\ninterface ReactElement<P = any> {}\r\ndeclare namespace JSX {\r\n  interface IntrinsicElements {\r\n    [elemName: string]: any;\r\n  }\r\n}\r\nimport { ddtService, TestDataFile } from './ddtService';\r\n\r\ninterface DDTManagerProps {\r\n  onFileSelected?: (fileId: string) => void;\r\n}\r\n\r\nexport const DDTManager: React.FC<DDTManagerProps> = ({ onFileSelected }) => {\r\n  const [files, setFiles] = React.useState<TestDataFile[]>([]);\r\n  const [loading, setLoading] = React.useState<boolean>(false);\r\n  const [selectedFile, setSelectedFile] = React.useState<string>('');\r\n  const fileInputRef = React.useRef<HTMLInputElement>(null);\r\n\r\n  // Load files on component mount\r\n  React.useEffect(() => {\r\n    loadFiles();\r\n  }, []);\r\n\r\n  const loadFiles = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const dataFiles = await ddtService.getDataFiles();\r\n      setFiles(dataFiles);\r\n    } catch (error) {\r\n      console.error('Error loading files:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const content = await file.text();\r\n\r\n      let testDataFile: TestDataFile;\r\n      if (file.name.endsWith('.csv')) {\r\n        testDataFile = await ddtService.uploadCSV(file.name, content);\r\n      } else if (file.name.endsWith('.json')) {\r\n        testDataFile = await ddtService.uploadJSON(file.name, content);\r\n      } else {\r\n        throw new Error('Unsupported file type. Please upload CSV or JSON files.');\r\n      }\r\n\r\n      // Add to files list\r\n      setFiles(prev => [...prev, testDataFile]);\r\n\r\n      // Reset file input\r\n      if (fileInputRef.current) {\r\n        fileInputRef.current.value = '';\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      alert(`Error uploading file: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileDelete = async (fileId: string) => {\r\n    if (!confirm('Are you sure you want to delete this file?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const success = await ddtService.deleteDataFile(fileId);\r\n      if (success) {\r\n        setFiles(prev => prev.filter(f => f.id !== fileId));\r\n        if (selectedFile === fileId) {\r\n          setSelectedFile('');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting file:', error);\r\n      alert(`Error deleting file: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileSelect = (fileId: string) => {\r\n    setSelectedFile(fileId);\r\n    if (onFileSelected) {\r\n      onFileSelected(fileId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ddt-manager\">\r\n      <div className=\"ddt-header\">\r\n        <h3>Data Files</h3>\r\n        <input\r\n          type=\"file\"\r\n          ref={fileInputRef}\r\n          accept=\".csv,.json\"\r\n          onChange={handleFileUpload}\r\n          disabled={loading}\r\n          style={{ display: 'none' }}\r\n        />\r\n        <button\r\n          onClick={() => fileInputRef.current?.click()}\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Uploading...' : 'Upload File'}\r\n        </button>\r\n      </div>\r\n\r\n      {files.length === 0 ? (\r\n        <p>No data files uploaded yet.</p>\r\n      ) : (\r\n        <div className=\"ddt-files\">\r\n          {files.map(file => (\r\n            <div\r\n              key={file.id}\r\n              className={`ddt-file ${selectedFile === file.id ? 'selected' : ''}`}\r\n              onClick={() => handleFileSelect(file.id)}\r\n            >\r\n              <div className=\"file-info\">\r\n                <div className=\"file-name\">{file.name}</div>\r\n                <div className=\"file-meta\">\r\n                  <span className=\"file-type\">{file.fileType.toUpperCase()}</span>\r\n                  <span className=\"row-count\">{file.rowCount} rows</span>\r\n                  <span className=\"column-count\">{file.columnNames.length} columns</span>\r\n                </div>\r\n              </div>\r\n              <button\r\n                className=\"delete-btn\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  handleFileDelete(file.id);\r\n                }}\r\n                disabled={loading}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","/**\r\n * Copyright (c) Rui Figueira.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport interface Breakpoint {\r\n  id: string;\r\n  line: number;\r\n  enabled: boolean;\r\n  condition?: string;\r\n}\r\n\r\nexport interface VariableInfo {\r\n  name: string;\r\n  value: string;\r\n  type: string;\r\n}\r\n\r\nexport interface ExecutionContext {\r\n  variables: VariableInfo[];\r\n  currentLine: number;\r\n  status: 'running' | 'paused' | 'finished';\r\n}\r\n\r\nexport class DebuggerService {\r\n  private breakpoints: Map<string, Breakpoint[]> = new Map();\r\n  private executionContext: ExecutionContext | null = null;\r\n  private isPaused: boolean = false;\r\n  private pauseCallback: (() => void) | null = null;\r\n\r\n  /**\r\n   * Add a breakpoint to a file\r\n   */\r\n  async addBreakpoint(fileId: string, line: number, condition?: string): Promise<Breakpoint> {\r\n    const breakpoint: Breakpoint = {\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      line,\r\n      enabled: true,\r\n      condition\r\n    };\r\n\r\n    const fileBreakpoints = this.breakpoints.get(fileId) || [];\r\n    fileBreakpoints.push(breakpoint);\r\n    this.breakpoints.set(fileId, fileBreakpoints);\r\n\r\n    // Save to storage\r\n    await this.saveBreakpoints(fileId);\r\n\r\n    return breakpoint;\r\n  }\r\n\r\n  /**\r\n   * Remove a breakpoint\r\n   */\r\n  async removeBreakpoint(fileId: string, breakpointId: string): Promise<void> {\r\n    const fileBreakpoints = this.breakpoints.get(fileId) || [];\r\n    const updatedBreakpoints = fileBreakpoints.filter(bp => bp.id !== breakpointId);\r\n    this.breakpoints.set(fileId, updatedBreakpoints);\r\n\r\n    // Save to storage\r\n    await this.saveBreakpoints(fileId);\r\n  }\r\n\r\n  /**\r\n   * Toggle breakpoint enabled state\r\n   */\r\n  async toggleBreakpoint(fileId: string, breakpointId: string): Promise<void> {\r\n    const fileBreakpoints = this.breakpoints.get(fileId) || [];\r\n    const breakpoint = fileBreakpoints.find(bp => bp.id === breakpointId);\r\n\r\n    if (breakpoint) {\r\n      breakpoint.enabled = !breakpoint.enabled;\r\n      this.breakpoints.set(fileId, fileBreakpoints);\r\n\r\n      // Save to storage\r\n      await this.saveBreakpoints(fileId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get breakpoints for a file\r\n   */\r\n  async getBreakpoints(fileId: string): Promise<Breakpoint[]> {\r\n    // Try to load from storage first\r\n    try {\r\n      const result = await chrome.storage.local.get([`breakpoints_${fileId}`]);\r\n      if (result[`breakpoints_${fileId}`]) {\r\n        return result[`breakpoints_${fileId}`];\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading breakpoints:', error);\r\n    }\r\n\r\n    // Fallback to in-memory\r\n    return this.breakpoints.get(fileId) || [];\r\n  }\r\n\r\n  /**\r\n   * Save breakpoints to storage\r\n   */\r\n  private async saveBreakpoints(fileId: string): Promise<void> {\r\n    try {\r\n      const fileBreakpoints = this.breakpoints.get(fileId) || [];\r\n      await chrome.storage.local.set({\r\n        [`breakpoints_${fileId}`]: fileBreakpoints\r\n      });\r\n    } catch (error) {\r\n      console.error('Error saving breakpoints:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if there's a breakpoint at the specified line\r\n   */\r\n  async hasBreakpointAtLine(fileId: string, line: number): Promise<boolean> {\r\n    const breakpoints = await this.getBreakpoints(fileId);\r\n    return breakpoints.some(bp => bp.line === line && bp.enabled);\r\n  }\r\n\r\n  /**\r\n   * Pause execution at a breakpoint\r\n   */\r\n  async pauseAtBreakpoint(fileId: string, line: number): Promise<void> {\r\n    // Get current variables (simplified for this example)\r\n    const variables: VariableInfo[] = [\r\n      { name: 'url', value: 'https://example.com', type: 'string' },\r\n      { name: 'title', value: 'Example Page', type: 'string' },\r\n      { name: 'elements', value: '15', type: 'number' }\r\n    ];\r\n\r\n    this.executionContext = {\r\n      variables,\r\n      currentLine: line,\r\n      status: 'paused'\r\n    };\r\n\r\n    this.isPaused = true;\r\n\r\n    // Notify listeners that execution is paused\r\n    if (this.pauseCallback) {\r\n      this.pauseCallback();\r\n    }\r\n\r\n    // Wait until resumed\r\n    return new Promise<void>(resolve => {\r\n      const checkResume = () => {\r\n        if (!this.isPaused) {\r\n          resolve();\r\n        } else {\r\n          setTimeout(checkResume, 100);\r\n        }\r\n      };\r\n      checkResume();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Resume execution\r\n   */\r\n  resume(): void {\r\n    this.isPaused = false;\r\n    this.executionContext = null;\r\n  }\r\n\r\n  /**\r\n   * Step over to next line\r\n   */\r\n  stepOver(): void {\r\n    // In a real implementation, this would execute the next line\r\n    this.resume();\r\n  }\r\n\r\n  /**\r\n   * Step into function\r\n   */\r\n  stepInto(): void {\r\n    // In a real implementation, this would step into a function call\r\n    this.resume();\r\n  }\r\n\r\n  /**\r\n   * Step out of function\r\n   */\r\n  stepOut(): void {\r\n    // In a real implementation, this would step out of current function\r\n    this.resume();\r\n  }\r\n\r\n  /**\r\n   * Get current execution context\r\n   */\r\n  getExecutionContext(): ExecutionContext | null {\r\n    return this.executionContext;\r\n  }\r\n\r\n  /**\r\n   * Set pause callback\r\n   */\r\n  setPauseCallback(callback: () => void): void {\r\n    this.pauseCallback = callback;\r\n  }\r\n\r\n  /**\r\n   * Evaluate expression in current context\r\n   */\r\n  async evaluateExpression(expression: string): Promise<any> {\r\n    // In a real implementation, this would evaluate the expression\r\n    // in the current execution context\r\n    return `Evaluated: ${expression}`;\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const debuggerService = new DebuggerService();\r\n","/**\r\n * Copyright (c) Rui Figueira.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { debuggerService, ExecutionContext, VariableInfo } from './debuggerService';\r\n\r\ninterface DebuggerPanelProps {\r\n  fileId?: string;\r\n  currentLine?: number;\r\n  onLineClick?: (line: number) => void;\r\n  onClose?: () => void;\r\n}\r\n\r\nexport const DebuggerPanel: React.FC<DebuggerPanelProps> = ({ fileId, currentLine, onLineClick, onClose }) => {\r\n  const [executionContext, setExecutionContext] = React.useState<ExecutionContext | null>(null);\r\n  const [isPaused, setIsPaused] = React.useState<boolean>(false);\r\n  const [expression, setExpression] = React.useState<string>('');\r\n  const [evalResult, setEvalResult] = React.useState<string>('');\r\n\r\n  // Set up pause callback\r\n  React.useEffect(() => {\r\n    debuggerService.setPauseCallback(() => {\r\n      const context = debuggerService.getExecutionContext();\r\n      setExecutionContext(context);\r\n      setIsPaused(context?.status === 'paused');\r\n    });\r\n  }, []);\r\n\r\n  const handleResume = () => {\r\n    debuggerService.resume();\r\n    setExecutionContext(null);\r\n    setIsPaused(false);\r\n  };\r\n\r\n  const handleStepOver = () => {\r\n    debuggerService.stepOver();\r\n    setExecutionContext(null);\r\n    setIsPaused(false);\r\n  };\r\n\r\n  const handleStepInto = () => {\r\n    debuggerService.stepInto();\r\n    setExecutionContext(null);\r\n    setIsPaused(false);\r\n  };\r\n\r\n  const handleStepOut = () => {\r\n    debuggerService.stepOut();\r\n    setExecutionContext(null);\r\n    setIsPaused(false);\r\n  };\r\n\r\n  const handleEvaluate = async () => {\r\n    if (expression.trim()) {\r\n      try {\r\n        const result = await debuggerService.evaluateExpression(expression);\r\n        setEvalResult(result);\r\n      } catch (error) {\r\n        setEvalResult(`Error: ${error.message}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLineClick = (line: number) => {\r\n    if (onLineClick) {\r\n      onLineClick(line);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"debugger-panel\">\r\n      <div className=\"debugger-header\">\r\n        <h3>Debugger</h3>\r\n        {isPaused && executionContext && (\r\n          <div className=\"current-line\">\r\n            Paused at line {executionContext.currentLine}\r\n          </div>\r\n        )}\r\n        {onClose && (\r\n          <button onClick={onClose} style={{ marginLeft: 'auto' }}>Close</button>\r\n        )}\r\n      </div>\r\n\r\n      {isPaused && executionContext ? (\r\n        <div className=\"debugger-content\">\r\n          <div className=\"debugger-controls\">\r\n            <button onClick={handleResume}>Resume (F8)</button>\r\n            <button onClick={handleStepOver}>Step Over (F10)</button>\r\n            <button onClick={handleStepInto}>Step Into (F11)</button>\r\n            <button onClick={handleStepOut}>Step Out (Shift+F11)</button>\r\n          </div>\r\n\r\n          <div className=\"variables-section\">\r\n            <h4>Variables</h4>\r\n            <div className=\"variables-list\">\r\n              {executionContext.variables.map((variable: VariableInfo) => (\r\n                <div key={variable.name} className=\"variable-item\">\r\n                  <span className=\"variable-name\">{variable.name}:</span>\r\n                  <span className=\"variable-value\">{variable.value}</span>\r\n                  <span className=\"variable-type\">({variable.type})</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"eval-section\">\r\n            <h4>Evaluate Expression</h4>\r\n            <div className=\"eval-input\">\r\n              <input\r\n                type=\"text\"\r\n                value={expression}\r\n                onChange={(e) => setExpression(e.target.value)}\r\n                placeholder=\"Enter expression to evaluate\"\r\n                onKeyDown={(e) => {\r\n                  if (e.key === 'Enter') {\r\n                    handleEvaluate();\r\n                  }\r\n                }}\r\n              />\r\n              <button onClick={handleEvaluate}>Evaluate</button>\r\n            </div>\r\n            {evalResult && (\r\n              <div className=\"eval-result\">\r\n                <pre>{evalResult}</pre>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"debugger-info\">\r\n          <p>Execution is running normally.</p>\r\n          <p>Click on line numbers in the editor to add breakpoints.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Export a simple wrapper\r\nexport const DebuggerUI: React.FC<{ onClose?: () => void }> = ({ onClose }) => {\r\n  return <DebuggerPanel onClose={onClose} />;\r\n};\r\n","/**\r\n * Copyright (c) Rui Figueira.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n// Configuration\r\nconst API_BASE_URL = 'http://localhost:3000/api';\r\n\r\nexport interface ApiConfig {\r\n  baseUrl: string;\r\n}\r\n\r\nexport interface AuthTokens {\r\n  accessToken: string;\r\n  refreshToken: string;\r\n}\r\n\r\nexport interface User {\r\n  id: string;\r\n  email: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Script {\r\n  id: string;\r\n  name: string;\r\n  description?: string;\r\n  language: string;\r\n  code: string;\r\n  browserType?: string;\r\n  viewport?: { width: number; height: number };\r\n  testIdAttribute?: string;\r\n  selfHealingEnabled?: boolean;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n  projectId?: string;\r\n  project?: { name: string };\r\n}\r\n\r\nexport interface TestRun {\r\n  id: string;\r\n  scriptId: string;\r\n  status: string;\r\n  duration?: number;\r\n  errorMsg?: string;\r\n  startedAt: Date;\r\n  completedAt?: Date;\r\n  script?: {\r\n    name: string;\r\n  };\r\n  steps?: TestStep[];\r\n}\r\n\r\nexport interface TestStep {\r\n  id: string;\r\n  stepNumber: number;\r\n  action: string;\r\n  selector?: string;\r\n  value?: string;\r\n  status: string;\r\n  duration?: number;\r\n  errorMsg?: string;\r\n  timestamp: Date;\r\n}\r\n\r\nexport class ApiService {\r\n  private config: ApiConfig;\r\n  private tokens: AuthTokens | null = null;\r\n  private messageHandlers: Map<string, (data: any) => void> = new Map();\r\n\r\n  constructor(config?: Partial<ApiConfig>) {\r\n    this.config = {\r\n      baseUrl: config?.baseUrl || API_BASE_URL\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Set authentication tokens\r\n   */\r\n  setTokens(accessToken: string, refreshToken: string): void {\r\n    this.tokens = { accessToken, refreshToken };\r\n\r\n    // Save to storage for persistence\r\n    chrome.storage.local.set({\r\n      auth_tokens: { accessToken, refreshToken }\r\n    }).catch(() => {});\r\n  }\r\n\r\n  /**\r\n   * Load tokens from storage\r\n   */\r\n  async loadTokens(): Promise<void> {\r\n    try {\r\n      const result = await chrome.storage.local.get(['auth_tokens']);\r\n      if (result.auth_tokens && result.auth_tokens.accessToken && result.auth_tokens.refreshToken) {\r\n        this.tokens = result.auth_tokens;\r\n      } else {\r\n        this.tokens = null;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading tokens:', error);\r\n      this.tokens = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear authentication tokens\r\n   */\r\n  clearTokens(): void {\r\n    this.tokens = null;\r\n    chrome.storage.local.remove(['auth_tokens']).catch(() => {});\r\n  }\r\n\r\n  /**\r\n   * Check if user is authenticated\r\n   */\r\n  isAuthenticated(): boolean {\r\n    return this.tokens !== null && !!this.tokens.accessToken;\r\n  }\r\n\r\n  /**\r\n   * Make an API request\r\n   */\r\n  private async request<T>(endpoint: string, options: RequestInit = {}): Promise<T> {\r\n    // Ensure endpoint starts with / if not already\r\n    const normalizedEndpoint = endpoint.startsWith('/') ? endpoint : `/${endpoint}`;\r\n    const url = `${this.config.baseUrl}${normalizedEndpoint}`;\r\n\r\n    // Add authentication header if available\r\n    const headers = new Headers(options.headers || {});\r\n    if (this.tokens && this.tokens.accessToken) {\r\n      headers.set('Authorization', `Bearer ${this.tokens.accessToken}`);\r\n    }\r\n    headers.set('Content-Type', 'application/json');\r\n\r\n    const config: RequestInit = {\r\n      ...options,\r\n      headers\r\n    };\r\n\r\n    console.log('API Request:', { method: options.method || 'GET', url, headers: Object.fromEntries(headers) });\r\n    \r\n    const response = await fetch(url, config);\r\n\r\n    if (!response.ok) {\r\n      if (response.status === 401) {\r\n        // Token might be expired, clear it\r\n        this.clearTokens();\r\n        throw new Error('Unauthorized');\r\n      }\r\n      \r\n      let errorText;\r\n      try {\r\n        errorText = await response.text();\r\n      } catch (textError) {\r\n        errorText = response.statusText;\r\n      }\r\n      \r\n      // Log detailed error for debugging\r\n      console.error('API Request Failed:', {\r\n        url,\r\n        method: options.method || 'GET',\r\n        status: response.status,\r\n        statusText: response.statusText,\r\n        errorText,\r\n        headers: Object.fromEntries(response.headers)\r\n      });\r\n      \r\n      throw new Error(`API request failed: ${errorText}`);\r\n    }\r\n\r\n    return response.json();\r\n  }\r\n\r\n  /**\r\n   * User registration\r\n   */\r\n  async register(email: string, password: string, name: string): Promise<{ user: User; accessToken: string; refreshToken: string }> {\r\n    const response = await this.request<{ user: User; accessToken: string; refreshToken: string }>('/auth/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ email, password, name })\r\n    });\r\n\r\n    if (!response || !response.accessToken || !response.refreshToken) {\r\n      throw new Error('Invalid registration response');\r\n    }\r\n\r\n    this.setTokens(response.accessToken, response.refreshToken);\r\n    return response;\r\n  }\r\n\r\n  /**\r\n   * User login\r\n   */\r\n  async login(email: string, password: string): Promise<{ user: User; accessToken: string; refreshToken: string }> {\r\n    const response = await this.request<{ user: User; accessToken: string; refreshToken: string }>('/auth/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ email, password })\r\n    });\r\n\r\n    if (!response || !response.accessToken || !response.refreshToken) {\r\n      throw new Error('Invalid login response');\r\n    }\r\n\r\n    this.setTokens(response.accessToken, response.refreshToken);\r\n    return response;\r\n  }\r\n\r\n  /**\r\n   * Refresh access token\r\n   */\r\n  async refreshToken(): Promise<AuthTokens> {\r\n    if (!this.tokens || !this.tokens.refreshToken) {\r\n      throw new Error('No refresh token available');\r\n    }\r\n\r\n    const response = await this.request<{ accessToken: string }>('/auth/refresh', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ refreshToken: this.tokens.refreshToken })\r\n    });\r\n\r\n    if (!response || !response.accessToken) {\r\n      throw new Error('Invalid refresh token response');\r\n    }\r\n\r\n    // Keep the same refresh token, only update access token\r\n    this.setTokens(response.accessToken, this.tokens.refreshToken);\r\n    return { accessToken: response.accessToken, refreshToken: this.tokens.refreshToken };\r\n  }\r\n\r\n  /**\r\n   * User logout\r\n   */\r\n  async logout(): Promise<void> {\r\n    if (this.tokens) {\r\n      try {\r\n        await this.request('/auth/logout', {\r\n          method: 'POST',\r\n          body: JSON.stringify({ refreshToken: this.tokens.refreshToken })\r\n        });\r\n      } catch (error) {\r\n        console.error('Error during logout:', error);\r\n      }\r\n    }\r\n\r\n    this.clearTokens();\r\n  }\r\n\r\n  /**\r\n   * Get user profile\r\n   */\r\n  async getProfile(): Promise<User> {\r\n    return this.request<User>('/users/profile');\r\n  }\r\n\r\n  /**\r\n   * Get all scripts\r\n   */\r\n  async getScripts(): Promise<Script[]> {\r\n    const response = await this.request<{ success: boolean; data: Script[] }>('/scripts');\r\n    return response.data || [];\r\n  }\r\n\r\n  /**\r\n   * Get a specific script\r\n   */\r\n  async getScript(id: string): Promise<Script> {\r\n    const response = await this.request<{ success: boolean; data: Script }>(`/scripts/${id}`);\r\n    return response.data;\r\n  }\r\n\r\n  /**\r\n   * Create a new script\r\n   */\r\n  async createScript(name: string, code: string, language: string, description?: string): Promise<Script> {\r\n    const response = await this.request<{ success: boolean; data: Script }>('/scripts', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ name, code, language, description })\r\n    });\r\n    return response.data;\r\n  }\r\n\r\n  /**\r\n   * Update a script\r\n   */\r\n  async updateScript(id: string, name: string, code: string, language: string, description?: string): Promise<Script> {\r\n    const response = await this.request<{ success: boolean; data: Script }>(`/scripts/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify({ name, code, language, description })\r\n    });\r\n    return response.data;\r\n  }\r\n\r\n  /**\r\n   * Delete a script\r\n   */\r\n  async deleteScript(id: string): Promise<void> {\r\n    await this.request(`/scripts/${id}`, {\r\n      method: 'DELETE'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Start a new test run\r\n   */\r\n  async startTestRun(scriptId: string, dataFileId?: string, environment?: string, browser?: string): Promise<TestRun> {\r\n    const response = await this.request<{ success: boolean; data: TestRun }>('/test-runs/start', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ scriptId, dataFileId, environment, browser })\r\n    });\r\n    return response.data;\r\n  }\r\n\r\n  /**\r\n   * Stop a test run\r\n   */\r\n  async stopTestRun(testRunId: string): Promise<TestRun> {\r\n    const response = await this.request<{ success: boolean; data: TestRun }>(`/test-runs/${testRunId}/stop`, {\r\n      method: 'POST'\r\n    });\r\n    return response.data;\r\n  }\r\n\r\n  /**\r\n   * Update test run with status and steps\r\n   */\r\n  async updateTestRun(testRunId: string, data: {\r\n    status?: string;\r\n    errorMsg?: string;\r\n    duration?: number;\r\n    steps?: Array<{ action: string; status: string; duration?: number }>;\r\n  }): Promise<TestRun> {\r\n    const response = await this.request<{ success: boolean; data: TestRun }>(`/test-runs/${testRunId}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(data)\r\n    });\r\n    return response.data;\r\n  }\r\n\r\n  /**\r\n   * Get all test runs\r\n   */\r\n  async getTestRuns(): Promise<TestRun[]> {\r\n    const response = await this.request<{ success: boolean; data: TestRun[] }>('/test-runs');\r\n    return response.data || [];\r\n  }\r\n\r\n  /**\r\n   * Get a specific test run\r\n   */\r\n  async getTestRun(id: string): Promise<TestRun> {\r\n    const response = await this.request<{ success: boolean; data: TestRun }>(`/test-runs/${id}`);\r\n    return response.data;\r\n  }\r\n\r\n  /**\r\n   * Get active test runs\r\n   */\r\n  async getActiveTestRuns(): Promise<TestRun[]> {\r\n    const response = await this.request<{ success: boolean; data: TestRun[] }>('/test-runs/active');\r\n    return response.data || [];\r\n  }\r\n\r\n  /**\r\n   * Connect to WebSocket\r\n   */\r\n  // Deleted:connectWebSocket(): void {\r\n  // Deleted:  if (this.websocket && this.websocket.readyState === WebSocket.OPEN) {\r\n  // Deleted:    return;\r\n  // Deleted:  }\r\n  // Deleted:\r\n  // Deleted:  this.websocket = new WebSocket(this.config.wsUrl);\r\n  // Deleted:\r\n  // Deleted:  this.websocket.onopen = () => {\r\n  // Deleted:    console.log('WebSocket connected');\r\n  // Deleted:    if (this.tokens && this.tokens.accessToken) {\r\n  // Deleted:      this.sendMessage('auth', { token: this.tokens.accessToken });\r\n  // Deleted:    }\r\n  // Deleted:  };\r\n  // Deleted:\r\n  // Deleted:  this.websocket.onmessage = (event) => {\r\n  // Deleted:    try {\r\n  // Deleted:      const message = JSON.parse(event.data);\r\n  // Deleted:      const handler = this.messageHandlers.get(message.type);\r\n  // Deleted:      if (handler) {\r\n  // Deleted:        handler(message.data);\r\n  // Deleted:      }\r\n  // Deleted:    } catch (error) {\r\n  // Deleted:      console.error('Error parsing WebSocket message:', error);\r\n  // Deleted:    }\r\n  // Deleted:  };\r\n  // Deleted:\r\n  // Deleted:  this.websocket.onclose = () => {\r\n  // Deleted:    console.log('WebSocket disconnected');\r\n  // Deleted:  };\r\n  // Deleted:\r\n  // Deleted:  this.websocket.onerror = (error) => {\r\n  // Deleted:    console.error('WebSocket error:', error);\r\n  // Deleted:  };\r\n  // Deleted:}\r\n\r\n  /**\r\n   * Send message through WebSocket\r\n   */\r\n  // Deleted:sendMessage(type: string, data: any): void {\r\n  // Deleted:  if (this.websocket && this.websocket.readyState === WebSocket.OPEN) {\r\n  // Deleted:    this.websocket.send(JSON.stringify({ type, data }));\r\n  // Deleted:  }\r\n  // Deleted:}\r\n\r\n  /**\r\n   * Add message handler (no-op without WebSocket)\r\n   */\r\n  addMessageHandler(type: string, handler: (data: any) => void): void {\r\n    this.messageHandlers.set(type, handler);\r\n  }\r\n\r\n  /**\r\n   * Remove message handler (no-op without WebSocket)\r\n   */\r\n  removeMessageHandler(type: string): void {\r\n    this.messageHandlers.delete(type);\r\n  }\r\n\r\n  /**\r\n   * Disconnect WebSocket (no-op)\r\n   */\r\n  disconnect(): void {\r\n    // no-op: WebSocket removed\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const apiService = new ApiService();\r\n","/**\r\n * Copyright (c) Rui Figueira.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { apiService } from './apiService';\r\nimport { realDataIntegration } from './realDataIntegration';\r\n\r\nexport interface TestRun {\r\n  id: string;\r\n  scriptId: string;\r\n  status: 'pending' | 'running' | 'passed' | 'failed';\r\n  startTime: Date;\r\n  endTime?: Date;\r\n  logs: string[];\r\n}\r\n\r\nexport interface ExecutionProgress {\r\n  status: 'starting' | 'running' | 'completed' | 'failed';\r\n  currentStep?: number;\r\n  totalSteps?: number;\r\n  message?: string;\r\n  error?: string;\r\n}\r\n\r\nexport class TestExecutor {\r\n  private activeRuns: Map<string, TestRun> = new Map();\r\n  private progressCallbacks: Map<string, (progress: ExecutionProgress) => void> = new Map();\r\n  private logCallbacks: Map<string, (log: string) => void> = new Map();\r\n\r\n  constructor() {\r\n    // No WebSocket handlers needed - using REST API polling instead\r\n  }\r\n\r\n  /**\r\n   * Execute a test script\r\n   */\r\n  async executeTest(scriptId: string): Promise<TestRun> {\r\n    // Create a new test run\r\n    const testRun: TestRun = {\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      scriptId,\r\n      status: 'pending',\r\n      startTime: new Date(),\r\n      logs: []\r\n    };\r\n\r\n    this.activeRuns.set(testRun.id, testRun);\r\n\r\n    try {\r\n      // Notify that execution is starting\r\n      this.notifyProgress(testRun.id, {\r\n        status: 'starting',\r\n        message: 'Starting test execution...'\r\n      });\r\n\r\n      // Call backend API to start test run\r\n      const backendTestRun = await apiService.startTestRun(scriptId);\r\n\r\n      // Update test run with backend ID\r\n      testRun.id = backendTestRun.id;\r\n      testRun.status = 'running';\r\n      this.activeRuns.set(testRun.id, testRun);\r\n\r\n      // Dispatch test started event for self-healing\r\n      this.dispatchTestStarted(testRun);\r\n\r\n      // Add initial log\r\n      this.addLog(testRun.id, `Test execution started for script: ${scriptId}`);\r\n\r\n      // Notify running status\r\n      this.notifyProgress(testRun.id, {\r\n        status: 'running',\r\n        message: 'Test is running...'\r\n      });\r\n\r\n      // Poll for test results\r\n      this.pollTestRunStatus(testRun.id);\r\n\r\n      return testRun;\r\n    } catch (error: any) {\r\n      console.error('Error executing test:', error);\r\n\r\n      // Update status to failed\r\n      testRun.status = 'failed';\r\n      testRun.endTime = new Date();\r\n      this.activeRuns.set(testRun.id, testRun);\r\n\r\n      this.notifyProgress(testRun.id, {\r\n        status: 'failed',\r\n        error: error?.message || 'Failed to start test execution'\r\n      });\r\n\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Execute a test with data-driven approach\r\n   */\r\n  async executeDataDrivenTest(scriptId: string, dataFileId: string): Promise<TestRun> {\r\n    // Create a new test run\r\n    const testRun: TestRun = {\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      scriptId,\r\n      status: 'pending',\r\n      startTime: new Date(),\r\n      logs: []\r\n    };\r\n\r\n    this.activeRuns.set(testRun.id, testRun);\r\n\r\n    try {\r\n      // Notify that execution is starting\r\n      this.notifyProgress(testRun.id, {\r\n        status: 'starting',\r\n        message: 'Starting data-driven test execution...'\r\n      });\r\n\r\n      // Call backend API to start test run with data file\r\n      const backendTestRun = await apiService.startTestRun(scriptId, dataFileId);\r\n\r\n      // Update test run with backend ID\r\n      testRun.id = backendTestRun.id;\r\n      testRun.status = 'running';\r\n      this.activeRuns.set(testRun.id, testRun);\r\n\r\n      // Dispatch test started event for self-healing\r\n      this.dispatchTestStarted(testRun);\r\n\r\n      // Add initial log\r\n      this.addLog(testRun.id, `Data-driven test execution started for script: ${scriptId}`);\r\n      this.addLog(testRun.id, `Using data file: ${dataFileId}`);\r\n\r\n      // Notify running status\r\n      this.notifyProgress(testRun.id, {\r\n        status: 'running',\r\n        message: 'Data-driven test is running...'\r\n      });\r\n\r\n      // Poll for test results\r\n      this.pollTestRunStatus(testRun.id);\r\n\r\n      return testRun;\r\n    } catch (error: any) {\r\n      console.error('Error executing data-driven test:', error);\r\n\r\n      // Update status to failed\r\n      testRun.status = 'failed';\r\n      testRun.endTime = new Date();\r\n      this.activeRuns.set(testRun.id, testRun);\r\n\r\n      this.notifyProgress(testRun.id, {\r\n        status: 'failed',\r\n        error: error?.message || 'Failed to start data-driven test execution'\r\n      });\r\n\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get test run status\r\n   */\r\n  getTestRun(testRunId: string): TestRun | undefined {\r\n    return this.activeRuns.get(testRunId);\r\n  }\r\n\r\n  /**\r\n   * Dispatch test started event\r\n   */\r\n  private dispatchTestStarted(testRun: TestRun): void {\r\n    if (typeof window !== 'undefined') {\r\n      window.dispatchEvent(new CustomEvent('testExecutionStarted', {\r\n        detail: { testExecution: testRun }\r\n      }));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispatch test completed event\r\n   */\r\n  private dispatchTestCompleted(testRun: TestRun): void {\r\n    if (typeof window !== 'undefined') {\r\n      window.dispatchEvent(new CustomEvent('testExecutionCompleted', {\r\n        detail: { testExecution: testRun }\r\n      }));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Poll test run status from backend\r\n   */\r\n  private async pollTestRunStatus(testRunId: string): Promise<void> {\r\n    const pollInterval = 2000; // Poll every 2 seconds\r\n    const maxPolls = 150; // Max 5 minutes (150 * 2s)\r\n    let pollCount = 0;\r\n\r\n    const poll = async () => {\r\n      try {\r\n        const testRun = this.activeRuns.get(testRunId);\r\n        if (!testRun) return;\r\n\r\n        // Get test run status from backend\r\n        const backendTestRun = await apiService.getTestRun(testRunId);\r\n\r\n        // Update logs\r\n        if (backendTestRun.errorMsg) {\r\n          this.addLog(testRunId, `Error: ${backendTestRun.errorMsg}`);\r\n        }\r\n\r\n        // Check if test is complete\r\n        if (backendTestRun.status === 'completed' || backendTestRun.status === 'passed') {\r\n          testRun.status = 'passed';\r\n          testRun.endTime = new Date();\r\n          this.activeRuns.set(testRunId, testRun);\r\n\r\n          this.addLog(testRunId, 'Test execution completed successfully');\r\n          this.notifyProgress(testRunId, {\r\n            status: 'completed',\r\n            message: 'Test execution completed successfully'\r\n          });\r\n\r\n          // Dispatch test completed event for self-healing\r\n          this.dispatchTestCompleted(testRun);\r\n          return;\r\n        }\r\n\r\n        if (backendTestRun.status === 'failed' || backendTestRun.status === 'error') {\r\n          testRun.status = 'failed';\r\n          testRun.endTime = new Date();\r\n          this.activeRuns.set(testRunId, testRun);\r\n\r\n          // Capture failure for self-healing\r\n          if (backendTestRun.errorMsg && backendTestRun.errorMsg.includes('locator')) {\r\n            this.dispatchLocatorFailure(testRunId, backendTestRun.errorMsg);\r\n          }\r\n\r\n          this.notifyProgress(testRunId, {\r\n            status: 'failed',\r\n            error: backendTestRun.errorMsg || 'Test execution failed'\r\n          });\r\n\r\n          // Dispatch test completed event for self-healing\r\n          this.dispatchTestCompleted(testRun);\r\n          return;\r\n        }\r\n\r\n        // Continue polling if still running\r\n        if (pollCount < maxPolls && (backendTestRun.status === 'running' || backendTestRun.status === 'queued')) {\r\n          pollCount++;\r\n          setTimeout(poll, pollInterval);\r\n        } else if (pollCount >= maxPolls) {\r\n          // Timeout\r\n          testRun.status = 'failed';\r\n          testRun.endTime = new Date();\r\n          this.activeRuns.set(testRunId, testRun);\r\n\r\n          this.notifyProgress(testRunId, {\r\n            status: 'failed',\r\n            error: 'Test execution timeout'\r\n          });\r\n        }\r\n      } catch (error: any) {\r\n        console.error('Error polling test run status:', error);\r\n        const testRun = this.activeRuns.get(testRunId);\r\n        if (testRun) {\r\n          testRun.status = 'failed';\r\n          testRun.endTime = new Date();\r\n          this.activeRuns.set(testRunId, testRun);\r\n\r\n          this.notifyProgress(testRunId, {\r\n            status: 'failed',\r\n            error: 'Failed to get test status'\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    // Start polling\r\n    setTimeout(poll, pollInterval);\r\n  }\r\n\r\n  /**\r\n   * Add log to test run\r\n   */\r\n  private addLog(testRunId: string, log: string): void {\r\n    const testRun = this.activeRuns.get(testRunId);\r\n    if (testRun) {\r\n      testRun.logs.push(log);\r\n\r\n      // Notify log callback\r\n      const logCallback = this.logCallbacks.get(testRunId);\r\n      if (logCallback) {\r\n        logCallback(log);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cancel a test run\r\n   */\r\n  async cancelTestRun(testRunId: string): Promise<void> {\r\n    const testRun = this.activeRuns.get(testRunId);\r\n    if (!testRun) {\r\n      throw new Error('Test run not found');\r\n    }\r\n\r\n    try {\r\n      // Call backend API to stop test run\r\n      await apiService.stopTestRun(testRunId);\r\n\r\n      // Update status to failed (cancelled)\r\n      testRun.status = 'failed';\r\n      testRun.endTime = new Date();\r\n      this.activeRuns.set(testRunId, testRun);\r\n\r\n      this.addLog(testRunId, 'Test execution cancelled by user');\r\n      this.notifyProgress(testRunId, {\r\n        status: 'failed',\r\n        message: 'Test execution cancelled'\r\n      });\r\n    } catch (error) {\r\n      console.error('Error cancelling test run:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add progress callback\r\n   */\r\n  addProgressCallback(testRunId: string, callback: (progress: ExecutionProgress) => void): void {\r\n    this.progressCallbacks.set(testRunId, callback);\r\n  }\r\n\r\n  /**\r\n   * Remove progress callback\r\n   */\r\n  removeProgressCallback(testRunId: string): void {\r\n    this.progressCallbacks.delete(testRunId);\r\n  }\r\n\r\n  /**\r\n   * Add log callback\r\n   */\r\n  addLogCallback(testRunId: string, callback: (log: string) => void): void {\r\n    this.logCallbacks.set(testRunId, callback);\r\n  }\r\n\r\n  /**\r\n   * Remove log callback\r\n   */\r\n  removeLogCallback(testRunId: string): void {\r\n    this.logCallbacks.delete(testRunId);\r\n  }\r\n\r\n  /**\r\n   * Notify progress callback\r\n   */\r\n  private notifyProgress(testRunId: string, progress: ExecutionProgress): void {\r\n    const callback = this.progressCallbacks.get(testRunId);\r\n    if (callback) {\r\n      callback(progress);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispatch locator failure event for self-healing\r\n   */\r\n  private dispatchLocatorFailure(testRunId: string, errorMsg: string): void {\r\n    if (typeof window === 'undefined') return;\r\n\r\n    // Extract locator from error message if possible\r\n    const locatorMatch = errorMsg.match(/locator[:\\s]+['\"](.*?)['\"]/i) || \r\n                        errorMsg.match(/selector[:\\s]+['\"](.*?)['\"]/i) ||\r\n                        errorMsg.match(/element[:\\s]+['\"](.*?)['\"]/i);\r\n    \r\n    const locator = locatorMatch ? locatorMatch[1] : 'unknown';\r\n\r\n    window.dispatchEvent(new CustomEvent('locatorFailed', {\r\n      detail: {\r\n        testId: testRunId,\r\n        step: 0,\r\n        locator,\r\n        error: errorMsg\r\n      }\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Get execution history\r\n   */\r\n  getExecutionHistory(): TestRun[] {\r\n    return Array.from(this.activeRuns.values());\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const testExecutor = new TestExecutor();\r\n","/**\r\n * Copyright (c) Rui Figueira.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { testExecutor, TestRun, ExecutionProgress } from './testExecutor';\r\nimport { ddtService } from './ddtService';\r\nimport { apiService, Script } from './apiService';\r\nimport { realDataIntegration } from './realDataIntegration';\r\n\r\ninterface TestExecutorPanelProps {\r\n  scriptId?: string;\r\n  onDataDrivenExecution?: (testRunId: string) => void;\r\n  onClose?: () => void;\r\n}\r\n\r\nexport const TestExecutorPanel: React.FC<TestExecutorPanelProps> = ({ scriptId, onDataDrivenExecution, onClose }) => {\r\n  const [testRuns, setTestRuns] = React.useState<TestRun[]>([]);\r\n  const [selectedDataFile, setSelectedDataFile] = React.useState<string>('');\r\n  const [dataFiles, setDataFiles] = React.useState<any[]>([]);\r\n  const [isExecuting, setIsExecuting] = React.useState<boolean>(false);\r\n  const [progress, setProgress] = React.useState<ExecutionProgress | null>(null);\r\n  const [logs, setLogs] = React.useState<string[]>([]);\r\n  const [activeTestRunId, setActiveTestRunId] = React.useState<string | null>(null);\r\n\r\n  // Saved scripts management\r\n  const [savedScripts, setSavedScripts] = React.useState<Script[]>([]);\r\n  const [selectedScript, setSelectedScript] = React.useState<Script | null>(null);\r\n  const [showScriptLibrary, setShowScriptLibrary] = React.useState<boolean>(false);\r\n  const [isLoadingScripts, setIsLoadingScripts] = React.useState<boolean>(false);\r\n  const [scriptError, setScriptError] = React.useState<string>('');\r\n\r\n  const loadSavedScripts = React.useCallback(async () => {\r\n    setIsLoadingScripts(true);\r\n    setScriptError('');\r\n    try {\r\n      console.log('Loading saved scripts from API...');\r\n      // Fetch scripts from API\r\n      const scripts = await apiService.getScripts();\r\n      console.log('Scripts loaded:', scripts.length);\r\n      setSavedScripts(scripts);\r\n      if (scripts.length === 0) {\r\n        setScriptError('No scripts found. Save a script using \"Save DB\" button.');\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error loading scripts:', error);\r\n      setScriptError(error?.message || 'Failed to load saved scripts. Make sure you are logged in.');\r\n    } finally {\r\n      setIsLoadingScripts(false);\r\n    }\r\n  }, []);\r\n\r\n  // Load data files and saved scripts on component mount\r\n  React.useEffect(() => {\r\n    const loadData = async () => {\r\n      await loaddataFiles();\r\n      await loadSavedScripts();\r\n    };\r\n    loadData();\r\n\r\n    // Start listening for self-healing events\r\n    realDataIntegration.startListening();\r\n    console.log('✅ Self-healing integration started');\r\n\r\n    return () => {\r\n      realDataIntegration.stopListening();\r\n      console.log('🛑 Self-healing integration stopped');\r\n    };\r\n  }, [loadSavedScripts]);\r\n\r\n  const loaddataFiles = async () => {\r\n    try {\r\n      const files = await ddtService.getDataFiles();\r\n      setDataFiles(files);\r\n    } catch (error) {\r\n      // Error loading data files\r\n    }\r\n  };\r\n\r\n  const handleScriptSelect = async (script: Script) => {\r\n    setSelectedScript(script);\r\n    setShowScriptLibrary(false);\r\n  };\r\n\r\n  const handleExecuteSavedScript = async () => {\r\n    if (!selectedScript)\r\n      return;\r\n\r\n    if (isExecuting)\r\n      return;\r\n\r\n    setIsExecuting(true);\r\n    setProgress(null);\r\n    setLogs([]);\r\n\r\n    try {\r\n      const testRun = await testExecutor.executeTest(selectedScript.id);\r\n      setActiveTestRunId(testRun.id);\r\n\r\n      // Add progress callback\r\n      testExecutor.addProgressCallback(testRun.id, progress => {\r\n        setProgress(progress);\r\n      });\r\n\r\n      // Add log callback\r\n      testExecutor.addLogCallback(testRun.id, log => {\r\n        setLogs(prev => [...prev, log]);\r\n      });\r\n\r\n      // Add to test runs\r\n      setTestRuns(prev => [testRun, ...prev]);\r\n    } catch (error: any) {\r\n      setProgress({\r\n        status: 'failed',\r\n        error: error?.message || 'Execution failed'\r\n      });\r\n    } finally {\r\n      setIsExecuting(false);\r\n    }\r\n  };\r\n\r\n  const handleExecute = async () => {\r\n    if (isExecuting || !scriptId)\r\n      return;\r\n\r\n    setIsExecuting(true);\r\n    setProgress(null);\r\n    setLogs([]);\r\n\r\n    try {\r\n      const testRun = await testExecutor.executeTest(scriptId);\r\n      setActiveTestRunId(testRun.id);\r\n\r\n      // Add progress callback\r\n      testExecutor.addProgressCallback(testRun.id, progress => {\r\n        setProgress(progress);\r\n      });\r\n\r\n      // Add log callback\r\n      testExecutor.addLogCallback(testRun.id, log => {\r\n        setLogs(prev => [...prev, log]);\r\n      });\r\n\r\n      // Add to test runs\r\n      setTestRuns(prev => [testRun, ...prev]);\r\n    } catch (error: any) {\r\n      setProgress({\r\n        status: 'failed',\r\n        error: error?.message || 'Execution failed'\r\n      });\r\n    } finally {\r\n      setIsExecuting(false);\r\n    }\r\n  };\r\n\r\n  const handleDataDrivenExecute = async () => {\r\n    if (isExecuting || !selectedDataFile || !scriptId)\r\n      return;\r\n\r\n    setIsExecuting(true);\r\n    setProgress(null);\r\n    setLogs([]);\r\n\r\n    try {\r\n      const testRun = await testExecutor.executeDataDrivenTest(scriptId, selectedDataFile);\r\n      setActiveTestRunId(testRun.id);\r\n\r\n      // Add progress callback\r\n      testExecutor.addProgressCallback(testRun.id, progress => {\r\n        setProgress(progress);\r\n      });\r\n\r\n      // Add log callback\r\n      testExecutor.addLogCallback(testRun.id, log => {\r\n        setLogs(prev => [...prev, log]);\r\n      });\r\n\r\n      // Add to test runs\r\n      setTestRuns(prev => [testRun, ...prev]);\r\n\r\n      // Notify parent\r\n      if (onDataDrivenExecution)\r\n        onDataDrivenExecution(testRun.id);\r\n\r\n    } catch (error: any) {\r\n      setProgress({\r\n        status: 'failed',\r\n        error: error?.message || 'Execution failed'\r\n      });\r\n    } finally {\r\n      setIsExecuting(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = async () => {\r\n    if (!activeTestRunId)\r\n      return;\r\n\r\n    try {\r\n      await testExecutor.cancelTestRun(activeTestRunId);\r\n    } catch (error) {\r\n      // Error cancelling test run\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'passed': return 'green';\r\n      case 'failed': return 'red';\r\n      case 'running': return 'blue';\r\n      default: return 'gray';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='test-executor-panel'>\r\n      <div className='executor-header'>\r\n        <h3>Test Execution</h3>\r\n        {onClose && (\r\n          <button onClick={onClose} style={{ marginLeft: 'auto' }}>Close</button>\r\n        )}\r\n      </div>\r\n\r\n      <div className='execution-controls'>\r\n        {/* Saved Scripts Section */}\r\n        <div className='saved-scripts-section'>\r\n          <button\r\n            onClick={() => {\r\n              setShowScriptLibrary(true);\r\n              loadSavedScripts(); // Reload scripts when opening library\r\n            }}\r\n            className='script-library-btn'\r\n            disabled={isExecuting}\r\n          >\r\n            📚 Script Library ({savedScripts.length})\r\n          </button>\r\n\r\n          {selectedScript && (\r\n            <div className='selected-script-info'>\r\n              <span className='script-name'>✅ {selectedScript.name}</span>\r\n              <span className='script-language'>({selectedScript.language})</span>\r\n              <button\r\n                onClick={handleExecuteSavedScript}\r\n                disabled={isExecuting}\r\n                className='execute-btn'\r\n              >\r\n                {isExecuting ? 'Executing...' : '▶️ Run Selected'}\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Script Library Modal */}\r\n        {showScriptLibrary && (\r\n          <div className='script-library-modal'>\r\n            <div className='modal-header'>\r\n              <h4>Saved Scripts</h4>\r\n              <button onClick={() => setShowScriptLibrary(false)}>✕</button>\r\n            </div>\r\n\r\n            {scriptError && (\r\n              <div className='error-message'>{scriptError}</div>\r\n            )}\r\n\r\n            {isLoadingScripts ? (\r\n              <div className='loading'>Loading scripts...</div>\r\n            ) : savedScripts.length === 0 ? (\r\n              <div className='empty-state'>\r\n                <p>No saved scripts found.</p>\r\n                <p>Save your recorded scripts using the API service.</p>\r\n              </div>\r\n            ) : (\r\n              <div className='scripts-list'>\r\n                {savedScripts.map(script => (\r\n                  <div\r\n                    key={script.id}\r\n                    className={`script-item ${selectedScript?.id === script.id ? 'selected' : ''}`}\r\n                    onClick={() => handleScriptSelect(script)}\r\n                  >\r\n                    <div className='script-header'>\r\n                      <span className='script-name'>{script.name}</span>\r\n                      <span className='script-language'>{script.language}</span>\r\n                    </div>\r\n                    {script.description && (\r\n                      <div className='script-description'>{script.description}</div>\r\n                    )}\r\n                    <div className='script-meta'>\r\n                      <span>Created: {new Date(script.createdAt).toLocaleDateString()}</span>\r\n                      {script.project && (\r\n                        <span>Project: {script.project.name}</span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            <div className='modal-footer'>\r\n              <button onClick={loadSavedScripts} disabled={isLoadingScripts}>\r\n                🔄 Refresh\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className='divider'>OR</div>\r\n\r\n        {/* Current Script Execution */}\r\n        <button\r\n          onClick={handleExecute}\r\n          disabled={isExecuting || !scriptId}\r\n          className='execute-btn'\r\n          title='Execute the currently recorded script'\r\n        >\r\n          {isExecuting ? 'Executing...' : '▶️ Execute Current Script'}\r\n        </button>\r\n\r\n        <div className='data-driven-controls'>\r\n          <select\r\n            value={selectedDataFile}\r\n            onChange={e => setSelectedDataFile(e.target.value)}\r\n            disabled={isExecuting}\r\n          >\r\n            <option value=''>Select data file for DDT</option>\r\n            {dataFiles.map(file => (\r\n              <option key={file.id} value={file.id}>\r\n                {file.name} ({file.rowCount} rows)\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button\r\n            onClick={handleDataDrivenExecute}\r\n            disabled={isExecuting || !selectedDataFile}\r\n            className='ddt-execute-btn'\r\n          >\r\n            {isExecuting ? 'Executing...' : 'Execute with Data'}\r\n          </button>\r\n        </div>\r\n\r\n        {activeTestRunId && (\r\n          <button\r\n            onClick={handleCancel}\r\n            disabled={!isExecuting}\r\n            className='cancel-btn'\r\n          >\r\n            Cancel\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {progress && (\r\n        <div className='execution-progress'>\r\n          <div className='progress-status'>\r\n            Status: <span style={{ color: progress.status === 'completed' ? 'green' : progress.status === 'failed' ? 'red' : 'blue' }}>\r\n              {progress.status}\r\n            </span>\r\n          </div>\r\n          {progress.message && (\r\n            <div className='progress-message'>\r\n              {progress.message}\r\n            </div>\r\n          )}\r\n          {progress.error && (\r\n            <div className='progress-error'>\r\n              Error: {progress.error}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {logs.length > 0 && (\r\n        <div className='execution-logs'>\r\n          <h4>Execution Logs</h4>\r\n          <div className='logs-container'>\r\n            {logs.map((log, index) => (\r\n              <div key={index} className='log-entry'>\r\n                {log}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {testRuns.length > 0 && (\r\n        <div className='execution-history'>\r\n          <h4>Execution History</h4>\r\n          <div className='history-list'>\r\n            {testRuns.map(run => (\r\n              <div key={run.id} className='history-item'>\r\n                <div className='run-info'>\r\n                  <span className='run-id'>#{run.id.substring(0, 6)}</span>\r\n                  <span className='run-status' style={{ color: getStatusColor(run.status) }}>\r\n                    {run.status}\r\n                  </span>\r\n                  <span className='run-time'>\r\n                    {run.startTime.toLocaleTimeString()}\r\n                  </span>\r\n                </div>\r\n                {run.logs.length > 0 && (\r\n                  <div className='run-logs-preview'>\r\n                    {run.logs.slice(-2).join('\\n')}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Export a simple wrapper\r\nexport const TestExecutorUI: React.FC<{ onClose?: () => void; script?: string; scriptName?: string }> = ({ onClose, script, scriptName }) => {\r\n  return <TestExecutorPanel scriptId={scriptName || 'current'} onClose={onClose} />;\r\n};\r\n","/**\r\n * Copyright (c) Rui Figueira.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport * as React from 'react';\r\nimport {\r\n  apiTestingService,\r\n  type ApiTestCase,\r\n  type ApiRequest,\r\n  type ApiResponse,\r\n  type ApiAssertion,\r\n  type ApiMock,\r\n  type PerformanceBenchmark,\r\n  type HttpMethod\r\n} from './apiTestingService';\r\n\r\ninterface ApiTestingUIProps {\r\n  onClose: () => void;\r\n}\r\n\r\ntype TabType = 'recorder' | 'tests' | 'mocks' | 'benchmark' | 'contracts';\r\n\r\nexport const ApiTestingUI: React.FC<ApiTestingUIProps> = ({ onClose }) => {\r\n  const [activeTab, setActiveTab] = React.useState<TabType>('recorder');\r\n  const [capturedRequests, setCapturedRequests] = React.useState<Array<{ request: ApiRequest; response?: ApiResponse }>>([]);\r\n  const [testCases, setTestCases] = React.useState<ApiTestCase[]>([]);\r\n  const [selectedRequest, setSelectedRequest] = React.useState<string | null>(null);\r\n  const [selectedTestCase, setSelectedTestCase] = React.useState<ApiTestCase | null>(null);\r\n  const [isRecording, setIsRecording] = React.useState(false);\r\n  const [mocks, setMocks] = React.useState<ApiMock[]>([]);\r\n  const [benchmarks, setBenchmarks] = React.useState<PerformanceBenchmark[]>([]);\r\n  const [showNewTest, setShowNewTest] = React.useState(false);\r\n  const [showNewMock, setShowNewMock] = React.useState(false);\r\n  const [showNewBenchmark, setShowNewBenchmark] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    loadData();\r\n    \r\n    // Auto-refresh while recording to show new captured requests\r\n    const interval = setInterval(() => {\r\n      if (isRecording) {\r\n        loadData();\r\n      }\r\n    }, 1000); // Refresh every second while recording\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [isRecording]);\r\n\r\n  const loadData = () => {\r\n    setCapturedRequests(apiTestingService.getCapturedRequests());\r\n    setTestCases(apiTestingService.getTestCases());\r\n    setMocks(apiTestingService.getMocks());\r\n    setBenchmarks(apiTestingService.getBenchmarks());\r\n  };\r\n\r\n  const handleStartRecording = () => {\r\n    apiTestingService.clearCapturedRequests();\r\n    setCapturedRequests([]);\r\n    setIsRecording(true);\r\n\r\n    // Start intercepting network requests via debugger API\r\n    chrome.runtime.sendMessage({ type: 'startApiRecording' }, (response) => {\r\n      if (chrome.runtime.lastError) {\r\n        console.error('Runtime error:', chrome.runtime.lastError);\r\n        \r\n        const errorMsg = chrome.runtime.lastError.message || '';\r\n        let userMessage = '❌ Failed to start recording: ' + errorMsg;\r\n        \r\n        // Check for specific error types\r\n        if (errorMsg.includes('already attached') || errorMsg.includes('Another debugger')) {\r\n          userMessage = '❌ Another debugger is already attached\\n\\n' +\r\n            'Solutions:\\n' +\r\n            '1. Close Chrome DevTools (F12) on the target tab\\n' +\r\n            '2. Close any other debugging tools\\n' +\r\n            '3. Refresh the page and try again\\n' +\r\n            '4. Restart Chrome if issue persists';\r\n        } else {\r\n          userMessage += '\\n\\nTips:\\n' +\r\n            '- Make sure Playwright is attached to a tab\\n' +\r\n            '- Try refreshing the target page\\n' +\r\n            '- Check browser console for details';\r\n        }\r\n        \r\n        alert(userMessage);\r\n        setIsRecording(false);\r\n      } else if (!response?.success) {\r\n        console.error('Recording failed:', response?.error);\r\n        \r\n        let userMessage = '❌ Failed to start recording';\r\n        \r\n        if (response?.error) {\r\n          userMessage += ': ' + response.error;\r\n          \r\n          // Check for debugger conflict in error message\r\n          if (response.error.includes('already attached') || response.error.includes('Another debugger')) {\r\n            userMessage = '❌ Cannot attach debugger\\n\\n' +\r\n              'Another debugger is already connected to this tab.\\n\\n' +\r\n              'Please:\\n' +\r\n              '✓ Close Chrome DevTools (press F12 to toggle)\\n' +\r\n              '✓ Close any other debugging/inspection tools\\n' +\r\n              '✓ Refresh the page\\n' +\r\n              '✓ Try recording again';\r\n          }\r\n        }\r\n        \r\n        alert(userMessage);\r\n        setIsRecording(false);\r\n      } else {\r\n        console.log('✅ API Recording started successfully');\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleStopRecording = () => {\r\n    chrome.runtime.sendMessage({ type: 'stopApiRecording' }, () => {\r\n      setIsRecording(false);\r\n      loadData();\r\n    });\r\n  };\r\n\r\n  const handleCreateTestFromRequest = (requestId: string) => {\r\n    const name = prompt('Enter test case name:');\r\n    if (!name) return;\r\n\r\n    const testCase = apiTestingService.createTestCaseFromRequest(requestId, name);\r\n    if (testCase) {\r\n      loadData();\r\n      setActiveTab('tests');\r\n      alert('Test case created successfully!');\r\n    } else {\r\n      alert('Failed to create test case. Request not found.');\r\n    }\r\n  };\r\n\r\n  const handleExecuteTest = async (testId: string) => {\r\n    try {\r\n      await apiTestingService.executeTestCase(testId);\r\n      loadData();\r\n      alert('Test executed successfully!');\r\n    } catch (error: any) {\r\n      alert(`Test execution failed: ${error?.message || error}`);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTest = (testId: string) => {\r\n    if (confirm('Are you sure you want to delete this test case?')) {\r\n      apiTestingService.deleteTestCase(testId);\r\n      loadData();\r\n    }\r\n  };\r\n\r\n  const handleToggleMock = (mockId: string) => {\r\n    const mock = mocks.find(m => m.id === mockId);\r\n    if (mock) {\r\n      apiTestingService.updateMock(mockId, { enabled: !mock.enabled });\r\n      loadData();\r\n    }\r\n  };\r\n\r\n  const handleRunBenchmark = async (benchmarkId: string) => {\r\n    try {\r\n      await apiTestingService.runBenchmark(benchmarkId, 10);\r\n      loadData();\r\n    } catch (error) {\r\n      alert(`Benchmark failed: ${error}`);\r\n    }\r\n  };\r\n\r\n  const addDemoData = () => {\r\n    // Add demo captured requests\r\n    const demoRequest: ApiRequest = {\r\n      id: `demo-req-${Date.now()}`,\r\n      method: 'GET',\r\n      url: 'https://jsonplaceholder.typicode.com/posts/1',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      },\r\n      timestamp: Date.now()\r\n    };\r\n\r\n    const demoResponse: ApiResponse = {\r\n      id: `demo-resp-${Date.now()}`,\r\n      requestId: demoRequest.id,\r\n      status: 200,\r\n      statusText: 'OK',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        userId: 1,\r\n        id: 1,\r\n        title: 'Demo Post',\r\n        body: 'This is a demo response'\r\n      }, null, 2),\r\n      responseTime: 125,\r\n      timestamp: Date.now()\r\n    };\r\n\r\n    apiTestingService.captureRequest(demoRequest);\r\n    apiTestingService.captureResponse(demoResponse);\r\n    loadData();\r\n    alert('Demo data added! Switch to Recorder tab to see it.');\r\n  };\r\n\r\n  return (\r\n    <div className=\"api-testing-panel\">\r\n      <div className=\"api-testing-header\">\r\n        <h2>🔌 API Testing Suite</h2>\r\n        <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\r\n          <button className=\"demo-button\" onClick={addDemoData} title=\"Add sample data for testing\">\r\n            + Demo Data\r\n          </button>\r\n          <button className=\"close-button\" onClick={onClose}>✕</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"api-testing-tabs\">\r\n        <button\r\n          className={activeTab === 'recorder' ? 'active' : ''}\r\n          onClick={() => setActiveTab('recorder')}\r\n        >\r\n          📡 Recorder\r\n        </button>\r\n        <button\r\n          className={activeTab === 'tests' ? 'active' : ''}\r\n          onClick={() => setActiveTab('tests')}\r\n        >\r\n          ✅ Tests ({testCases.length})\r\n        </button>\r\n        <button\r\n          className={activeTab === 'mocks' ? 'active' : ''}\r\n          onClick={() => setActiveTab('mocks')}\r\n        >\r\n          🎭 Mocks ({mocks.length})\r\n        </button>\r\n        <button\r\n          className={activeTab === 'benchmark' ? 'active' : ''}\r\n          onClick={() => setActiveTab('benchmark')}\r\n        >\r\n          ⚡ Benchmark\r\n        </button>\r\n        <button\r\n          className={activeTab === 'contracts' ? 'active' : ''}\r\n          onClick={() => setActiveTab('contracts')}\r\n        >\r\n          📋 Contracts\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"api-testing-content\">\r\n        {activeTab === 'recorder' && (\r\n          <RecorderTab\r\n            isRecording={isRecording}\r\n            capturedRequests={capturedRequests}\r\n            selectedRequest={selectedRequest}\r\n            onStartRecording={handleStartRecording}\r\n            onStopRecording={handleStopRecording}\r\n            onSelectRequest={setSelectedRequest}\r\n            onCreateTest={handleCreateTestFromRequest}\r\n          />\r\n        )}\r\n\r\n        {activeTab === 'tests' && (\r\n          <TestsTab\r\n            testCases={testCases}\r\n            selectedTestCase={selectedTestCase}\r\n            onSelectTestCase={setSelectedTestCase}\r\n            onExecuteTest={handleExecuteTest}\r\n            onDeleteTest={handleDeleteTest}\r\n            onNewTest={() => setShowNewTest(true)}\r\n          />\r\n        )}\r\n\r\n        {activeTab === 'mocks' && (\r\n          <MocksTab\r\n            mocks={mocks}\r\n            onToggleMock={handleToggleMock}\r\n            onNewMock={() => setShowNewMock(true)}\r\n          />\r\n        )}\r\n\r\n        {activeTab === 'benchmark' && (\r\n          <BenchmarkTab\r\n            benchmarks={benchmarks}\r\n            onRunBenchmark={handleRunBenchmark}\r\n            onNewBenchmark={() => setShowNewBenchmark(true)}\r\n          />\r\n        )}\r\n\r\n        {activeTab === 'contracts' && (\r\n          <ContractsTab />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Recorder Tab Component\r\nconst RecorderTab: React.FC<{\r\n  isRecording: boolean;\r\n  capturedRequests: Array<{ request: ApiRequest; response?: ApiResponse }>;\r\n  selectedRequest: string | null;\r\n  onStartRecording: () => void;\r\n  onStopRecording: () => void;\r\n  onSelectRequest: (id: string) => void;\r\n  onCreateTest: (id: string) => void;\r\n}> = ({ isRecording, capturedRequests, selectedRequest, onStartRecording, onStopRecording, onSelectRequest, onCreateTest }) => {\r\n  const selected = capturedRequests.find(r => r.request.id === selectedRequest);\r\n\r\n  return (\r\n    <div className=\"recorder-tab\">\r\n      <div className=\"recorder-controls\">\r\n        {!isRecording ? (\r\n          <button className=\"primary-button\" onClick={onStartRecording}>\r\n            ▶️ Start Recording\r\n          </button>\r\n        ) : (\r\n          <button className=\"danger-button\" onClick={onStopRecording}>\r\n            ⏹️ Stop Recording\r\n          </button>\r\n        )}\r\n        <span className=\"recording-status\">\r\n          {isRecording ? '🔴 Recording...' : '⚫ Not Recording'}\r\n        </span>\r\n        {isRecording && (\r\n          <span className=\"recording-hint\" style={{ fontSize: '11px', opacity: 0.7, marginLeft: '10px' }}>\r\n            💡 Browse your app to capture API calls\r\n          </span>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"captured-requests\">\r\n        <h3>Captured Requests ({capturedRequests.length})</h3>\r\n        <div className=\"request-list\">\r\n          {capturedRequests.length === 0 && (\r\n            <div className=\"empty-state\" style={{ padding: '30px 20px' }}>\r\n              {isRecording ? (\r\n                <>\r\n                  <p>🔍 Listening for API requests...</p>\r\n                  <p style={{ fontSize: '12px', opacity: 0.7 }}>Navigate your app to capture network traffic</p>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <p>📡 No requests captured yet</p>\r\n                  <p style={{ fontSize: '12px', opacity: 0.7 }}>Click \"Start Recording\" and browse your app</p>\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n          {capturedRequests.map(({ request, response }) => (\r\n            <div\r\n              key={request.id}\r\n              className={`request-item ${selectedRequest === request.id ? 'selected' : ''}`}\r\n              onClick={() => onSelectRequest(request.id)}\r\n            >\r\n              <div className=\"request-method-badge\" data-method={request.method}>\r\n                {request.method}\r\n              </div>\r\n              <div className=\"request-url\">{request.url}</div>\r\n              {response && (\r\n                <div className={`status-badge status-${Math.floor(response.status / 100)}xx`}>\r\n                  {response.status}\r\n                </div>\r\n              )}\r\n              <button\r\n                className=\"create-test-button\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  onCreateTest(request.id);\r\n                }}\r\n              >\r\n                + Test\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {selected && (\r\n        <div className=\"request-details\">\r\n          <h3>Request Details</h3>\r\n          <div className=\"detail-section\">\r\n            <h4>Request</h4>\r\n            <div><strong>URL:</strong> {selected.request.url}</div>\r\n            <div><strong>Method:</strong> {selected.request.method}</div>\r\n            <div><strong>Headers:</strong></div>\r\n            <pre>{JSON.stringify(selected.request.headers, null, 2)}</pre>\r\n            {selected.request.body && (\r\n              <>\r\n                <div><strong>Body:</strong></div>\r\n                <pre>{selected.request.body}</pre>\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          {selected.response && (\r\n            <div className=\"detail-section\">\r\n              <h4>Response</h4>\r\n              <div><strong>Status:</strong> {selected.response.status} {selected.response.statusText}</div>\r\n              <div><strong>Response Time:</strong> {selected.response.responseTime}ms</div>\r\n              <div><strong>Headers:</strong></div>\r\n              <pre>{JSON.stringify(selected.response.headers, null, 2)}</pre>\r\n              {selected.response.body && (\r\n                <>\r\n                  <div><strong>Body:</strong></div>\r\n                  <pre className=\"response-body\">{selected.response.body}</pre>\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Tests Tab Component\r\nconst TestsTab: React.FC<{\r\n  testCases: ApiTestCase[];\r\n  selectedTestCase: ApiTestCase | null;\r\n  onSelectTestCase: (test: ApiTestCase) => void;\r\n  onExecuteTest: (id: string) => void;\r\n  onDeleteTest: (id: string) => void;\r\n  onNewTest: () => void;\r\n}> = ({ testCases, selectedTestCase, onSelectTestCase, onExecuteTest, onDeleteTest, onNewTest }) => {\r\n  return (\r\n    <div className=\"tests-tab\">\r\n      <div className=\"tests-header\">\r\n        <h3>API Test Cases</h3>\r\n        <button className=\"primary-button\" onClick={onNewTest}>+ New Test</button>\r\n      </div>\r\n\r\n      <div className=\"test-list\">\r\n        {testCases.map(test => {\r\n          const allPassed = test.assertions.every(a => a.passed);\r\n          const hasFailed = test.assertions.some(a => a.passed === false);\r\n\r\n          return (\r\n            <div\r\n              key={test.id}\r\n              className={`test-item ${selectedTestCase?.id === test.id ? 'selected' : ''}`}\r\n              onClick={() => onSelectTestCase(test)}\r\n            >\r\n              <div className=\"test-info\">\r\n                <div className=\"test-name\">{test.name}</div>\r\n                <div className=\"test-meta\">\r\n                  <span className=\"request-method-badge\" data-method={test.request.method}>\r\n                    {test.request.method}\r\n                  </span>\r\n                  <span className=\"test-url\">{test.request.url}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"test-actions\">\r\n                {test.response && (\r\n                  <span className={`test-status ${allPassed ? 'passed' : hasFailed ? 'failed' : 'pending'}`}>\r\n                    {allPassed ? '✅' : hasFailed ? '❌' : '⏳'}\r\n                  </span>\r\n                )}\r\n                <button onClick={(e) => { e.stopPropagation(); onExecuteTest(test.id); }}>\r\n                  ▶️ Run\r\n                </button>\r\n                <button onClick={(e) => { e.stopPropagation(); onDeleteTest(test.id); }}>\r\n                  🗑️\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {selectedTestCase && (\r\n        <div className=\"test-details\">\r\n          <h3>{selectedTestCase.name}</h3>\r\n          {selectedTestCase.description && <p>{selectedTestCase.description}</p>}\r\n\r\n          <div className=\"assertions-section\">\r\n            <h4>Assertions ({selectedTestCase.assertions.length})</h4>\r\n            {selectedTestCase.assertions.map(assertion => (\r\n              <div key={assertion.id} className={`assertion-item ${assertion.passed ? 'passed' : 'failed'}`}>\r\n                <div className=\"assertion-icon\">\r\n                  {assertion.passed ? '✅' : assertion.passed === false ? '❌' : '⏳'}\r\n                </div>\r\n                <div className=\"assertion-details\">\r\n                  <div className=\"assertion-type\">{assertion.type}</div>\r\n                  <div className=\"assertion-message\">{assertion.message}</div>\r\n                  <div className=\"assertion-values\">\r\n                    <span>Expected: {JSON.stringify(assertion.expected)}</span>\r\n                    {assertion.actual !== undefined && (\r\n                      <span>Actual: {JSON.stringify(assertion.actual)}</span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {selectedTestCase.response && (\r\n            <div className=\"response-section\">\r\n              <h4>Last Response</h4>\r\n              <div><strong>Status:</strong> {selectedTestCase.response.status}</div>\r\n              <div><strong>Time:</strong> {selectedTestCase.response.responseTime}ms</div>\r\n              <pre className=\"response-body\">{selectedTestCase.response.body}</pre>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Mocks Tab Component\r\nconst MocksTab: React.FC<{\r\n  mocks: ApiMock[];\r\n  onToggleMock: (id: string) => void;\r\n  onNewMock: () => void;\r\n}> = ({ mocks, onToggleMock, onNewMock }) => {\r\n  return (\r\n    <div className=\"mocks-tab\">\r\n      <div className=\"mocks-header\">\r\n        <h3>API Mocks</h3>\r\n        <button className=\"primary-button\" onClick={onNewMock}>+ New Mock</button>\r\n      </div>\r\n\r\n      <div className=\"mock-list\">\r\n        {mocks.map(mock => (\r\n          <div key={mock.id} className={`mock-item ${mock.enabled ? 'enabled' : 'disabled'}`}>\r\n            <div className=\"mock-info\">\r\n              <div className=\"mock-name\">{mock.name}</div>\r\n              <div className=\"mock-pattern\">\r\n                <span className=\"request-method-badge\" data-method={mock.method}>\r\n                  {mock.method}\r\n                </span>\r\n                <span>{mock.pattern}</span>\r\n              </div>\r\n              <div className=\"mock-response\">\r\n                Status: {mock.response.status}\r\n                {mock.response.delay && ` | Delay: ${mock.response.delay}ms`}\r\n              </div>\r\n            </div>\r\n            <div className=\"mock-actions\">\r\n              <label className=\"toggle-switch\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={mock.enabled}\r\n                  onChange={() => onToggleMock(mock.id)}\r\n                />\r\n                <span className=\"slider\"></span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {mocks.length === 0 && (\r\n        <div className=\"empty-state\">\r\n          <p>No mocks configured</p>\r\n          <p>Create a mock to intercept and stub API responses</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Benchmark Tab Component\r\nconst BenchmarkTab: React.FC<{\r\n  benchmarks: PerformanceBenchmark[];\r\n  onRunBenchmark: (id: string) => void;\r\n  onNewBenchmark: () => void;\r\n}> = ({ benchmarks, onRunBenchmark, onNewBenchmark }) => {\r\n  return (\r\n    <div className=\"benchmark-tab\">\r\n      <div className=\"benchmark-header\">\r\n        <h3>Performance Benchmarks</h3>\r\n        <button className=\"primary-button\" onClick={onNewBenchmark}>+ New Benchmark</button>\r\n      </div>\r\n\r\n      <div className=\"benchmark-list\">\r\n        {benchmarks.map(benchmark => (\r\n          <div key={benchmark.id} className=\"benchmark-item\">\r\n            <div className=\"benchmark-info\">\r\n              <div className=\"benchmark-name\">{benchmark.name}</div>\r\n              <div className=\"benchmark-endpoint\">\r\n                <span className=\"request-method-badge\" data-method={benchmark.method}>\r\n                  {benchmark.method}\r\n                </span>\r\n                <span>{benchmark.endpoint}</span>\r\n              </div>\r\n              <div className=\"benchmark-target\">\r\n                Target: {benchmark.targetResponseTime}ms\r\n              </div>\r\n\r\n              {benchmark.avgResponseTime !== undefined && (\r\n                <div className=\"benchmark-stats\">\r\n                  <div className=\"stat\">\r\n                    <label>Avg:</label>\r\n                    <span className={benchmark.avgResponseTime <= benchmark.targetResponseTime ? 'good' : 'bad'}>\r\n                      {benchmark.avgResponseTime.toFixed(2)}ms\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"stat\">\r\n                    <label>P50:</label>\r\n                    <span>{benchmark.p50}ms</span>\r\n                  </div>\r\n                  <div className=\"stat\">\r\n                    <label>P95:</label>\r\n                    <span>{benchmark.p95}ms</span>\r\n                  </div>\r\n                  <div className=\"stat\">\r\n                    <label>P99:</label>\r\n                    <span>{benchmark.p99}ms</span>\r\n                  </div>\r\n                  <div className=\"stat\">\r\n                    <label>Min:</label>\r\n                    <span>{benchmark.minResponseTime}ms</span>\r\n                  </div>\r\n                  <div className=\"stat\">\r\n                    <label>Max:</label>\r\n                    <span>{benchmark.maxResponseTime}ms</span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"benchmark-actions\">\r\n              <button onClick={() => onRunBenchmark(benchmark.id)}>▶️ Run</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {benchmarks.length === 0 && (\r\n        <div className=\"empty-state\">\r\n          <p>No benchmarks configured</p>\r\n          <p>Create a benchmark to measure API performance</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Contracts Tab Component\r\nconst ContractsTab: React.FC = () => {\r\n  return (\r\n    <div className=\"contracts-tab\">\r\n      <div className=\"contracts-header\">\r\n        <h3>Contract Testing</h3>\r\n        <button className=\"primary-button\">+ New Contract</button>\r\n      </div>\r\n      <div className=\"empty-state\">\r\n        <p>Contract testing coming soon</p>\r\n        <p>Define and validate API contracts between providers and consumers</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/**\r\n * Copyright (c) Rui Figueira.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { Toolbar } from '@web/components/toolbar';\r\nimport { ToolbarButton, ToolbarSeparator } from '@web/components/toolbarButton';\r\nimport { Dialog } from './dialog';\r\nimport { PreferencesForm } from './preferencesForm';\r\nimport type { CallLog, ElementInfo, Mode, Source } from '@recorder/recorderTypes';\r\nimport { Recorder } from '@recorder/recorder';\r\nimport type { CrxSettings } from './settings';\r\nimport { addSettingsChangedListener, defaultSettings, loadSettings, removeSettingsChangedListener } from './settings';\r\nimport ModalContainer, { create as createModal } from 'react-modal-promise';\r\nimport { SaveCodeForm } from './saveCodeForm';\r\nimport { SelfHealingUI } from './selfHealingUI';\r\nimport { AISelfHealingUI } from './aiSelfHealingUI';\r\nimport { DDTManager } from './ddtManager';\r\nimport { DebuggerUI } from './debuggerUI';\r\nimport { TestExecutorUI } from './testExecutorUI';\r\nimport { ApiTestingUI } from './apiTestingUI';\r\nimport { apiService } from './apiService';\r\nimport './crxRecorder.css';\r\nimport './form.css';\r\nimport './apiTesting.css';\r\n\r\nfunction setElementPicked(elementInfo: ElementInfo, userGesture?: boolean) {\r\n  window.playwrightElementPicked(elementInfo, userGesture);\r\n}\r\n\r\nfunction setRunningFileId(fileId: string) {\r\n  window.playwrightSetRunningFile(fileId);\r\n}\r\n\r\nfunction download(filename: string, text: string) {\r\n  const blob = new Blob([text], { type: 'text/plain' });\r\n  const url = URL.createObjectURL(blob);\r\n  try {\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = filename;\r\n    a.click();\r\n  } finally {\r\n    URL.revokeObjectURL(url);\r\n  }\r\n}\r\n\r\nfunction generateDatetimeSuffix() {\r\n  return new Date().toISOString()\r\n      .replace(/[-:]/g, '')\r\n      .replace(/\\..+/, '')\r\n      .replace('T', '-');\r\n}\r\n\r\nconst codegenFilenames: Record<string, string> = {\r\n  'javascript': 'example.js',\r\n  'playwright-test': 'example.spec.ts',\r\n  'java-junit': 'TestExample.java',\r\n  'java': 'Example.java',\r\n  'python-pytest': 'test_example.py',\r\n  'python': 'example.py',\r\n  'python-async': 'example.py',\r\n  'csharp-mstest': 'Tests.cs',\r\n  'csharp-nunit': 'Tests.cs',\r\n  'csharp': 'Example.cs',\r\n};\r\n\r\nexport const CrxRecorder: React.FC = ({\r\n}) => {\r\n  const [settings, setSettings] = React.useState<CrxSettings>(defaultSettings);\r\n  const [sources, setSources] = React.useState<Source[]>([]);\r\n  const [paused, setPaused] = React.useState(false);\r\n  const [log, setLog] = React.useState(new Map<string, CallLog>());\r\n  const [mode, setMode] = React.useState<Mode>('none');\r\n  const [selectedFileId, setSelectedFileId] = React.useState<string>(defaultSettings.targetLanguage);\r\n\r\n  // Enhanced features state\r\n  const [showSelfHealing, setShowSelfHealing] = React.useState(false);\r\n  const [showAISelfHealing, setShowAISelfHealing] = React.useState(false);\r\n  const [showDDT, setShowDDT] = React.useState(false);\r\n  const [showDebugger, setShowDebugger] = React.useState(false);\r\n  const [showTestExecutor, setShowTestExecutor] = React.useState(false);\r\n  const [showApiTesting, setShowApiTesting] = React.useState(false);\r\n\r\n  // Save to database state\r\n  const [showSaveModal, setShowSaveModal] = React.useState(false);\r\n  const [scriptName, setScriptName] = React.useState('');\r\n  const [scriptDescription, setScriptDescription] = React.useState('');\r\n  const [isSaving, setIsSaving] = React.useState(false);\r\n  const [saveError, setSaveError] = React.useState('');\r\n  const [saveSuccess, setSaveSuccess] = React.useState(false);\r\n\r\n  // Authentication state\r\n  const [isAuthenticated, setIsAuthenticated] = React.useState(false);\r\n  const [isCheckingAuth, setIsCheckingAuth] = React.useState(true);\r\n  const [showLoginForm, setShowLoginForm] = React.useState(false);\r\n  const [loginEmail, setLoginEmail] = React.useState('');\r\n  const [loginPassword, setLoginPassword] = React.useState('');\r\n  const [isLoggingIn, setIsLoggingIn] = React.useState(false);\r\n  const [loginError, setLoginError] = React.useState('');\r\n  const [userEmail, setUserEmail] = React.useState('');\r\n  // Sign up state\r\n  const [showRegisterForm, setShowRegisterForm] = React.useState(false);\r\n  const [registerEmail, setRegisterEmail] = React.useState('');\r\n  const [registerPassword, setRegisterPassword] = React.useState('');\r\n  const [registerName, setRegisterName] = React.useState('');\r\n  const [isRegistering, setIsRegistering] = React.useState(false);\r\n  const [registerError, setRegisterError] = React.useState('');\r\n  React.useEffect(() => {\r\n    const checkAuthentication = async () => {\r\n      try {\r\n        // Load tokens from storage\r\n        await apiService.loadTokens();\r\n\r\n        // Try to get profile to verify token is valid\r\n        const profile = await apiService.getProfile();\r\n        setIsAuthenticated(true);\r\n        setUserEmail(profile.email);\r\n      } catch (error) {\r\n        // Not authenticated\r\n        setIsAuthenticated(false);\r\n      } finally {\r\n        setIsCheckingAuth(false);\r\n      }\r\n    };\r\n\r\n    checkAuthentication();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const port = chrome.runtime.connect({ name: 'recorder' });\r\n    const onMessage = (msg: any) => {\r\n      if (!('type' in msg) || msg.type !== 'recorder')\r\n        return;\r\n\r\n      switch (msg.method) {\r\n        case 'setPaused': setPaused(msg.paused); break;\r\n        case 'setMode': setMode(msg.mode); break;\r\n        case 'setSources': setSources(msg.sources); break;\r\n        case 'resetCallLogs': setLog(new Map()); break;\r\n        case 'updateCallLogs': setLog(log => {\r\n          const newLog = new Map<string, CallLog>(log);\r\n          for (const callLog of msg.callLogs) {\r\n            callLog.reveal = !log.has(callLog.id);\r\n            newLog.set(callLog.id, callLog);\r\n          }\r\n          return newLog;\r\n        }); break;\r\n        case 'setRunningFile': setRunningFileId(msg.file); break;\r\n        case 'elementPicked': setElementPicked(msg.elementInfo, msg.userGesture); break;\r\n      }\r\n    };\r\n    port.onMessage.addListener(onMessage);\r\n\r\n    window.dispatch = async (data: any) => {\r\n      port.postMessage({ type: 'recorderEvent', ...data });\r\n      if (data.event === 'fileChanged')\r\n        setSelectedFileId(data.params.file);\r\n    };\r\n    loadSettings().then(settings => {\r\n      setSettings(settings);\r\n      setSelectedFileId(settings.targetLanguage);\r\n    }).catch(() => {});\r\n\r\n    addSettingsChangedListener(setSettings);\r\n\r\n    return () => {\r\n      removeSettingsChangedListener(setSettings);\r\n      port.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const source = React.useMemo(() => sources.find(s => s.id === selectedFileId), [sources, selectedFileId]);\r\n\r\n  const requestStorageState = React.useCallback(() => {\r\n    if (!settings.experimental)\r\n      return;\r\n\r\n    chrome.runtime.sendMessage({ event: 'storageStateRequested' }).then(storageState => {\r\n      const fileSuffix = generateDatetimeSuffix();\r\n      download(`storageState-${fileSuffix}.json`, JSON.stringify(storageState, null, 2));\r\n    });\r\n  }, [settings]);\r\n\r\n  const showPreferences = React.useCallback(() => {\r\n    const modal = createModal(({ isOpen, onResolve }) =>\r\n      <Dialog title='Preferences' isOpen={isOpen} onClose={onResolve}>\r\n        <PreferencesForm />\r\n      </Dialog>\r\n    );\r\n    modal().catch(() => {});\r\n  }, []);\r\n\r\n  const saveCode = React.useCallback(() => {\r\n    if (!settings.experimental)\r\n      return;\r\n\r\n    const modal = createModal(({ isOpen, onResolve, onReject }) => {\r\n      return <Dialog title='Save code' isOpen={isOpen} onClose={onReject}>\r\n        <SaveCodeForm onSubmit={onResolve} suggestedFilename={codegenFilenames[selectedFileId]} />\r\n      </Dialog>;\r\n    });\r\n    modal()\r\n        .then(({ filename }) => {\r\n          const code = source?.text;\r\n          if (!code)\r\n            return;\r\n\r\n          download(filename, code);\r\n        })\r\n        .catch(() => {});\r\n  }, [settings, source, selectedFileId]);\r\n\r\n  const saveToDatabase = React.useCallback(async () => {\r\n    if (!source?.text) {\r\n      setSaveError('No code to save');\r\n      return;\r\n    }\r\n\r\n    setShowSaveModal(true);\r\n    setSaveError('');\r\n    setSaveSuccess(false);\r\n  }, [source]);\r\n\r\n  const handleSaveToDatabase = React.useCallback(async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!scriptName.trim()) {\r\n      setSaveError('Script name is required');\r\n      return;\r\n    }\r\n\r\n    if (!source?.text) {\r\n      setSaveError('No code to save');\r\n      return;\r\n    }\r\n\r\n    setIsSaving(true);\r\n    setSaveError('');\r\n\r\n    try {\r\n      await apiService.createScript(\r\n        scriptName.trim(),\r\n        source.text,\r\n        selectedFileId,\r\n        scriptDescription.trim() || undefined\r\n      );\r\n\r\n      setSaveSuccess(true);\r\n      setTimeout(() => {\r\n        setShowSaveModal(false);\r\n        setScriptName('');\r\n        setScriptDescription('');\r\n        setSaveSuccess(false);\r\n      }, 1500);\r\n    } catch (error: any) {\r\n      setSaveError(error?.message || 'Failed to save script');\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  }, [scriptName, scriptDescription, source, selectedFileId]);\r\n\r\n  const handleLogin = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsLoggingIn(true);\r\n    setLoginError('');\r\n\r\n    try {\r\n      const response = await apiService.login(loginEmail, loginPassword);\r\n      setIsAuthenticated(true);\r\n      setUserEmail(response.user.email);\r\n      setShowLoginForm(false);\r\n      setLoginEmail('');\r\n      setLoginPassword('');\r\n    } catch (error: any) {\r\n      setLoginError(error?.message || 'Login failed. Please check your credentials.');\r\n    } finally {\r\n      setIsLoggingIn(false);\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsRegistering(true);\r\n    setRegisterError('');\r\n\r\n    try {\r\n      const result = await apiService.register(registerEmail, registerPassword, registerName);\r\n      setIsAuthenticated(true);\r\n      setUserEmail(result.user.email);\r\n      setShowRegisterForm(false);\r\n      setRegisterEmail('');\r\n      setRegisterPassword('');\r\n      setRegisterName('');\r\n    } catch (error: any) {\r\n      setRegisterError(error?.message || 'Sign up failed. Please check your details.');\r\n    } finally {\r\n      setIsRegistering(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await apiService.logout();\r\n      setIsAuthenticated(false);\r\n      setUserEmail('');\r\n    } catch (error) {\r\n      // Logout failed, clear tokens anyway\r\n      apiService.clearTokens();\r\n      setIsAuthenticated(false);\r\n      setUserEmail('');\r\n    }\r\n  };\r\n\r\n  const toggleSelfHealing = React.useCallback(() => {\r\n    setShowSelfHealing(prev => !prev);\r\n  }, []);\r\n\r\n  const toggleAISelfHealing = React.useCallback(() => {\r\n    setShowAISelfHealing(prev => !prev);\r\n  }, []);\r\n\r\n  const toggleDDT = React.useCallback(() => {\r\n    setShowDDT(prev => !prev);\r\n  }, []);\r\n\r\n  const toggleDebugger = React.useCallback(() => {\r\n    setShowDebugger(prev => !prev);\r\n  }, []);\r\n\r\n  const toggleTestExecutor = React.useCallback(() => {\r\n    setShowTestExecutor(prev => !prev);\r\n  }, []);\r\n\r\n  const toggleApiTesting = React.useCallback(() => {\r\n    setShowApiTesting(prev => !prev);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (!settings.experimental)\r\n      return;\r\n\r\n    const keydownHandler = (e: KeyboardEvent) => {\r\n      if (e.ctrlKey && e.key === 's') {\r\n        e.preventDefault();\r\n        saveCode();\r\n      }\r\n    };\r\n    window.addEventListener('keydown', keydownHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', keydownHandler);\r\n    };\r\n  }, [selectedFileId, settings, saveCode]);\r\n\r\n  const dispatchEditedCode = React.useCallback((code: string) => {\r\n    window.dispatch({ event: 'codeChanged', params: { code } });\r\n  }, []);\r\n\r\n  const dispatchCursorActivity = React.useCallback((position: { line: number }) => {\r\n    window.dispatch({ event: 'cursorActivity', params: { position } });\r\n  }, []);\r\n\r\n  // Show loading state while checking authentication\r\n  if (isCheckingAuth) {\r\n    return (\r\n      <div className=\"auth-loading\">\r\n        <div className=\"auth-loading-content\">\r\n          <div className=\"spinner\"></div>\r\n          <p>Loading...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show login or signup form if not authenticated\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <div className=\"auth-container\">\r\n        <div className=\"auth-box\">\r\n          <div className=\"auth-header\">\r\n            <h2>Playwright CRX</h2>\r\n            <p>{showRegisterForm ? 'Create an account to continue' : 'Please login to continue'}</p>\r\n          </div>\r\n\r\n          {showRegisterForm ? (\r\n            <form onSubmit={handleRegister} className=\"auth-form\">\r\n              {registerError && (\r\n                <div className=\"auth-error\">\r\n                  {registerError}\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"auth-field\">\r\n                <label>Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={registerName}\r\n                  onChange={e => setRegisterName(e.target.value)}\r\n                  placeholder=\"Your name\"\r\n                  required\r\n                  disabled={isRegistering}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"auth-field\">\r\n                <label>Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  value={registerEmail}\r\n                  onChange={e => setRegisterEmail(e.target.value)}\r\n                  placeholder=\"you@example.com\"\r\n                  required\r\n                  disabled={isRegistering}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"auth-field\">\r\n                <label>Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  value={registerPassword}\r\n                  onChange={e => setRegisterPassword(e.target.value)}\r\n                  placeholder=\"Enter password\"\r\n                  required\r\n                  disabled={isRegistering}\r\n                />\r\n              </div>\r\n\r\n              <button type=\"submit\" className=\"auth-button\" disabled={isRegistering}>\r\n                {isRegistering ? 'Signing up...' : 'Sign Up'}\r\n              </button>\r\n\r\n              <div className=\"auth-hint\">\r\n                <a href=\"#\" onClick={(e) => { e.preventDefault(); setShowRegisterForm(false); }}>Already have an account? Log in</a>\r\n              </div>\r\n            </form>\r\n          ) : (\r\n            <form onSubmit={handleLogin} className=\"auth-form\">\r\n              {loginError && (\r\n                <div className=\"auth-error\">\r\n                  {loginError}\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"auth-field\">\r\n                <label>Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  value={loginEmail}\r\n                  onChange={e => setLoginEmail(e.target.value)}\r\n                  placeholder=\"demo@example.com\"\r\n                  required\r\n                  disabled={isLoggingIn}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"auth-field\">\r\n                <label>Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  value={loginPassword}\r\n                  onChange={e => setLoginPassword(e.target.value)}\r\n                  placeholder=\"Enter password\"\r\n                  required\r\n                  disabled={isLoggingIn}\r\n                />\r\n              </div>\r\n\r\n              <button type=\"submit\" className=\"auth-button\" disabled={isLoggingIn}>\r\n                {isLoggingIn ? 'Logging in...' : 'Login'}\r\n              </button>\r\n\r\n              <div className=\"auth-hint\">\r\n                <p>Demo credentials:</p>\r\n                <p className=\"auth-demo\">demo@example.com / demo123</p>\r\n                <a href=\"#\" onClick={(e) => { e.preventDefault(); setShowRegisterForm(true); }}>Create account</a>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (<>\r\n    <ModalContainer />\r\n\r\n    {/* Save to Database Modal */}\r\n    {showSaveModal && (\r\n      <div className=\"auth-container\" style={{ zIndex: 9999 }}>\r\n        <div className=\"auth-box\" style={{ maxWidth: '500px' }}>\r\n          <div className=\"auth-header\">\r\n            <h2>Save Script to Database</h2>\r\n            <button\r\n              onClick={() => setShowSaveModal(false)}\r\n              style={{ position: 'absolute', right: '20px', top: '20px', background: 'none', border: 'none', fontSize: '24px', cursor: 'pointer' }}\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n\r\n          <form onSubmit={handleSaveToDatabase} className=\"auth-form\">\r\n            {saveError && (\r\n              <div className=\"auth-error\">\r\n                {saveError}\r\n              </div>\r\n            )}\r\n\r\n            {saveSuccess && (\r\n              <div className=\"auth-success\" style={{ background: '#d4edda', color: '#155724', padding: '12px', borderRadius: '4px', marginBottom: '15px' }}>\r\n                ✓ Script saved successfully!\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"auth-field\">\r\n              <label>Script Name *</label>\r\n              <input\r\n                type=\"text\"\r\n                value={scriptName}\r\n                onChange={e => setScriptName(e.target.value)}\r\n                placeholder=\"My Test Script\"\r\n                required\r\n                disabled={isSaving || saveSuccess}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"auth-field\">\r\n              <label>Description (optional)</label>\r\n              <textarea\r\n                value={scriptDescription}\r\n                onChange={e => setScriptDescription(e.target.value)}\r\n                placeholder=\"Describe what this script does...\"\r\n                rows={3}\r\n                disabled={isSaving || saveSuccess}\r\n                style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"auth-field\">\r\n              <label>Language</label>\r\n              <input\r\n                type=\"text\"\r\n                value={selectedFileId}\r\n                disabled\r\n                style={{ background: '#f0f0f0' }}\r\n              />\r\n            </div>\r\n\r\n            <div style={{ display: 'flex', gap: '10px' }}>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"auth-button\"\r\n                disabled={isSaving || saveSuccess}\r\n                style={{ flex: 1 }}\r\n              >\r\n                {isSaving ? 'Saving...' : saveSuccess ? 'Saved!' : 'Save to Database'}\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setShowSaveModal(false)}\r\n                disabled={isSaving}\r\n                style={{ flex: 1, background: '#6c757d' }}\r\n                className=\"auth-button\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )}\r\n\r\n    <div className='recorder'>\r\n      {settings.experimental && <>\r\n        <Toolbar>\r\n          <ToolbarButton icon='save' title='Save to File' disabled={false} onClick={saveCode}>Save File</ToolbarButton>\r\n          <ToolbarButton icon='cloud-upload' title='Save to Database' disabled={false} onClick={saveToDatabase}>Save DB</ToolbarButton>\r\n          <ToolbarSeparator />\r\n          <ToolbarButton icon='debug-console' title='Test Executor' disabled={false} onClick={toggleTestExecutor}>Execute</ToolbarButton>\r\n          <ToolbarButton icon='debug-alt' title='Debugger' disabled={false} onClick={toggleDebugger}>Debug</ToolbarButton>\r\n          <ToolbarButton icon='plug' title='API Testing' disabled={false} onClick={toggleApiTesting}>API</ToolbarButton>\r\n          <ToolbarButton icon='sparkle' title='Self-Healing' disabled={false} onClick={toggleSelfHealing}>Heal</ToolbarButton>\r\n          <ToolbarButton icon='brain' title='AI Self-Healing' disabled={false} onClick={toggleAISelfHealing}>AI</ToolbarButton>\r\n          <ToolbarButton icon='database' title='Data-Driven Testing' disabled={false} onClick={toggleDDT}>Data</ToolbarButton>\r\n          <div style={{ flex: 'auto' }}></div>\r\n          <div className='dropdown'>\r\n            <ToolbarButton icon='tools' title='Tools' disabled={false} onClick={() => {}}></ToolbarButton>\r\n            <div className='dropdown-content right-align'>\r\n              <a href='#' onClick={requestStorageState}>Download storage state</a>\r\n            </div>\r\n          </div>\r\n          <ToolbarSeparator />\r\n          <ToolbarButton icon='settings-gear' title='Preferences' onClick={showPreferences}></ToolbarButton>\r\n        </Toolbar>\r\n      </>}\r\n      <Recorder sources={sources} paused={paused} log={log} mode={mode} onEditedCode={dispatchEditedCode} onCursorActivity={dispatchCursorActivity} />\r\n\r\n      {/* Enhanced Features Panels */}\r\n      {showSelfHealing && (\r\n        <div style={{ position: 'absolute', top: 0, right: 0, width: '400px', height: '100%', background: 'var(--vscode-sideBar-background)', borderLeft: '1px solid var(--vscode-panel-border)', zIndex: 1000, overflow: 'auto' }}>\r\n          <SelfHealingUI onClose={toggleSelfHealing} />\r\n        </div>\r\n      )}\r\n\r\n      {showAISelfHealing && (\r\n        <div style={{ position: 'absolute', top: 0, right: 0, width: '550px', height: '100%', background: 'var(--vscode-sideBar-background)', borderLeft: '1px solid var(--vscode-panel-border)', zIndex: 1000, overflow: 'auto' }}>\r\n          <AISelfHealingUI onClose={toggleAISelfHealing} />\r\n        </div>\r\n      )}\r\n\r\n      {showDDT && (\r\n        <div style={{ position: 'absolute', top: 0, right: 0, width: '500px', height: '100%', background: 'var(--vscode-sideBar-background)', borderLeft: '1px solid var(--vscode-panel-border)', zIndex: 1000, overflow: 'auto' }}>\r\n          <DDTManager onFileSelected={(fileId) => console.log('Selected file:', fileId)} />\r\n          <button onClick={toggleDDT} style={{ position: 'absolute', top: '10px', right: '10px' }}>Close</button>\r\n        </div>\r\n      )}\r\n\r\n      {showDebugger && (\r\n        <div style={{ position: 'absolute', bottom: 0, left: 0, right: 0, height: '300px', background: 'var(--vscode-sideBar-background)', borderTop: '1px solid var(--vscode-panel-border)', zIndex: 1000, overflow: 'auto' }}>\r\n          <DebuggerUI onClose={toggleDebugger} />\r\n        </div>\r\n      )}\r\n\r\n      {showTestExecutor && (\r\n        <div style={{ position: 'absolute', top: 0, right: 0, width: '450px', height: '100%', background: 'var(--vscode-sideBar-background)', borderLeft: '1px solid var(--vscode-panel-border)', zIndex: 1000, overflow: 'auto' }}>\r\n          <TestExecutorUI onClose={toggleTestExecutor} script={source?.text || ''} scriptName={selectedFileId} />\r\n        </div>\r\n      )}\r\n\r\n      {showApiTesting && (\r\n        <div style={{ position: 'absolute', top: 0, right: 0, width: '550px', height: '100%', background: 'var(--vscode-sideBar-background)', borderLeft: '1px solid var(--vscode-panel-border)', zIndex: 1000, overflow: 'auto' }}>\r\n          <ApiTestingUI onClose={toggleApiTesting} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  </>);\r\n};\r\n","/**\r\n * Copyright (c) Rui Figueira.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport '@web/common.css';\r\nimport { applyTheme } from '@web/theme';\r\nimport '@web/third_party/vscode/codicon.css';\r\nimport * as ReactDOM from 'react-dom/client';\r\nimport { CrxRecorder } from './crxRecorder';\r\n\r\n(async () => {\r\n  applyTheme();\r\n  ReactDOM.createRoot(document.querySelector('#root')!).render(<CrxRecorder />);\r\n})();\r\n"],"file":"index.js"}